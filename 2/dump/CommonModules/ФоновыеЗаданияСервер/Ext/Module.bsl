
Функция ЗапуститьФоновоеВыполнение(ТекстПроцедуры,СтруктураПараметров=Неопределено, ИД_Задания = Неопределено, Задание = "") Экспорт
	
	Если ИД_Задания = Неопределено Тогда
		УникальныйИдентификатор = Новый УникальныйИдентификатор;
	Иначе
		УникальныйИдентификатор = ИД_Задания;
	КонецЕсли;
	
	ПараметрыВыполнения = Новый Массив;
	ПараметрыВыполнения.Добавить(СтруктураПараметров);
	
	Если Задание = "ПолучитьДанныеПоРазделам" Тогда
		ФоновыеЗадания.Выполнить("ФоновыеЗаданияСервер.ФоноваяПроцедураЗагрузкиДанныхРаздела",ПараметрыВыполнения,УникальныйИдентификатор);
	Иначе
		ФоновыеЗадания.Выполнить("ФоновыеЗаданияСервер.ФоноваяПроцедураЗагрузкиДанныхКурса",ПараметрыВыполнения,УникальныйИдентификатор);
	КонецЕсли;
	
	Возврат УникальныйИдентификатор;

КонецФункции

#Область ЗагрузкаКурса

Процедура ФоноваяПроцедураЗагрузкиДанныхКурса(ПараметрыВыполнения) Экспорт
	
	Попытка
		ПолучитьДанныеТестаНаСервере(ПараметрыВыполнения.СтруктураПараметров);
	Исключение
		ЗаписьЖурналаРегистрации("Ошибка при загрузку вопросов", УровеньЖурналаРегистрации.Ошибка,,,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

Процедура ПолучитьДанныеТестаНаСервере(СтруктураПараметров)
	
	ПараметрыОтбора = Новый Структура("Пометка", Истина);
	ВыбранныеРазделы = СтруктураПараметров.СписокРазделов.НайтиСтроки(ПараметрыОтбора);
	
	ВыборкаКурс = ПолучитьДанныеДляОбновления(ВыбранныеРазделы,СтруктураПараметров.ТипСайта);
	
	Соединение = Новый HTTPСоединение(СтруктураПараметров.Сервер,443,,,,, Новый ЗащищенноеСоединениеOpenSSL());		
	
	Пока ВыборкаКурс.Следующий() Цикл
		
		НомерТекущегоРаздела = 0;
		
		Для НомерТекущегоРаздела = 1 По 14 Цикл 
			
			Ответ = Неопределено;
			
			КоличествоВопросов = ВыборкаКурс.КоличествоВопросов;
			НомерТекущегоВопроса = 1;
			
			Пока НомерТекущегоВопроса <= КоличествоВопросов Цикл
				
				ПараметрыЗапроса = ПолучитьПараметрыЗапроса(ВыборкаКурс, НомерТекущегоВопроса, НомерТекущегоРаздела, СтруктураПараметров.ТипСайта);
				ТекстЗапроса = ПолучитьТекстЗапроса(ПараметрыЗапроса);
				
				Запрос = Новый HTTPЗапрос(ТекстЗапроса, СтруктураПараметров.Заголовки);
				Ответ = Соединение.Получить(Запрос);
				
				НомерТекущегоВопроса = НомерТекущегоВопроса + 1;
				
				Если Не Ответ.КодСостояния = 200 Тогда
					Продолжить;
				КонецЕсли;
				
				РезультатЗапроса = Ответ.ПолучитьТелоКакСтроку();
				РасшифроватьXML(РезультатЗапроса, ТекстЗапроса, ВыборкаКурс.Раздел, НомерТекущегоРаздела, СтруктураПараметров);
				
			КонецЦикла;
			
			Пока Ответ = Неопределено Или Ответ.КодСостояния = 200 Цикл
				
				ПараметрыЗапроса = ПолучитьПараметрыЗапроса(ВыборкаКурс, НомерТекущегоВопроса, НомерТекущегоРаздела, СтруктураПараметров.ТипСайта);
				ТекстЗапроса = ПолучитьТекстЗапроса(ПараметрыЗапроса);
				
				Запрос = Новый HTTPЗапрос(ТекстЗапроса, СтруктураПараметров.Заголовки);
				Ответ = Соединение.Получить(Запрос);
				
				Если Не Ответ.КодСостояния = 200 Тогда
					Продолжить;
				КонецЕсли;
				
				РезультатЗапроса = Ответ.ПолучитьТелоКакСтроку();
				РасшифроватьXML(РезультатЗапроса, ТекстЗапроса, ВыборкаКурс.Раздел, НомерТекущегоРаздела, СтруктураПараметров);
				
				НомерТекущегоВопроса = НомерТекущегоВопроса + 1;
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
	ДеревоДанных = ЗаполнитьДеревоЗначений(СтруктураПараметров);
	
	ИтоговыеДанные = Новый Структура;
	ИтоговыеДанные.Вставить("ДеревоДанных", ДеревоДанных);
	ИтоговыеДанные.Вставить("ЗагружаемыеВопросы", СтруктураПараметров.ЗагружаемыеВопросы);
	
	ПоместитьВоВременноеХранилище(ИтоговыеДанные, СтруктураПараметров.АдресВременногоХранилища);

КонецПроцедуры

#КонецОбласти

#Область ЗагрузкаРазделаКурса

Процедура ФоноваяПроцедураЗагрузкиДанныхРаздела(ПараметрыВыполнения) Экспорт
	
	Попытка
		ПолучитьДанныеТестаНаСервере2(ПараметрыВыполнения.СтруктураПараметров);
	Исключение
		ЗаписьЖурналаРегистрации("Ошибка при загрузку вопросов", УровеньЖурналаРегистрации.Ошибка,,,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

Процедура ПолучитьДанныеТестаНаСервере2(СтруктураПараметров)
	
	Раздел = СтруктураПараметров.Раздел;

	Соединение = Новый HTTPСоединение(СтруктураПараметров.Сервер,443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	НомерТекущегоВопроса = 1;
	
	Пока НомерТекущегоВопроса <= СтруктураПараметров.КоличествоВопросов Цикл 
		
		
		ПараметрыЗапроса = ПолучитьПараметрыЗапроса(Раздел, НомерТекущегоВопроса, Раздел.НомерРаздела, СтруктураПараметров.ТипСайта);
		
		ТекстЗапроса = ПолучитьТекстЗапроса(ПараметрыЗапроса);
		
		Запрос = Новый HTTPЗапрос(ТекстЗапроса, СтруктураПараметров.Заголовки);
		Ответ = Соединение.Получить(Запрос);
		
		НомерТекущегоВопроса = НомерТекущегоВопроса + 1;
		
		Если Не Ответ.КодСостояния = 200 Тогда
			Продолжить;
		КонецЕсли;
		
		РезультатЗапроса = Ответ.ПолучитьТелоКакСтроку();
		РасшифроватьXML(РезультатЗапроса, ТекстЗапроса, СтруктураПараметров.Курс, Раздел.НомерРаздела, СтруктураПараметров);
	КонецЦикла;
	
	Пока Ответ = Неопределено Или Ответ.КодСостояния = 200 Цикл
		
		ПараметрыЗапроса = ПолучитьПараметрыЗапроса(Раздел, НомерТекущегоВопроса, Раздел.НомерРаздела, СтруктураПараметров.ТипСайта);
		ТекстЗапроса = ПолучитьТекстЗапроса(ПараметрыЗапроса);
		
		Запрос = Новый HTTPЗапрос(ТекстЗапроса, СтруктураПараметров.Заголовки);
		Ответ = Соединение.Получить(Запрос);
		
		Если Не Ответ.КодСостояния = 200 Тогда
			Продолжить;
		КонецЕсли;
		
		РезультатЗапроса = Ответ.ПолучитьТелоКакСтроку();
		РасшифроватьXML(РезультатЗапроса, ТекстЗапроса, СтруктураПараметров.Курс, Раздел.НомерРаздела, СтруктураПараметров);
		
		НомерТекущегоВопроса = НомерТекущегоВопроса + 1;
		
	КонецЦикла;
	
	ДеревоДанных = ЗаполнитьДеревоЗначений(СтруктураПараметров);
	
	ИтоговыеДанные = Новый Структура;
	ИтоговыеДанные.Вставить("ДеревоДанных", ДеревоДанных);
	ИтоговыеДанные.Вставить("ЗагружаемыеВопросы", СтруктураПараметров.ЗагружаемыеВопросы);
	
	ПоместитьВоВременноеХранилище(ИтоговыеДанные, СтруктураПараметров.АдресВременногоХранилища);

КонецПроцедуры

#КонецОбласти

Функция ПолучитьДанныеДляОбновления(Разделы, ТипСайта)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыФормированияЗапросаДляОбновленияТестов.Курс КАК Раздел,
	|	ПараметрыФормированияЗапросаДляОбновленияТестов.НомерРаздела КАК НомерРаздела,
	|	ВЫБОР
	|		КОГДА &ТипСайта = ""free""
	|			ТОГДА ПараметрыФормированияЗапросаДляОбновленияТестов.Free
	|		ИНАЧЕ ПараметрыФормированияЗапросаДляОбновленияТестов.Dist
	|	КОНЕЦ КАК Предприятие,
	|	ВЫБОР
	|		КОГДА &ТипСайта = ""free""
	|			ТОГДА ПараметрыФормированияЗапросаДляОбновленияТестов.DL_RES_Free
	|		ИНАЧЕ ПараметрыФормированияЗапросаДляОбновленияТестов.DL_RES_Dist
	|	КОНЕЦ КАК DL_RES,
	|	ВЫБОР
	|		КОГДА &ТипСайта = ""free""
	|			ТОГДА ПараметрыФормированияЗапросаДляОбновленияТестов.FreeДваСимвола
	|		ИНАЧЕ ПараметрыФормированияЗапросаДляОбновленияТестов.DistДваСимвола
	|	КОНЕЦ КАК ДваСимволаВНомереРаздела,
	|	ВЫБОР
	|		КОГДА &ТипСайта = ""free""
	|			ТОГДА ПараметрыФормированияЗапросаДляОбновленияТестов.FreeУменьшитьНаименованиеПредприятияВЗапросе
	|		ИНАЧЕ ПараметрыФормированияЗапросаДляОбновленияТестов.DistУменьшитьНаименованиеПредприятияВЗапросе
	|	КОНЕЦ КАК УменьшитьНаименованиеПредприятия,
	|	ВЫБОР
	|		КОГДА &ТипСайта = ""free""
	|			ТОГДА ПараметрыФормированияЗапросаДляОбновленияТестов.FreeНомерРазделаСКоторогоУменьшатьНаименованиеПредприятия
	|		ИНАЧЕ ПараметрыФормированияЗапросаДляОбновленияТестов.DistНомерРазделаСКоторогоУменьшатьНаименованиеПредприятия
	|	КОНЕЦ КАК НомерРазделаУменьшенияНаименованияПредприятия,
	|	ВЫБОР
	|		КОГДА &ТипСайта = ""free""
	|			ТОГДА ПараметрыФормированияЗапросаДляОбновленияТестов.ДопПараметрРаздела_Free
	|		ИНАЧЕ ПараметрыФормированияЗапросаДляОбновленияТестов.ДопПараметрРаздела_Dist
	|	КОНЕЦ КАК ДопПараметрыРаздела,
	|	ЕСТЬNULL(ПараметрыФормированияЗапросаДляОбновленияТестов.Курс.КоличествоВопросов, 100) КАК КоличествоВопросов
	|ИЗ
	|	РегистрСведений.ПараметрыФормированияЗапросаДляОбновленияТестов КАК ПараметрыФормированияЗапросаДляОбновленияТестов
	|ГДЕ
	|	ПараметрыФормированияЗапросаДляОбновленияТестов.Курс В(&СписокРазделов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерРаздела";
	
	Запрос.УстановитьПараметр("СписокРазделов", Разделы);
	Запрос.УстановитьПараметр("ТипСайта", ТипСайта);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи;
	
КонецФункции

Функция ПолучитьПараметрыЗапроса(Раздел, НомерВопроса, НомерРаздела, ТипСайта)
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("DL_RES", СокрЛП(Раздел.DL_RES));
	ПараметрыЗапроса.Вставить("НомерРаздела", НомерРаздела);
	ПараметрыЗапроса.Вставить("НомерВопроса", НомерВопроса);
	
	Если Раздел.ДваСимволаВНомереРаздела Тогда
		НомерРазделаТип = Формат(НомерРаздела,"ЧЦ=2; ЧВН=");
	Иначе
		НомерРазделаТип = НомерРаздела;
	КонецЕсли;
	ПараметрыЗапроса.Вставить("НомерРазделаТип", НомерРазделаТип);
	
	Если Раздел.УменьшитьНаименованиеПредприятия И 
		Число(НомерРаздела) >= Раздел.НомерРазделаУменьшенияНаименованияПредприятия Тогда
		
		Предприятие = Лев(Раздел.Предприятие, СтрДлина(Раздел.Предприятие)-1);
	Иначе
		Предприятие = Раздел.Предприятие;
	КонецЕсли;
	
	ПараметрыЗапроса.Вставить("Предприятие", Предприятие);
	ПараметрыЗапроса.Вставить("ДопПараметрРаздела", СокрЛП(Раздел.ДопПараметрыРаздела));
	
	Возврат ПараметрыЗапроса;
	
КонецФункции

Функция ПолучитьТекстЗапроса(ПараметрыЗапроса)
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("/Resource/DL_RES_");
	МассивСтрок.Добавить(ПараметрыЗапроса.DL_RES);
	МассивСтрок.Добавить("/Gruppa");
	МассивСтрок.Добавить(ПараметрыЗапроса.НомерРаздела);
	МассивСтрок.Добавить(ПараметрыЗапроса.ДопПараметрРаздела);
	МассивСтрок.Добавить("/_Vopros___8470_");
	МассивСтрок.Добавить(ПараметрыЗапроса.НомерРазделаТип);
	МассивСтрок.Добавить(Формат(ПараметрыЗапроса.НомерВопроса,"ЧЦ=3; ЧВН=; ЧГ=0"));
	МассивСтрок.Добавить("._1S_Predpriyatie_8.0._");
	МассивСтрок.Добавить(ПараметрыЗапроса.Предприятие);
	МассивСтрок.Добавить("/Question.xml");
	
	ТекстЗапроса = СтрСоединить(МассивСтрок);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура РасшифроватьXML(ТекстXML, ТекстЗапросаККартинке, Курс, НомерРаздела, СтруктураПараметров)
	
	ЧтениеXml = Новый ЧтениеXML;
	ЧтениеXml.УстановитьСтроку(ТекстXML);
	
	ПравильныйОтвет = "";
	
	СтрокаВопрос = СтруктураПараметров.ЗагружаемыеВопросы.Добавить(); 
	СтрокаВопрос.ТекстЗапроса = ТекстЗапросаККартинке;
	СтрокаВопрос.Курс = Курс;
	СтрокаВопрос.НомерРаздела = НомерРаздела;
	МассивПодскзок = Новый Массив; 
	
	КартинкаВЗадании = Ложь;
	КартинкаВКомментарии = Ложь;
	ЭтоДанныеКоментария = Ложь;
	
	Пока ЧтениеXml.Прочитать() Цикл 
		
		Если ЧтениеXml.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
			Если ЧтениеXml.Имя = "itemBody" Тогда
				
				//в данном атрибуте хранится вопрос
				ЧтениеXml.Прочитать(); 
				СтрокаВопрос.Вопрос = СокрЛП(ЧтениеXml.Значение);
				КартинкаВЗадании = Истина;
				
			ИначеЕсли ЧтениеXml.Имя = "IMG" Тогда
				
				Если КартинкаВЗадании Тогда
					//Тут хранится имя фото
					СтрокаВопрос.ИмяКартинки = ЧтениеXml.ЗначениеАтрибута("src");
					СтрокаВопрос.ЕстьКартинка = Истина;
				ИначеЕсли КартинкаВКомментарии Тогда
					ТекстЗапросаККартинке = СтрШаблон("img <%1/%2>", СтрокаВопрос.ТекстЗапроса, ЧтениеXml.ЗначениеАтрибута("src"));
					ТекстЗапросаККартинке = СтрЗаменить(ТекстЗапросаККартинке,"/Question.xml","");
					МассивПодскзок.Добавить(ТекстЗапросаККартинке);
				КонецЕсли;
				
				
			ИначеЕсли ЧтениеXml.Имя = "correctResponse" Тогда
				
				//В данном аттрибуте хранится правильный ответ
				ЧтениеXml.Прочитать();
				//атрибут value
				ЧтениеXml.Прочитать();
				ПравильныйОтвет = ЧтениеXml.Значение;
				
			ИначеЕсли ЧтениеXml.Имя = "assessmentItem" Тогда  
				
				//Получаем идентификатор для строки, по которой в дальнейшем будем соединять вопросы и ответы
				Идентификатор = ЧтениеXml.ЗначениеАтрибута("identifier"); 
				
				СтрокаСНомером = ЧтениеXml.ЗначениеАтрибута("title");
				//Считается, что после точки с заяптой начинается номер
				НачалоНомера = СтрНайти(СтрокаСНомером, ";") + 1;
				КонецНомера  = СтрНайти(СтрокаСНомером, ".");
				
				
				Если Не КонецНомера = 0 И Не НачалоНомера = 0 Тогда
					СтрокаВопрос.НомерВопроса = СокрЛП(Сред(СтрокаСНомером, НачалоНомера, КонецНомера-НачалоНомера));
				КонецЕсли;
				
				////Надо добавить лидирующий нуль, если длина вопроса меншье 5 символов
				Если СтрДлина(СтрокаВопрос.НомерВопроса) = 4 Тогда
					СтрокаВопрос.НомерВопроса = "0" + СтрокаВопрос.НомерВопроса;
				КонецЕсли;
				
				СтрокаВопрос.Идентификатор = Идентификатор;
				
			ИначеЕсли ЧтениеXml.Имя = "simpleChoice" Тогда
				
				//В данном атрибуте хранится ответ
				
				//Проверяем, данный ответ правильный
				НомерВопроса = ЧтениеXml.ЗначениеАтрибута("identifier");
				Если НомерВопроса = ПравильныйОтвет Тогда
					ЭтоПравильныйОтвет = Истина;
				Иначе
					ЭтоПравильныйОтвет = Ложь;
				КонецЕсли;
				
				ЧтениеXml.Прочитать();
				
				СтрокаОтвет = СтруктураПараметров.ОтветыНаВопросы.Добавить();
				СтрокаОтвет.Идентификатор = Идентификатор;
				СтрокаОтвет.Правильный    = ЭтоПравильныйОтвет;
				СтрокаОтвет.Ответ = ЧтениеXml.Значение;
				СтрокаОтвет.Номер = Число(Прав(НомерВопроса,1));
				
			ИначеЕсли ЧтениеXml.Имя = "infoControl" Тогда
				ЭтоДанныеКоментария = Истина;
				КартинкаВЗадании = Ложь;
				КартинкаВКомментарии = Истина;
				
				// Подсказки                
				ЧтениеXml.Прочитать();
				МассивПодскзок.Добавить(СокрЛП(ЧтениеXml.Значение));
			ИначеЕсли ЧтениеXml.Имя = "A" Тогда
				// ссылки на сайт в подсказках	
				МассивПодскзок.Добавить("Подробнее: " + ЧтениеXml.ЗначениеАтрибута("href"));
				
			КонецЕсли;
			
		ИначеЕсли ЧтениеXml.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			
			Если ЧтениеXml.Имя = "itemBody" Тогда
				КартинкаВЗадании = Ложь;
				КартинкаВКомментарии = Ложь;
			ИначеЕсли ЧтениеXml.Имя = "infoControl" Тогда 
				ЭтоДанныеКоментария = Ложь;
			КонецЕсли;
			
		ИначеЕсли ЭтоДанныеКоментария И ЧтениеXml.Имя = "#text" Тогда
			МассивПодскзок.Добавить(ЧтениеXml.Значение);
		КонецЕсли;
		
	КонецЦикла;
	
	СтрокаВопрос.НомерИВопрос = СтрокаВопрос.НомерВопроса + СтрокаВопрос.Вопрос;
	
	Если ЗначениеЗаполнено(МассивПодскзок) Тогда
		Подсказка = СтрСоединить(МассивПодскзок, Символы.ПС);
		СтрокаВопрос.Подсказка = Подсказка;
	КонецЕсли;
	
КонецПроцедуры

Функция ЗаполнитьДеревоЗначений(СтруктураПараметров)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТС_ТестыСайт.Идентификатор КАК Идентификатор,
	|	ВЫРАЗИТЬ(ТС_ТестыСайт.Ответ КАК СТРОКА(1024)) КАК ОтветНаСайте,
	|	ТС_ТестыСайт.Правильный КАК ПравильныйОтветНаСайте,
	|	ТС_ТестыСайт.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_ДанныеСайта_Ответы
	|ИЗ
	|	&ТС_Тесты_Ответы КАК ТС_ТестыСайт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТС_ТестыСайт_Вопросы.Раздел КАК Раздел,
	|	ТС_ТестыСайт_Вопросы.Вопрос КАК ВопросНаСайте,
	|	ТС_ТестыСайт_Вопросы.Идентификатор КАК Идентификатор,
	|	ТС_ТестыСайт_Вопросы.ЕстьКартинка КАК ЕстьКартинкаНаСайте,
	|	ТС_ТестыСайт_Вопросы.Подсказка КАК ПодсказкаНаСайте,
	|	ТС_ТестыСайт_Вопросы.НомерВопроса КАК НомерВопросаНаСайте,
	|	ТС_ТестыСайт_Вопросы.НомерИВопрос КАК НомерИВопрос,
	|	ТС_ТестыСайт_Вопросы.Курс КАК Курс,
	|	ТС_ТестыСайт_Вопросы.НомерРаздела КАК НомерРаздела
	|ПОМЕСТИТЬ ВТ_ДанныеСайта_Вопросы
	|ИЗ
	|	&ВТ_ДанныеСайта_Вопросы КАК ТС_ТестыСайт_Вопросы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТС_Тесты.Ссылка КАК Раздел,
	|	ВТ_ДанныеСайта_Вопросы.ВопросНаСайте КАК ВопросНаСайте,
	|	ВТ_ДанныеСайта_Вопросы.ЕстьКартинкаНаСайте КАК ЕстьКартинкаНаСайте,
	|	ВТ_ДанныеСайта_Вопросы.ПодсказкаНаСайте КАК ПодсказкаНаСайте,
	|	ВЫРАЗИТЬ(ВТ_ДанныеСайта_Ответы.ОтветНаСайте КАК СТРОКА(1000)) КАК ОтветНаСайте,
	|	ВТ_ДанныеСайта_Ответы.ПравильныйОтветНаСайте КАК ПравильныйОтветНаСайте,
	|	ВТ_ДанныеСайта_Вопросы.ВопросНаСайте КАК Вопрос,
	|	ВТ_ДанныеСайта_Вопросы.Идентификатор КАК КоличествоВопросовНаСайте,
	|	ВТ_ДанныеСайта_Ответы.Номер КАК ПорядковыйНомерОтветаНаСайте,
	|	ВТ_ДанныеСайта_Вопросы.Идентификатор КАК ИдентификаторВопроса,
	|	ВТ_ДанныеСайта_Вопросы.НомерВопросаНаСайте КАК НомерВопросаНаСайте,
	|	ВТ_ДанныеСайта_Вопросы.НомерИВопрос КАК НомерИВопрос,
	|	ВТ_ДанныеСайта_Вопросы.Курс КАК Курс,
	|	ВТ_ДанныеСайта_Вопросы.НомерРаздела КАК НомерРаздела,
	|	ТС_Тесты.Наименование КАК РазделНаименование
	|ПОМЕСТИТЬ ВТ_Сайт_ВопросыОтветы
	|ИЗ
	|	ВТ_ДанныеСайта_Вопросы КАК ВТ_ДанныеСайта_Вопросы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеСайта_Ответы КАК ВТ_ДанныеСайта_Ответы
	|		ПО ВТ_ДанныеСайта_Вопросы.Идентификатор = ВТ_ДанныеСайта_Ответы.Идентификатор
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТС_Тесты КАК ТС_Тесты
	|		ПО (ТС_Тесты.ЭтоГруппа)
	|			И (НЕ ТС_Тесты.ПометкаУдаления)
	|			И ВТ_ДанныеСайта_Вопросы.Курс = ТС_Тесты.Владелец
	|			И ВТ_ДанныеСайта_Вопросы.НомерРаздела = ТС_Тесты.НомерРаздела
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТС_Тесты.Ссылка КАК ВопросСсылкаВБазе,
	|	ТС_Тесты.Вопрос КАК ВопросВБазе,
	|	ТС_Тесты.Подсказка КАК ПодсказкаВБазе,
	|	ВЫРАЗИТЬ(ТС_ТестыОтветы.Ответ КАК СТРОКА(1024)) КАК ОтветВБазе,
	|	ТС_ТестыОтветы.Правильный КАК ПравильныйОтветВБазе,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТС_Тесты.Изображение, ЗНАЧЕНИЕ(Справочник.ТС_Файлы.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ТС_Файлы.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьКартинкаВБазе,
	|	ТС_Тесты.Родитель КАК Раздел,
	|	ТС_Тесты.Вопрос КАК Вопрос,
	|	ВЫРАЗИТЬ(ТС_Тесты.Владелец КАК Справочник.ТС_Курсы).КоличествоВопросов КАК КоличествоВопросовВБазе,
	|	ТС_ТестыОтветы.НомерСтроки КАК ПорядковыйНомерОтветаВБазе,
	|	ТС_Тесты.НомерВопроса КАК НомерВопросаВБазе,
	|	ВЫРАЗИТЬ("""" + ТС_Тесты.НомерВопроса + ТС_Тесты.Вопрос КАК СТРОКА(1000)) КАК НомерИВопрос,
	|	ТС_Тесты.Владелец КАК Курс,
	|	ТС_Тесты.НомерРаздела КАК НомерРаздела,
	|	ТС_Тесты.Родитель.Наименование КАК РазделНаименование
	|ПОМЕСТИТЬ ВТ_ВопросыОтветыВБазе
	|ИЗ
	|	Справочник.ТС_Тесты.Ответы КАК ТС_ТестыОтветы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТС_Тесты КАК ТС_Тесты
	|		ПО (ТС_Тесты.Владелец В
	|				(ВЫБРАТЬ
	|					ВТ_ДанныеСайта_Вопросы.Курс КАК Курс
	|				ИЗ
	|					ВТ_ДанныеСайта_Вопросы КАК ВТ_ДанныеСайта_Вопросы))
	|			И ТС_ТестыОтветы.Ссылка = ТС_Тесты.Ссылка
	|ГДЕ
	|	НЕ ТС_Тесты.ПометкаУдаления
	|	И НЕ ТС_Тесты.ЭтоГруппа
	|	И НЕ ТС_Тесты.Родитель = ЗНАЧЕНИЕ(Справочник.ТС_Тесты.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Сайт_ВопросыОтветы.Раздел КАК Раздел,
	|	ВТ_Сайт_ВопросыОтветы.НомерВопросаНаСайте КАК НомерВопроса,
	|	ВЫРАЗИТЬ(ВТ_Сайт_ВопросыОтветы.Вопрос КАК СТРОКА(1024)) КАК Вопрос,
	|	ЗНАЧЕНИЕ(Справочник.ТС_Тесты.ПустаяСсылка) КАК ТестСсылка,
	|	"""" КАК ВопросВБазе,
	|	ВТ_Сайт_ВопросыОтветы.ВопросНаСайте КАК ВопросНаСайте,
	|	ВТ_Сайт_ВопросыОтветы.ОтветНаСайте КАК ОтветНаСайте,
	|	"""" КАК ОтветВБазе,
	|	ВТ_Сайт_ВопросыОтветы.ПравильныйОтветНаСайте КАК ПравильныйОтветНаСайте,
	|	"""" КАК ПравильныйОтветВБазе,
	|	"""" КАК ПодсказкаВБазе,
	|	ЛОЖЬ КАК ЕстьКартинкаВБазе,
	|	ВТ_Сайт_ВопросыОтветы.ЕстьКартинкаНаСайте КАК ЕстьКартинкаНаСайте,
	|	ВТ_Сайт_ВопросыОтветы.ПодсказкаНаСайте КАК ПодсказкаНаСайте,
	|	"""" КАК КоличествоВопросовВБазе,
	|	ВТ_Сайт_ВопросыОтветы.КоличествоВопросовНаСайте КАК КоличествоВопросовНаСайте,
	|	0 КАК ПорядковыйНомерОтветаВБазе,
	|	ВТ_Сайт_ВопросыОтветы.ПорядковыйНомерОтветаНаСайте КАК ПорядковыйНомерОтветаНаСайте,
	|	ВТ_Сайт_ВопросыОтветы.ИдентификаторВопроса КАК ИдентификаторВопроса,
	|	"""" КАК НомерВопросаВБазе,
	|	ВТ_Сайт_ВопросыОтветы.НомерВопросаНаСайте КАК НомерВопросаНаСайте,
	|	ВТ_Сайт_ВопросыОтветы.НомерИВопрос КАК НомерИВопрос,
	|	ВТ_Сайт_ВопросыОтветы.Курс КАК Курс,
	|	ВТ_Сайт_ВопросыОтветы.НомерРаздела КАК НомерРаздела,
	|	ВТ_Сайт_ВопросыОтветы.РазделНаименование КАК РазделНаименование
	|ИЗ
	|	ВТ_Сайт_ВопросыОтветы КАК ВТ_Сайт_ВопросыОтветы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ВопросыОтветыВБазе.Раздел,
	|	ВТ_ВопросыОтветыВБазе.НомерВопросаВБазе,
	|	ВЫРАЗИТЬ(ВТ_ВопросыОтветыВБазе.Вопрос КАК СТРОКА(1024)),
	|	ВТ_ВопросыОтветыВБазе.ВопросСсылкаВБазе,
	|	ВТ_ВопросыОтветыВБазе.ВопросВБазе,
	|	"""",
	|	"""",
	|	ВТ_ВопросыОтветыВБазе.ОтветВБазе,
	|	"""",
	|	ВТ_ВопросыОтветыВБазе.ПравильныйОтветВБазе,
	|	ВТ_ВопросыОтветыВБазе.ПодсказкаВБазе,
	|	ВТ_ВопросыОтветыВБазе.ЕстьКартинкаВБазе,
	|	ЛОЖЬ,
	|	"""",
	|	ВТ_ВопросыОтветыВБазе.КоличествоВопросовВБазе,
	|	0,
	|	ВТ_ВопросыОтветыВБазе.ПорядковыйНомерОтветаВБазе,
	|	0,
	|	"""",
	|	ВТ_ВопросыОтветыВБазе.НомерВопросаВБазе,
	|	"""",
	|	ВТ_ВопросыОтветыВБазе.НомерИВопрос,
	|	ВТ_ВопросыОтветыВБазе.Курс,
	|	ВТ_ВопросыОтветыВБазе.НомерРаздела,
	|	ВТ_ВопросыОтветыВБазе.РазделНаименование
	|ИЗ
	|	ВТ_ВопросыОтветыВБазе КАК ВТ_ВопросыОтветыВБазе
	|
	|УПОРЯДОЧИТЬ ПО
	|	РазделНаименование,
	|	НомерИВопрос
	|ИТОГИ
	|	МАКСИМУМ(Вопрос),
	|	МАКСИМУМ(ТестСсылка),
	|	МАКСИМУМ(ВопросВБазе),
	|	МАКСИМУМ(ВопросНаСайте),
	|	МАКСИМУМ(ПодсказкаВБазе),
	|	МАКСИМУМ(ЕстьКартинкаВБазе),
	|	МАКСИМУМ(ЕстьКартинкаНаСайте),
	|	МАКСИМУМ(ПодсказкаНаСайте),
	|	МАКСИМУМ(КоличествоВопросовВБазе),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоВопросовНаСайте),
	|	МАКСИМУМ(ИдентификаторВопроса),
	|	МАКСИМУМ(НомерВопросаВБазе),
	|	МАКСИМУМ(НомерВопросаНаСайте),
	|	МАКСИМУМ(НомерРаздела)
	|ПО
	|	Курс,
	|	Раздел,
	|	НомерИВопрос";
	Запрос.УстановитьПараметр("ТС_Тесты_Ответы", СтруктураПараметров.ОтветыНаВопросы);
	Запрос.УстановитьПараметр("ВТ_ДанныеСайта_Вопросы", СтруктураПараметров.ЗагружаемыеВопросы);
	
	Если СтруктураПараметров.Свойство("Раздел") Тогда
		Запрос = ЗапросДляРазделаКурса(СтруктураПараметров);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаКурс = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ДеревоДанных = СтруктураПараметров.ДеревоДанных;
	
	Пока ВыборкаКурс.Следующий() Цикл
		
		СтрокаУровеньКурс = ДеревоДанных.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаУровеньКурс, ВыборкаКурс,"Курс");
		
		ВыборкаРаздел = ВыборкаКурс.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаРаздел.Следующий() Цикл
			
			СтрокаУровеньРаздела = СтрокаУровеньКурс.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаУровеньРаздела,ВыборкаРаздел, "Курс,Раздел,КоличествоВопросовНаСайте,КоличествоВопросовВБазе,НомерРаздела");
			ВыборкаВопрос = ВыборкаРаздел.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаВопрос.Следующий() Цикл
				
				СтрокаУровеньВопрос = СтрокаУровеньРаздела.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаУровеньВопрос, ВыборкаВопрос, "Курс,Раздел,Вопрос,ВопросВБазе,ВопросНаСайте,ЕстьКартинкаВБазе,ЕстьКартинкаНаСайте,ТестСсылка,ПодсказкаВБазе,ПодсказкаНаСайте,ИдентификаторВопроса,НомерВопросаВБазе,НомерВопросаНаСайте");
				
				Выборка = ВыборкаВопрос.Выбрать();
				МассивОтветовИзБазы  = Новый Массив;
				МассивОтветовИзСайта = Новый Массив;
				
				Пока Выборка.Следующий() Цикл
					
					Если ЗначениеЗаполнено(Выборка.ОтветНаСайте) Тогда
						СтруктураОтвета = СтруктураОтветаДляВопросаНаСайте();
						СтруктураОтвета.ПорядковыйНомерОтвета = Выборка.ПорядковыйНомерОтветаНаСайте;
					Иначе
						СтруктураОтвета = СтруктураОтветаДляВопросаВБазе();
						СтруктураОтвета.ПорядковыйНомерОтвета = Выборка.ПорядковыйНомерОтветаВБазе;
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(СтруктураОтвета, Выборка);
					
					Если ЗначениеЗаполнено(Выборка.ОтветНаСайте) Тогда
						МассивОтветовИзСайта.Добавить(СтруктураОтвета);
					Иначе
						МассивОтветовИзБазы.Добавить(СтруктураОтвета);
					КонецЕсли;
					
				КонецЦикла;
				
				ДанныеОтветов = ОбъединитьСтруктурыОтветов(МассивОтветовИзБазы, МассивОтветовИзСайта);
				
				Для Каждого СтрОтвет Из ДанныеОтветов Цикл
					СтрокаУровеньОтвет = СтрокаУровеньВопрос.Строки.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаУровеньОтвет,СтрОтвет);
				КонецЦикла;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	Возврат ДеревоДанных;
	
КонецФункции 


Функция ЗапросДляРазделаКурса(СтруктураПараметров)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТС_ТестыСайт.Идентификатор КАК Идентификатор,
		|	ВЫРАЗИТЬ(ТС_ТестыСайт.Ответ КАК СТРОКА(1024)) КАК ОтветНаСайте,
		|	ТС_ТестыСайт.Правильный КАК ПравильныйОтветНаСайте,
		|	ТС_ТестыСайт.Номер КАК Номер
		|ПОМЕСТИТЬ ВТ_ДанныеСайта_Ответы
		|ИЗ
		|	&ТС_Тесты_Ответы КАК ТС_ТестыСайт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТС_ТестыСайт_Вопросы.Раздел КАК Раздел,
		|	ТС_ТестыСайт_Вопросы.Вопрос КАК ВопросНаСайте,
		|	ТС_ТестыСайт_Вопросы.Идентификатор КАК Идентификатор,
		|	ТС_ТестыСайт_Вопросы.ЕстьКартинка КАК ЕстьКартинкаНаСайте,
		|	ТС_ТестыСайт_Вопросы.Подсказка КАК ПодсказкаНаСайте,
		|	ТС_ТестыСайт_Вопросы.НомерВопроса КАК НомерВопросаНаСайте,
		|	ТС_ТестыСайт_Вопросы.НомерИВопрос КАК НомерИВопрос,
		|	ТС_ТестыСайт_Вопросы.Курс КАК Курс,
		|	ТС_ТестыСайт_Вопросы.НомерРаздела КАК НомерРаздела
		|ПОМЕСТИТЬ ВТ_ДанныеСайта_Вопросы
		|ИЗ
		|	&ВТ_ДанныеСайта_Вопросы КАК ТС_ТестыСайт_Вопросы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТС_Тесты.Ссылка КАК Раздел,
		|	ВТ_ДанныеСайта_Вопросы.ВопросНаСайте КАК ВопросНаСайте,
		|	ВТ_ДанныеСайта_Вопросы.ЕстьКартинкаНаСайте КАК ЕстьКартинкаНаСайте,
		|	ВТ_ДанныеСайта_Вопросы.ПодсказкаНаСайте КАК ПодсказкаНаСайте,
		|	ВЫРАЗИТЬ(ВТ_ДанныеСайта_Ответы.ОтветНаСайте КАК СТРОКА(1000)) КАК ОтветНаСайте,
		|	ВТ_ДанныеСайта_Ответы.ПравильныйОтветНаСайте КАК ПравильныйОтветНаСайте,
		|	ВТ_ДанныеСайта_Вопросы.ВопросНаСайте КАК Вопрос,
		|	ВТ_ДанныеСайта_Вопросы.Идентификатор КАК КоличествоВопросовНаСайте,
		|	ВТ_ДанныеСайта_Ответы.Номер КАК ПорядковыйНомерОтветаНаСайте,
		|	ВТ_ДанныеСайта_Вопросы.Идентификатор КАК ИдентификаторВопроса,
		|	ВТ_ДанныеСайта_Вопросы.НомерВопросаНаСайте КАК НомерВопросаНаСайте,
		|	ВТ_ДанныеСайта_Вопросы.НомерИВопрос КАК НомерИВопрос,
		|	ВТ_ДанныеСайта_Вопросы.Курс КАК Курс,
		|	ВТ_ДанныеСайта_Вопросы.НомерРаздела КАК НомерРаздела,
		|	ТС_Тесты.Наименование КАК РазделНаименование
		|ПОМЕСТИТЬ ВТ_Сайт_ВопросыОтветы
		|ИЗ
		|	ВТ_ДанныеСайта_Вопросы КАК ВТ_ДанныеСайта_Вопросы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеСайта_Ответы КАК ВТ_ДанныеСайта_Ответы
		|		ПО ВТ_ДанныеСайта_Вопросы.Идентификатор = ВТ_ДанныеСайта_Ответы.Идентификатор
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТС_Тесты КАК ТС_Тесты
		|		ПО (ТС_Тесты.ЭтоГруппа)
		|			И (НЕ ТС_Тесты.ПометкаУдаления)
		|			И ВТ_ДанныеСайта_Вопросы.Курс = ТС_Тесты.Владелец
		|			И ВТ_ДанныеСайта_Вопросы.НомерРаздела = ТС_Тесты.НомерРаздела
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТС_Тесты.Ссылка КАК ВопросСсылкаВБазе,
		|	ТС_Тесты.Вопрос КАК ВопросВБазе,
		|	ТС_Тесты.Подсказка КАК ПодсказкаВБазе,
		|	ВЫРАЗИТЬ(ТС_ТестыОтветы.Ответ КАК СТРОКА(1024)) КАК ОтветВБазе,
		|	ТС_ТестыОтветы.Правильный КАК ПравильныйОтветВБазе,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ТС_Тесты.Изображение, ЗНАЧЕНИЕ(Справочник.ТС_Файлы.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ТС_Файлы.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьКартинкаВБазе,
		|	ТС_Тесты.Родитель КАК Раздел,
		|	ТС_Тесты.Вопрос КАК Вопрос,
		|	ВЫРАЗИТЬ(ТС_Тесты.Владелец КАК Справочник.ТС_Курсы).КоличествоВопросов КАК КоличествоВопросовВБазе,
		|	ТС_ТестыОтветы.НомерСтроки КАК ПорядковыйНомерОтветаВБазе,
		|	ТС_Тесты.НомерВопроса КАК НомерВопросаВБазе,
		|	ВЫРАЗИТЬ("""" + ТС_Тесты.НомерВопроса + ТС_Тесты.Вопрос КАК СТРОКА(1000)) КАК НомерИВопрос,
		|	ТС_Тесты.Владелец КАК Курс,
		|	ТС_Тесты.НомерРаздела КАК НомерРаздела,
		|	ТС_Тесты.Родитель.Наименование КАК РазделНаименование
		|ПОМЕСТИТЬ ВТ_ВопросыОтветыВБазе
		|ИЗ
		|	Справочник.ТС_Тесты.Ответы КАК ТС_ТестыОтветы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТС_Тесты КАК ТС_Тесты
		|		ПО (ТС_Тесты.Владелец В
		|				(ВЫБРАТЬ
		|					ВТ_ДанныеСайта_Вопросы.Курс КАК Курс
		|				ИЗ
		|					ВТ_ДанныеСайта_Вопросы КАК ВТ_ДанныеСайта_Вопросы))
		|			И ТС_ТестыОтветы.Ссылка = ТС_Тесты.Ссылка
		|ГДЕ
		|	НЕ ТС_Тесты.ПометкаУдаления
		|	И НЕ ТС_Тесты.ЭтоГруппа
		|	И НЕ ТС_Тесты.Родитель = ЗНАЧЕНИЕ(Справочник.ТС_Тесты.ПустаяСсылка)
		|	И ТС_Тесты.Родитель.НомерРаздела = &НомерРаздела
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Сайт_ВопросыОтветы.Раздел КАК Раздел,
		|	ВТ_Сайт_ВопросыОтветы.НомерВопросаНаСайте КАК НомерВопроса,
		|	ВЫРАЗИТЬ(ВТ_Сайт_ВопросыОтветы.Вопрос КАК СТРОКА(1024)) КАК Вопрос,
		|	ЗНАЧЕНИЕ(Справочник.ТС_Тесты.ПустаяСсылка) КАК ТестСсылка,
		|	"""" КАК ВопросВБазе,
		|	ВТ_Сайт_ВопросыОтветы.ВопросНаСайте КАК ВопросНаСайте,
		|	ВТ_Сайт_ВопросыОтветы.ОтветНаСайте КАК ОтветНаСайте,
		|	"""" КАК ОтветВБазе,
		|	ВТ_Сайт_ВопросыОтветы.ПравильныйОтветНаСайте КАК ПравильныйОтветНаСайте,
		|	"""" КАК ПравильныйОтветВБазе,
		|	"""" КАК ПодсказкаВБазе,
		|	ЛОЖЬ КАК ЕстьКартинкаВБазе,
		|	ВТ_Сайт_ВопросыОтветы.ЕстьКартинкаНаСайте КАК ЕстьКартинкаНаСайте,
		|	ВТ_Сайт_ВопросыОтветы.ПодсказкаНаСайте КАК ПодсказкаНаСайте,
		|	"""" КАК КоличествоВопросовВБазе,
		|	ВТ_Сайт_ВопросыОтветы.КоличествоВопросовНаСайте КАК КоличествоВопросовНаСайте,
		|	0 КАК ПорядковыйНомерОтветаВБазе,
		|	ВТ_Сайт_ВопросыОтветы.ПорядковыйНомерОтветаНаСайте КАК ПорядковыйНомерОтветаНаСайте,
		|	ВТ_Сайт_ВопросыОтветы.ИдентификаторВопроса КАК ИдентификаторВопроса,
		|	"""" КАК НомерВопросаВБазе,
		|	ВТ_Сайт_ВопросыОтветы.НомерВопросаНаСайте КАК НомерВопросаНаСайте,
		|	ВТ_Сайт_ВопросыОтветы.НомерИВопрос КАК НомерИВопрос,
		|	ВТ_Сайт_ВопросыОтветы.Курс КАК Курс,
		|	ВТ_Сайт_ВопросыОтветы.НомерРаздела КАК НомерРаздела,
		|	ВТ_Сайт_ВопросыОтветы.РазделНаименование КАК РазделНаименование
		|ИЗ
		|	ВТ_Сайт_ВопросыОтветы КАК ВТ_Сайт_ВопросыОтветы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ВопросыОтветыВБазе.Раздел,
		|	ВТ_ВопросыОтветыВБазе.НомерВопросаВБазе,
		|	ВЫРАЗИТЬ(ВТ_ВопросыОтветыВБазе.Вопрос КАК СТРОКА(1024)),
		|	ВТ_ВопросыОтветыВБазе.ВопросСсылкаВБазе,
		|	ВТ_ВопросыОтветыВБазе.ВопросВБазе,
		|	"""",
		|	"""",
		|	ВТ_ВопросыОтветыВБазе.ОтветВБазе,
		|	"""",
		|	ВТ_ВопросыОтветыВБазе.ПравильныйОтветВБазе,
		|	ВТ_ВопросыОтветыВБазе.ПодсказкаВБазе,
		|	ВТ_ВопросыОтветыВБазе.ЕстьКартинкаВБазе,
		|	ЛОЖЬ,
		|	"""",
		|	ВТ_ВопросыОтветыВБазе.КоличествоВопросовВБазе,
		|	0,
		|	ВТ_ВопросыОтветыВБазе.ПорядковыйНомерОтветаВБазе,
		|	0,
		|	"""",
		|	ВТ_ВопросыОтветыВБазе.НомерВопросаВБазе,
		|	"""",
		|	ВТ_ВопросыОтветыВБазе.НомерИВопрос,
		|	ВТ_ВопросыОтветыВБазе.Курс,
		|	ВТ_ВопросыОтветыВБазе.НомерРаздела,
		|	ВТ_ВопросыОтветыВБазе.РазделНаименование
		|ИЗ
		|	ВТ_ВопросыОтветыВБазе КАК ВТ_ВопросыОтветыВБазе
		|ИТОГИ
		|	МАКСИМУМ(Вопрос),
		|	МАКСИМУМ(ТестСсылка),
		|	МАКСИМУМ(ВопросВБазе),
		|	МАКСИМУМ(ВопросНаСайте),
		|	МАКСИМУМ(ПодсказкаВБазе),
		|	МАКСИМУМ(ЕстьКартинкаВБазе),
		|	МАКСИМУМ(ЕстьКартинкаНаСайте),
		|	МАКСИМУМ(ПодсказкаНаСайте),
		|	МАКСИМУМ(КоличествоВопросовВБазе),
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КоличествоВопросовНаСайте),
		|	МАКСИМУМ(ИдентификаторВопроса),
		|	МАКСИМУМ(НомерВопросаВБазе),
		|	МАКСИМУМ(НомерВопросаНаСайте),
		|	МАКСИМУМ(НомерРаздела)
		|ПО
		|	Курс,
		|	Раздел,
		|	НомерИВопрос";
	Запрос.УстановитьПараметр("ТС_Тесты_Ответы", СтруктураПараметров.ОтветыНаВопросы);
	Запрос.УстановитьПараметр("ВТ_ДанныеСайта_Вопросы", СтруктураПараметров.ЗагружаемыеВопросы);
	Запрос.УстановитьПараметр("НомерРаздела", СтруктураПараметров.Раздел.НомерРаздела); 
	
	Возврат Запрос;
	
КонецФункции 

Функция СтруктураОтветаДляВопросаНаСайте()
	
	Структура = Новый Структура;
	Структура.Вставить("ОтветНаСайте","");
	Структура.Вставить("ПравильныйОтветНаСайте",Ложь);
	Структура.Вставить("ПорядковыйНомерОтвета", 0);
	Возврат Структура;

КонецФункции

Функция СтруктураОтветаДляВопросаВБазе()
	
	Структура = Новый Структура;
	Структура.Вставить("ОтветВБазе","");
	Структура.Вставить("ПравильныйОтветВБазе",Ложь); 
	Структура.Вставить("ПорядковыйНомерОтвета", 0);

	Возврат Структура;
	
КонецФункции

//Предполагается, что все данные в массиве будут начинаться с 1 и не первысят 10 значений.
Функция ОтсортироватьМассив(Знач МассивДанных)
	
	ОтсортированныйМассив = Новый Массив;
	
	КоличествоЗаписей = МассивДанных.Количество();
	
	ТекущийЭлемент = 1;
	Пока Не ТекущийЭлемент = КоличествоЗаписей + 1 Цикл
		
		Для Каждого Элемент Из МассивДанных Цикл
			Если Элемент.ПорядковыйНомерОтвета = ТекущийЭлемент Тогда 
				ОтсортированныйМассив.Добавить(Элемент);
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		ТекущийЭлемент = ТекущийЭлемент + 1;
	КонецЦикла;
	
	
	
	Возврат ОтсортированныйМассив;
КонецФункции

Функция ОбъединитьСтруктурыОтветов(МассивА, МассивБ)
	
	// в запрое не сортировался номер для вопросов из базы.
	// был поставлен костыль на сотрироку массива
	МассивА = ОтсортироватьМассив(МассивА);
	МассивБ = ОтсортироватьМассив(МассивБ);
	
	КоличествоМассивА = МассивА.Количество();
	КоличествоМассивБ = МассивБ.Количество();
	
	Если КоличествоМассивА > КоличествоМассивБ Тогда
		ОсновнойМассив = МассивА;
		ВторостепенныйМассив = МассивБ;
	Иначе
		ОсновнойМассив = МассивБ;
		ВторостепенныйМассив = МассивА;
	КонецЕсли;
	
	ИтоговыйМассив = Новый Массив;
	
	Для Каждого Элемент Из ОсновнойМассив Цикл
		
		Структура = СтруктураИтоговогоМассива();
		ЗаполнитьЗначенияСвойств(Структура, Элемент);
		ИтоговыйМассив.Добавить(Структура);
		
	КонецЦикла;
	
	Для Каждого Элемент Из ВторостепенныйМассив Цикл
		
		Индекс = Элемент.ПорядковыйНомерОтвета - 1;
		
		Если Индекс < 0 Тогда
			Индекс = 0;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ИтоговыйМассив[Индекс], Элемент);
		
	КонецЦикла;
	
	Возврат ИтоговыйМассив;
	
КонецФункции

Функция СтруктураИтоговогоМассива()
	
	Структура = Новый Структура;
	Структура.Вставить("ОтветНаСайте","");
	Структура.Вставить("ПравильныйОтветНаСайте",Ложь);
	Структура.Вставить("ОтветВБазе","");
	Структура.Вставить("ПравильныйОтветВБазе",Ложь);
	
	Возврат Структура;
	
КонецФункции
