&НаКлиенте
//*********************************************************
Процедура ПутьНаКлиентеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл исходных данных";
	Если ЗагрузитьJSON Тогда
		Диалог.Фильтр = "Файл выгрузки (*.xml)|*.xml|Файл выгрузки (*.json)|*.json";;
	Иначе
		Диалог.Фильтр = "Файл выгрузки (*.xml)|*.xml|Файл выгрузки (*.json)|*.json";;
	КонецЕсли;

	Если Диалог.Выбрать() Тогда		
		ЭтаФорма.ПутьНаКлиенте = Диалог.ПолноеИмяФайла;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
//*********************************************************
Процедура Загрузить(Команда)
	
	Если НЕ ЗначениеЗаполнено(ЭтаФорма.ПутьНаКлиенте) Тогда
		ПоказатьПредупреждение(,"Не указан путь к файлу!");
		Возврат;
	КонецЕсли;
	
	//Если ЭтаФорма.ПутьНаКлиенте 
	ЧтениеТекста = Новый ЧтениеТекста(ЭтаФорма.ПутьНаКлиенте);
	СтрокаXML = ЧтениеТекста.Прочитать();
	
	ЗагрузитьНаСервере(СтрокаXML);
	
КонецПроцедуры

&НаСервере
//*********************************************************
Функция ЗагрузитьНаСервере(СтрокаXML)
	
	//Параметры лог-файла
	Результат.Очистить();
	ТабДокумент = Новый ТабличныйДокумент;
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	Макет = ТекОбъект.ПолучитьМакет("Результат");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьОшибка = Макет.ПолучитьОбласть("Ошибка");
	
	//Выведем шапку
	ОбластьШапка.Параметры.Текст = "Процедура загрузки данных. Время начала: " + ТекущаяДата();
	Результат.Вывести(ОбластьШапка);

	//URIПространстваИмен
	URIПространстваИмен = "ТС_Обмен";
	
	Попытка
		
		ТипОбъекта = СоздатьТипФабрикиXDTO("ПередаваемыеДанные",URIПространстваИмен,Результат,Макет);
		Если ТипОбъекта = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
		
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.УстановитьСтроку(СтрокаXML);
		ПередаваемыеДанныеXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML,ТипОбъекта);
		
		ПрошлыйТипОбъкта = "";
		ТекстЗаголовка = "";
		КоличествоЭлементов = 0;
		КоличествоЭлементовВсего = 0;
		БылиОшибки = Ложь;
		
		Для Каждого ОбъектДанныхXDTO Из ПередаваемыеДанныеXDTO.ОбъектДанных Цикл
			
			ТипОбъекта = ОбъектДанныхXDTO.ТипОбъекта;
			
			Если ТипОбъекта <> ПрошлыйТипОбъкта Тогда
				
				ПрошлыйТипОбъкта = ТипОбъекта;
				Если КоличествоЭлементов <> 0 Тогда
					Результат.НачатьАвтогруппировкуСтрок();
					ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
					ОбластьЗаголовок.Параметры.Текст = ТекстЗаголовка;
					ОбластьЗаголовок.Параметры.Количество = КоличествоЭлементов;
					Результат.Вывести(ОбластьЗаголовок,0);
					Результат.Вывести(ТабДокумент,1);
					Результат.ЗакончитьАвтогруппировкуСтрок();
					ОбластьПропуск = Макет.ПолучитьОбласть("Пропуск");
					Результат.Вывести(ОбластьПропуск);
					КоличествоЭлементовВсего = КоличествоЭлементовВсего + КоличествоЭлементов;
					КоличествоЭлементов = 0;
					ТабДокумент.Очистить();
				КонецЕсли;	

			КонецЕсли;
			
			Если ТипОбъекта = "ТС_Курсы" Тогда
				ТекстЗаголовка = "Загрузка справочника ""Курсы""";
				Если НЕ ЗагрузитьКурс(ОбъектДанныхXDTO,ТабДокумент,Макет,КоличествоЭлементов) Тогда
					БылиОшибки = Истина;
					Прервать;
				КонецЕсли;
			ИначеЕсли ТипОбъекта = "ТС_Файлы" Тогда	
				ТекстЗаголовка = "Загрузка справочника ""Файлы""";
				Если НЕ ЗагрузитьФайл(ОбъектДанныхXDTO,ТабДокумент,Макет,КоличествоЭлементов) Тогда
					БылиОшибки = Истина;
					Прервать;
				КонецЕсли;
			ИначеЕсли ТипОбъекта = "ТС_Тесты" Тогда	
				ТекстЗаголовка = "Загрузка справочника ""Тесты""";
				Если НЕ ЗагрузитьТест(ОбъектДанныхXDTO,ТабДокумент,Макет,КоличествоЭлементов) Тогда
					БылиОшибки = Истина;
					Прервать;
				КонецЕсли;
			ИначеЕсли ТипОбъекта = "ТС_НаборыТестов" Тогда	
				ТекстЗаголовка = "Загрузка справочника ""Наборы тестов""";
				Если НЕ ЗагрузитьНаборТестов(ОбъектДанныхXDTO,ТабДокумент,Макет,КоличествоЭлементов) Тогда
					БылиОшибки = Истина;
					Прервать;
				КонецЕсли;
			ИначеЕсли ТипОбъекта = "ТС_ПрограммыОбучения" Тогда	
				ТекстЗаголовка = "Загрузка справочника ""Программы обучения""";
				Если НЕ ЗагрузитьПрограммуОбучения(ОбъектДанныхXDTO,ТабДокумент,Макет,КоличествоЭлементов) Тогда
					БылиОшибки = Истина;
					Прервать;
				КонецЕсли;	
			КонецЕсли;	
			
		КонецЦикла;
		
		Если КоличествоЭлементов <> 0
			ИЛИ БылиОшибки Тогда
			Результат.НачатьАвтогруппировкуСтрок();
			ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
			ОбластьЗаголовок.Параметры.Текст = ТекстЗаголовка;
			ОбластьЗаголовок.Параметры.Количество = КоличествоЭлементов;
			Результат.Вывести(ОбластьЗаголовок,0);
			Результат.Вывести(ТабДокумент,1);
			Результат.ЗакончитьАвтогруппировкуСтрок();
			ОбластьПропуск = Макет.ПолучитьОбласть("Пропуск");
			Результат.Вывести(ОбластьПропуск);
			КоличествоЭлементовВсего = КоличествоЭлементовВсего + КоличествоЭлементов;
			ТабДокумент.Очистить();
		КонецЕсли;	
		
		Если НЕ БылиОшибки Тогда
			
			//Запишем успех в файл
			Результат.Область("R2C2").Текст = "Успешное завершение!";
			Результат.Область("R2C2").ЦветТекста = Новый Цвет(0, 128, 0);
			ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
			ОбластьПодвал.Параметры.КоличествоЭлементовВсего = КоличествоЭлементовВсего;
			ОбластьПодвал.Параметры.Текст = "Процедура загрузки. Время завершения: " + ТекущаяДата();
			Результат.Вывести(ОбластьПодвал);
			Результат.ПоказатьУровеньГруппировокСтрок(0);	
			Возврат Истина;
			
		Иначе
			Возврат Ложь;
		КонецЕсли;
				
	Исключение
		
		ОбластьОшибка = Макет.ПолучитьОбласть("Ошибка");
		ОбластьОшибка.Параметры.Текст = ОписаниеОшибки();
		Результат.Вывести(ОбластьОшибка);
		ОбластьПропуск = Макет.ПолучитьОбласть("Пропуск");
		Результат.Вывести(ОбластьПропуск);;
		Возврат Ложь;
		
	КонецПопытки;
	
КонецФункции

&НаСервере
//*********************************************************
Функция СоздатьТипФабрикиXDTO(ИмяТипа,URIПространстваИмен,ТабДокумент,Макет)
	
	Попытка
		ТипФабрикиXDTO = ФабрикаXDTO.Тип(URIПространстваИмен,ИмяТипа);
		Возврат ТипФабрикиXDTO;
	Исключение
		ОбластьОшибка = Макет.ПолучитьОбласть("Ошибка");
		ОбластьОшибка.Параметры.Текст = "В параметрах фабрики XDTO не найден тип """ + ИмяТипа + """!";
		ТабДокумент.Вывести(ОбластьОшибка);
		ОбластьПропуск = Макет.ПолучитьОбласть("Пропуск");
		ТабДокумент.Вывести(ОбластьПропуск);
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

&НаСервере
//*********************************************************
Функция НайтиСправочникПоGUID(GUID,ТипСправочника,Владелец="")
	
	GUID = СокрЛП(GUID);
	
	СсылкаНаСпр = Справочники[ТипСправочника].ПолучитьСсылку(Новый УникальныйИдентификатор(GUID));
	
	Если Лев(Строка(СсылкаНаСпр),18) = "<Объект не найден>" Тогда
		Возврат Неопределено;
	Иначе
	    Возврат СсылкаНаСпр;
	КонецЕсли;
	
КонецФункции
	
&НаСервере
//*********************************************************
Функция ЗагрузитьКурс(ОбъектДанныхXDTO,ТабДокумент,Макет,КоличествоЭлементов)

	//Данные для лог-файла
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	Попытка
		
		GUID = ОбъектДанныхXDTO.GUID;
		СпрСсылка = НайтиСправочникПоGUID(GUID,"ТС_Курсы");
		Если СпрСсылка = Неопределено Тогда
			Если ОбъектДанныхXDTO.ЭтоГруппа Тогда
				СпрОбъект = Справочники.ТС_Курсы.СоздатьГруппу();
			Иначе
				СпрОбъект = Справочники.ТС_Курсы.СоздатьЭлемент();
			КонецЕсли;
			типДействия = "Создан новый: ";
			НовыйGUID = Новый УникальныйИдентификатор(GUID);
			СпрОбъект.УстановитьСсылкуНового(Справочники.ТС_Курсы.ПолучитьСсылку(НовыйGUID));
		Иначе
			СпрОбъект = СпрСсылка.ПолучитьОбъект();
			типДействия = "Обновлен: ";
		КонецЕсли;
		
		//Общие реквизиты
		Если СпрОбъект.Код <> ОбъектДанныхXDTO.Код Тогда
			СпрОбъект.Код = ОбъектДанныхXDTO.Код;
		КонецЕсли;
		Если СпрОбъект.Наименование <> ОбъектДанныхXDTO.Наименование Тогда
			СпрОбъект.Наименование = ОбъектДанныхXDTO.Наименование;
		КонецЕсли;	
		Если ОбъектДанныхXDTO.РодительGUID <> "" Тогда
			СпрРодитель = НайтиСправочникПоGUID(ОбъектДанныхXDTO.РодительGUID,"ТС_Курсы");
			Если СпрРодитель <> Неопределено
				И СпрРодитель <> СпрОбъект.Родитель Тогда
				СпрОбъект.Родитель = СпрРодитель;
			КонецЕсли;
		КонецЕсли;
		Если СпрОбъект.ТС_Комментарий <> ОбъектДанныхXDTO.ТС_Комментарий Тогда
			СпрОбъект.ТС_Комментарий = ОбъектДанныхXDTO.ТС_Комментарий;
		КонецЕсли;
		Если СпрОбъект.ПометкаУдаления <> ОбъектДанныхXDTO.ПометкаУдаления Тогда
			СпрОбъект.ПометкаУдаления = ОбъектДанныхXDTO.ПометкаУдаления;
		КонецЕсли;
		//Реквизиты элемента
		Если НЕ ОбъектДанныхXDTO.ЭтоГруппа Тогда
			Если СпрОбъект.КоличествоТестовНаСтранице <> ОбъектДанныхXDTO.КоличествоТестовНаСтранице Тогда
				СпрОбъект.КоличествоТестовНаСтранице = ОбъектДанныхXDTO.КоличествоТестовНаСтранице;
			КонецЕсли;
			Если СпрОбъект.МножественныеОтветы <> ОбъектДанныхXDTO.МножественныеОтветы Тогда
				СпрОбъект.МножественныеОтветы = ОбъектДанныхXDTO.МножественныеОтветы;
			КонецЕсли;
			Если СпрОбъект.Устаревший <> ОбъектДанныхXDTO.Устаревший Тогда
				СпрОбъект.Устаревший = ОбъектДанныхXDTO.Устаревший;
			КонецЕсли;
			Если СпрОбъект.ДатаАктуальности <> ОбъектДанныхXDTO.ДатаАктуальности Тогда
				СпрОбъект.ДатаАктуальности = ОбъектДанныхXDTO.ДатаАктуальности;
			КонецЕсли;
		КонецЕсли;
		
		Если СпрОбъект.Модифицированность() Тогда
			СпрОбъект.Записать();
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			ОбластьСтрока.Параметры.Текст = типДействия + СпрОбъект.Наименование;
			ОбластьСтрока.Параметры.Код = СпрОбъект.Код;
			ТабДокумент.Вывести(ОбластьСтрока);
			КоличествоЭлементов = КоличествоЭлементов + 1;
		КонецЕсли;
		
		Возврат Истина;
				
	Исключение
		
		ОбластьОшибка = Макет.ПолучитьОбласть("Ошибка");
		ОбластьОшибка.Параметры.Текст = ОписаниеОшибки();
		ТабДокумент.Вывести(ОбластьОшибка);
		ОбластьПропуск = Макет.ПолучитьОбласть("Пропуск");
		ТабДокумент.Вывести(ОбластьПропуск);
		Возврат Ложь;
		
	КонецПопытки;
	
КонецФункции

&НаСервере
//*********************************************************
Функция ЗагрузитьФайл(ОбъектДанныхXDTO,ТабДокумент,Макет,КоличествоЭлементов)

	//Данные для лог-файла
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	Попытка
		
		GUID = ОбъектДанныхXDTO.GUID;
		СпрСсылка = НайтиСправочникПоGUID(GUID,"ТС_Файлы");
		Если СпрСсылка = Неопределено Тогда
			СпрОбъект = Справочники.ТС_Файлы.СоздатьЭлемент();
			типДействия = "Создан новый: ";
			НовыйGUID = Новый УникальныйИдентификатор(GUID);
			СпрОбъект.УстановитьСсылкуНового(Справочники.ТС_Файлы.ПолучитьСсылку(НовыйGUID));
		Иначе
			СпрОбъект = СпрСсылка.ПолучитьОбъект();
			типДействия = "Обновлен: ";
		КонецЕсли;
		
		//Общие реквизиты
		Если СпрОбъект.Код <> ОбъектДанныхXDTO.Код Тогда
			СпрОбъект.Код = ОбъектДанныхXDTO.Код;
		КонецЕсли;
		Если СпрОбъект.Наименование <> ОбъектДанныхXDTO.Наименование Тогда
			СпрОбъект.Наименование = ОбъектДанныхXDTO.Наименование;
		КонецЕсли;	
		Если СпрОбъект.ТС_Комментарий <> ОбъектДанныхXDTO.ТС_Комментарий Тогда
			СпрОбъект.ТС_Комментарий = ОбъектДанныхXDTO.ТС_Комментарий;
		КонецЕсли;
		Если СпрОбъект.ПометкаУдаления <> ОбъектДанныхXDTO.ПометкаУдаления Тогда
			СпрОбъект.ПометкаУдаления = ОбъектДанныхXDTO.ПометкаУдаления;
		КонецЕсли;
		//Изображение
		КодИзображения = ОбъектДанныхXDTO.Изображение;
		ХранилищеЗначений = Новый ХранилищеЗначения(КодИзображения);
		Если СпрОбъект.Изображение.Получить() <> ОбъектДанныхXDTO.Изображение Тогда
			СпрОбъект.Изображение = ХранилищеЗначений;
		КонецЕсли;
		
		Если СпрОбъект.Модифицированность() Тогда
			СпрОбъект.Записать();
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			ОбластьСтрока.Параметры.Текст = типДействия + СпрОбъект.Наименование;
			ОбластьСтрока.Параметры.Код = СпрОбъект.Код;
			ТабДокумент.Вывести(ОбластьСтрока);
			КоличествоЭлементов = КоличествоЭлементов + 1;
		КонецЕсли;
		
		Возврат Истина;
				
	Исключение
		
		ОбластьОшибка = Макет.ПолучитьОбласть("Ошибка");
		ОбластьОшибка.Параметры.Текст = ОписаниеОшибки();
		ТабДокумент.Вывести(ОбластьОшибка);
		ОбластьПропуск = Макет.ПолучитьОбласть("Пропуск");
		ТабДокумент.Вывести(ОбластьПропуск);
		Возврат Ложь;
		
	КонецПопытки;
	
КонецФункции

&НаСервере
//*********************************************************
Функция ЗагрузитьТест(ОбъектДанныхXDTO,ТабДокумент,Макет,КоличествоЭлементов)

	//Данные для лог-файла
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	Попытка
		
		//Прежде всего проверим владельца
		ВладелецGUID = ОбъектДанныхXDTO.ВладелецGUID;
		СпрСсылкаВладелец = НайтиСправочникПоGUID(ВладелецGUID,"ТС_Курсы");
		
		Если СпрСсылкаВладелец = Неопределено Тогда
			ОбластьОшибка = Макет.ПолучитьОбласть("Ошибка");
			ОбластьОшибка.Параметры.Текст = "Не найден справочник владелец (""Курс"")";
			ТабДокумент.Вывести(ОбластьОшибка);
			ОбластьПропуск = Макет.ПолучитьОбласть("Пропуск");
			ТабДокумент.Вывести(ОбластьПропуск);
			Возврат Ложь;
		КонецЕсли;	
		
		GUID = ОбъектДанныхXDTO.GUID;
		СпрСсылка = НайтиСправочникПоGUID(GUID,"ТС_Тесты",СпрСсылкаВладелец);
		Если СпрСсылка = Неопределено Тогда
			Если ОбъектДанныхXDTO.ЭтоГруппа Тогда
				СпрОбъект = Справочники.ТС_Тесты.СоздатьГруппу();
			Иначе
				СпрОбъект = Справочники.ТС_Тесты.СоздатьЭлемент();
			КонецЕсли;
			типДействия = "Создан новый: ";
			НовыйGUID = Новый УникальныйИдентификатор(GUID);
			СпрОбъект.УстановитьСсылкуНового(Справочники.ТС_Тесты.ПолучитьСсылку(НовыйGUID));
		Иначе
			СпрОбъект = СпрСсылка.ПолучитьОбъект();
			типДействия = "Обновлен: ";
		КонецЕсли;
		
		//Общие реквизиты
		Если СпрОбъект.Владелец <> СпрСсылкаВладелец Тогда
			СпрОбъект.Владелец = СпрСсылкаВладелец;
		КонецЕсли;
		Если СпрОбъект.Код <> ОбъектДанныхXDTO.Код Тогда
			СпрОбъект.Код = ОбъектДанныхXDTO.Код;
		КонецЕсли;
		Если СпрОбъект.Наименование <> ОбъектДанныхXDTO.Наименование Тогда
			СпрОбъект.Наименование = ОбъектДанныхXDTO.Наименование;
		КонецЕсли;	
		Если ОбъектДанныхXDTO.РодительGUID <> "" Тогда
			СпрРодитель = НайтиСправочникПоGUID(ОбъектДанныхXDTO.РодительGUID,"ТС_Тесты",СпрСсылкаВладелец);
			Если СпрРодитель <> Неопределено
				И СпрРодитель <> СпрОбъект.Родитель Тогда
				СпрОбъект.Родитель = СпрРодитель;
			КонецЕсли;
		КонецЕсли;
		Если СпрОбъект.ТС_Комментарий <> ОбъектДанныхXDTO.ТС_Комментарий Тогда
			СпрОбъект.ТС_Комментарий = ОбъектДанныхXDTO.ТС_Комментарий;
		КонецЕсли;
		Если СпрОбъект.ПометкаУдаления <> ОбъектДанныхXDTO.ПометкаУдаления Тогда
			СпрОбъект.ПометкаУдаления = ОбъектДанныхXDTO.ПометкаУдаления;
		КонецЕсли;
		Если СпрОбъект.Вопрос <> ОбъектДанныхXDTO.Вопрос Тогда
			СпрОбъект.Вопрос = ОбъектДанныхXDTO.Вопрос;
		КонецЕсли;
		Если СпрОбъект.Описание <> ОбъектДанныхXDTO.Описание Тогда
			СпрОбъект.Описание = ОбъектДанныхXDTO.Описание;
		КонецЕсли;
		//Реквизиты элемента
		Если НЕ ОбъектДанныхXDTO.ЭтоГруппа Тогда
			Если СпрОбъект.Подсказка <> ОбъектДанныхXDTO.Подсказка Тогда
				СпрОбъект.Подсказка = ОбъектДанныхXDTO.Подсказка;
			КонецЕсли;
			Если СпрОбъект.ПеремешиватьОтветы <> ОбъектДанныхXDTO.ПеремешиватьОтветы Тогда
				СпрОбъект.ПеремешиватьОтветы = ОбъектДанныхXDTO.ПеремешиватьОтветы;
			КонецЕсли;
			Если СпрОбъект.Устаревший <> ОбъектДанныхXDTO.Устаревший Тогда
				СпрОбъект.Устаревший = ОбъектДанныхXDTO.Устаревший;
			КонецЕсли;
			//Изображение
			Если ЗначениеЗаполнено(ОбъектДанныхXDTO.ИзображениеGUID) Тогда
				СпрИзображение = НайтиСправочникПоGUID(ОбъектДанныхXDTO.ИзображениеGUID,"ТС_Файлы");
				Если СпрИзображение <> Неопределено
					И СпрИзображение <> СпрОбъект.Изображение Тогда
					СпрОбъект.Изображение = СпрИзображение;
				КонецЕсли;
			КонецЕсли;	
			//Табличная часть
			СчОтветов = 0;
			ВсегоОтветов = СпрОбъект.Ответы.Количество();
			Для Каждого ОтветXDTO ИЗ ОбъектДанныхXDTO.Ответы Цикл
				Если СчОтветов >= ВсегоОтветов Тогда
					ОтветОбъект = СпрОбъект.Ответы.Добавить();
				Иначе
					ОтветОбъект = СпрОбъект.Ответы.Получить(СчОтветов);
				КонецЕсли;
				СчОтветов = СчОтветов + 1;
				Если ОтветОбъект.Ответ <> ОтветXDTO.Ответ Тогда
					ОтветОбъект.Ответ = ОтветXDTO.Ответ;
				КонецЕсли;
				Если ОтветОбъект.Правильный <> ОтветXDTO.Правильный Тогда
					ОтветОбъект.Правильный = ОтветXDTO.Правильный;
				КонецЕсли;
			КонецЦикла;
			Для Сч = СчОтветов По ВсегоОтветов-1 Цикл
				НомСтроки = СпрОбъект.Ответы.Количество()-1;
				СпрОбъект.Ответы.Удалить(НомСтроки);
			КонецЦикла;				
		КонецЕсли;
		
		Если СпрОбъект.Модифицированность() Тогда
			СпрОбъект.Записать();
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			ОбластьСтрока.Параметры.Текст = типДействия + СпрОбъект.Наименование;
			ОбластьСтрока.Параметры.Код = СпрОбъект.Код;
			ТабДокумент.Вывести(ОбластьСтрока);
			КоличествоЭлементов = КоличествоЭлементов + 1;
		КонецЕсли;
		
		Возврат Истина;
				
	Исключение
		
		ОбластьОшибка = Макет.ПолучитьОбласть("Ошибка");
		ОбластьОшибка.Параметры.Текст = ОписаниеОшибки();
		ТабДокумент.Вывести(ОбластьОшибка);
		ОбластьПропуск = Макет.ПолучитьОбласть("Пропуск");
		ТабДокумент.Вывести(ОбластьПропуск);
		Возврат Ложь;
		
	КонецПопытки;
	
КонецФункции

&НаСервере
//*********************************************************
Функция ЗагрузитьНаборТестов(ОбъектДанныхXDTO,ТабДокумент,Макет,КоличествоЭлементов)

	//Данные для лог-файла
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	Попытка
		
		//Прежде всего проверим владельца
		ВладелецGUID = ОбъектДанныхXDTO.ВладелецGUID;
		СпрСсылкаВладелец = НайтиСправочникПоGUID(ВладелецGUID,"ТС_Курсы");
		
		Если СпрСсылкаВладелец = Неопределено Тогда
			ОбластьОшибка = Макет.ПолучитьОбласть("Ошибка");
			ОбластьОшибка.Параметры.Текст = "Не найден справочник владелец (""Курс"")";
			ТабДокумент.Вывести(ОбластьОшибка);
			ОбластьПропуск = Макет.ПолучитьОбласть("Пропуск");
			ТабДокумент.Вывести(ОбластьПропуск);
			Возврат Ложь;
		КонецЕсли;	
		
		GUID = ОбъектДанныхXDTO.GUID;
		СпрСсылка = НайтиСправочникПоGUID(GUID,"ТС_НаборыТестов",СпрСсылкаВладелец);
		Если СпрСсылка = Неопределено Тогда
			Если ОбъектДанныхXDTO.ЭтоГруппа Тогда
				СпрОбъект = Справочники.ТС_НаборыТестов.СоздатьГруппу();
			Иначе
				СпрОбъект = Справочники.ТС_НаборыТестов.СоздатьЭлемент();
			КонецЕсли;
			типДействия = "Создан новый: ";
			НовыйGUID = Новый УникальныйИдентификатор(GUID);
			СпрОбъект.УстановитьСсылкуНового(Справочники.ТС_НаборыТестов.ПолучитьСсылку(НовыйGUID));
		Иначе
			СпрОбъект = СпрСсылка.ПолучитьОбъект();
			типДействия = "Обновлен: ";
		КонецЕсли;
		
		//Общие реквизиты
		Если СпрОбъект.Код <> ОбъектДанныхXDTO.Код Тогда
			СпрОбъект.Код = ОбъектДанныхXDTO.Код;
		КонецЕсли;
		Если СпрОбъект.Наименование <> ОбъектДанныхXDTO.Наименование Тогда
			СпрОбъект.Наименование = ОбъектДанныхXDTO.Наименование;
		КонецЕсли;	
		Если СпрОбъект.Владелец <> СпрСсылкаВладелец Тогда
			СпрОбъект.Владелец = СпрСсылкаВладелец;
		КонецЕсли;
		Если ОбъектДанныхXDTO.РодительGUID <> "" Тогда
			СпрРодитель = НайтиСправочникПоGUID(ОбъектДанныхXDTO.РодительGUID,"ТС_НаборыТестов",СпрСсылкаВладелец);
			Если СпрРодитель <> Неопределено
				И СпрРодитель <> СпрОбъект.Родитель Тогда
				СпрОбъект.Родитель = СпрРодитель;
			КонецЕсли;
		КонецЕсли;
		Если СпрОбъект.ПометкаУдаления <> ОбъектДанныхXDTO.ПометкаУдаления Тогда
			СпрОбъект.ПометкаУдаления = ОбъектДанныхXDTO.ПометкаУдаления;
		КонецЕсли;
		Если СпрОбъект.ТС_Комментарий <> ОбъектДанныхXDTO.ТС_Комментарий Тогда
			СпрОбъект.ТС_Комментарий = ОбъектДанныхXDTO.ТС_Комментарий;
		КонецЕсли;

		//Реквизиты элемента
		Если НЕ ОбъектДанныхXDTO.ЭтоГруппа Тогда
			Если СпрОбъект.ВключатьУстаревшие <> ОбъектДанныхXDTO.ВключатьУстаревшие Тогда
				СпрОбъект.ВключатьУстаревшие = ОбъектДанныхXDTO.ВключатьУстаревшие;
			КонецЕсли;
			//Табличная часть
			СчСтрок = 0;
			ВсегоСтрок = СпрОбъект.Содержание.Количество();
			Для Каждого СтрокаXDTO ИЗ ОбъектДанныхXDTO.Содержание Цикл
				Если СчСтрок >= ВсегоСтрок Тогда
					СтрокаОбъект = СпрОбъект.Содержание.Добавить();
				Иначе
					СтрокаОбъект = СпрОбъект.Содержание.Получить(СчСтрок);
				КонецЕсли;
				СчСтрок = СчСтрок + 1;
				СпрТест = НайтиСправочникПоGUID(СтрокаXDTO.ТестGUID,"ТС_Тесты",СпрСсылкаВладелец);
				Если СпрТест <> Неопределено
					И СпрТест <> СтрокаОбъект.Тест Тогда
					СтрокаОбъект.Тест = СпрТест;
				КонецЕсли;
			КонецЦикла;
			Для Сч = СчСтрок По ВсегоСтрок-1 Цикл
				НомСтроки = СпрОбъект.Содержание.Количество()-1;
				СпрОбъект.Содержание.Удалить(НомСтроки);
			КонецЦикла;				
		КонецЕсли;
		
		Если СпрОбъект.Модифицированность() Тогда
			СпрОбъект.Записать();
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			ОбластьСтрока.Параметры.Текст = типДействия + СпрОбъект.Наименование;
			ОбластьСтрока.Параметры.Код = СпрОбъект.Код;
			ТабДокумент.Вывести(ОбластьСтрока);
			КоличествоЭлементов = КоличествоЭлементов + 1;
		КонецЕсли;
		
		Возврат Истина;
				
	Исключение
		
		ОбластьОшибка = Макет.ПолучитьОбласть("Ошибка");
		ОбластьОшибка.Параметры.Текст = ОписаниеОшибки();
		ТабДокумент.Вывести(ОбластьОшибка);
		ОбластьПропуск = Макет.ПолучитьОбласть("Пропуск");
		ТабДокумент.Вывести(ОбластьПропуск);
		Возврат Ложь;
		
	КонецПопытки;
	
КонецФункции

&НаСервере
//*********************************************************
Функция ЗагрузитьПрограммуОбучения(ОбъектДанныхXDTO,ТабДокумент,Макет,КоличествоЭлементов)

	//Данные для лог-файла
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	Попытка
		
		//Прежде всего проверим владельца
		ВладелецGUID = ОбъектДанныхXDTO.ВладелецGUID;
		СпрСсылкаВладелец = НайтиСправочникПоGUID(ВладелецGUID,"ТС_Курсы");
		
		Если СпрСсылкаВладелец = Неопределено Тогда
			ОбластьОшибка = Макет.ПолучитьОбласть("Ошибка");
			ОбластьОшибка.Параметры.Текст = "Не найден справочник владелец (""Курс"")";
			ТабДокумент.Вывести(ОбластьОшибка);
			ОбластьПропуск = Макет.ПолучитьОбласть("Пропуск");
			ТабДокумент.Вывести(ОбластьПропуск);
			Возврат Ложь;
		КонецЕсли;	
		
		GUID = ОбъектДанныхXDTO.GUID;
		СпрСсылка = НайтиСправочникПоGUID(GUID,"ТС_ПрограммыОбучения",СпрСсылкаВладелец);
		Если СпрСсылка = Неопределено Тогда
			СпрОбъект = Справочники.ТС_ПрограммыОбучения.СоздатьЭлемент();
			типДействия = "Создан новый: ";
			НовыйGUID = Новый УникальныйИдентификатор(GUID);
			СпрОбъект.УстановитьСсылкуНового(Справочники.ТС_ПрограммыОбучения.ПолучитьСсылку(НовыйGUID));
		Иначе
			СпрОбъект = СпрСсылка.ПолучитьОбъект();
			типДействия = "Обновлен: ";
		КонецЕсли;
		
		//Общие реквизиты
		Если СпрОбъект.Код <> ОбъектДанныхXDTO.Код Тогда
			СпрОбъект.Код = ОбъектДанныхXDTO.Код;
		КонецЕсли;
		Если СпрОбъект.Наименование <> ОбъектДанныхXDTO.Наименование Тогда
			СпрОбъект.Наименование = ОбъектДанныхXDTO.Наименование;
		КонецЕсли;	
		Если СпрОбъект.Владелец <> СпрСсылкаВладелец Тогда
			СпрОбъект.Владелец = СпрСсылкаВладелец;
		КонецЕсли;
		Если СпрОбъект.ПометкаУдаления <> ОбъектДанныхXDTO.ПометкаУдаления Тогда
			СпрОбъект.ПометкаУдаления = ОбъектДанныхXDTO.ПометкаУдаления;
		КонецЕсли;
		Если СпрОбъект.ТС_Комментарий <> ОбъектДанныхXDTO.ТС_Комментарий Тогда
			СпрОбъект.ТС_Комментарий = ОбъектДанныхXDTO.ТС_Комментарий;
		КонецЕсли;

		//Табличная часть
		СчСтрок = 0;
		ВсегоСтрок = СпрОбъект.Состав.Количество();
		Для Каждого СтрокаXDTO ИЗ ОбъектДанныхXDTO.Состав Цикл
			Если СчСтрок >= ВсегоСтрок Тогда
				СтрокаОбъект = СпрОбъект.Состав.Добавить();
			Иначе
				СтрокаОбъект = СпрОбъект.Состав.Получить(СчСтрок);
			КонецЕсли;
			СчСтрок = СчСтрок + 1;
			СпрНаборТестов = НайтиСправочникПоGUID(СтрокаXDTO.НаборТестовGUID,"ТС_НаборыТестов",СпрСсылкаВладелец);
			Если СпрНаборТестов <> Неопределено
				И СпрНаборТестов <> СтрокаОбъект.НаборТестов Тогда
				СтрокаОбъект.НаборТестов = СпрНаборТестов;
			КонецЕсли;
		КонецЦикла;
		Для Сч = СчСтрок По ВсегоСтрок-1 Цикл
			НомСтроки = СпрОбъект.Состав.Количество()-1;
			СпрОбъект.Состав.Удалить(НомСтроки);
		КонецЦикла;				
		
		Если СпрОбъект.Модифицированность() Тогда
			СпрОбъект.Записать();
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			ОбластьСтрока.Параметры.Текст = типДействия + СпрОбъект.Наименование;
			ОбластьСтрока.Параметры.Код = СпрОбъект.Код;
			ТабДокумент.Вывести(ОбластьСтрока);
			КоличествоЭлементов = КоличествоЭлементов + 1;
		КонецЕсли;
		
		Возврат Истина;
				
	Исключение
		
		ОбластьОшибка = Макет.ПолучитьОбласть("Ошибка");
		ОбластьОшибка.Параметры.Текст = ОписаниеОшибки();
		ТабДокумент.Вывести(ОбластьОшибка);
		ОбластьПропуск = Макет.ПолучитьОбласть("Пропуск");
		ТабДокумент.Вывести(ОбластьПропуск);
		Возврат Ложь;
		
	КонецПопытки;
	
КонецФункции


&НаКлиенте
Процедура ЗагрузитьxmlПриИзменении(Элемент)
	ЭтаФорма.ПутьНаКлиенте = "";
КонецПроцедуры

