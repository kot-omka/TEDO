///////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ ФОРМЫ
&НаКлиенте
Перем мТекущаяСтраница;
&НаКлиенте
Перем ЕстьИзбранныеТесты;


///////////////////////////////////////////////////////////////
// СОБЫТИЯ ФОРМЫ

//*************************************************************
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Запишем параметры
	Если Параметры.Свойство("Курс") Тогда
		Объект.Курс = Параметры.Курс;
	КонецЕсли;
	Если Параметры.Свойство("Пользователь") Тогда
		Объект.Пользователь = Параметры.Пользователь;
	КонецЕсли;
	Если Параметры.Свойство("НаборТестов") Тогда
		Объект.НаборТестов = Параметры.НаборТестов;
	КонецЕсли;
	Если Параметры.Свойство("ПрограммаОбучения") Тогда
		Объект.ПрограммаОбучения = Параметры.ПрограммаОбучения;
	КонецЕсли;
	Если Параметры.Свойство("Избранное") Тогда
		Объект.Избранное = Параметры.Избранное;
	КонецЕсли;
	Если Параметры.Свойство("КоличествоТестов") Тогда
		Объект.КоличествоТестов = Параметры.КоличествоТестов;
	КонецЕсли;
	Если Параметры.Свойство("УдалятьТестыИзИзбранного") Тогда
		Объект.УдалятьТестыИзИзбранного = Параметры.УдалятьТестыИзИзбранного;
	КонецЕсли;
		
	//Заполним параметры формы
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Курсы.МножественныеОтветы КАК МножественныеОтветы
	|ИЗ
	|	Справочник.ТС_Курсы КАК Курсы
	|ГДЕ
	|	Курсы.Ссылка = &Курс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТС_Пользователи.ПереходитьКСледующемуПриВыборе,
	|	ТС_Пользователи.НеВыделятьОтмеченныеТесты,
	|	ТС_Пользователи.ОткрыватьФормуТестированияВНовомОкне,
	|	ТС_Пользователи.ШиринаФормыТестирования,
	|	ТС_Пользователи.НеВыделятьОтмеченныеТестыТолькоДляВебКлиента,
	|	ТС_Пользователи.ОткрыватьФормуТестированияВНовомОкнеТолькоДляВебКлиента,
	|	ТС_Пользователи.ШиринаФормыТестированияТолькоДляВебКлиента,
	|	ТС_Пользователи.ПроверятьТестПриВыборе
	|ИЗ
	|	Справочник.ТС_Пользователи КАК ТС_Пользователи
	|ГДЕ
	|	ТС_Пользователи.Ссылка = &Пользователь";
	Запрос.УстановитьПараметр("Курс", Объект.Курс);
	Запрос.УстановитьПараметр("Пользователь", Объект.Пользователь);
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	//Данные курса
	Выборка = ПакетРезультатов[0].Выбрать();
	Если Выборка.Следующий() Тогда
		ЭтаФорма.МножественныеОтветы = Выборка.МножественныеОтветы;
	КонецЕсли;
	
	//Данные пользователя
	ОткрыватьФормуТестированияВНовомОкне = Ложь;
	ШиринаФормыТестирования = 0;
	Выборка = ПакетРезультатов[1].Выбрать();
	Если Выборка.Следующий() Тогда
		ЭтаФорма.ПереходитьКСледующемуПриВыборе 				= Выборка.ПереходитьКСледующемуПриВыборе;
		ЭтаФорма.НеВыделятьОтмеченныеТесты 						= Выборка.НеВыделятьОтмеченныеТесты;
		ЭтаФорма.НеВыделятьОтмеченныеТестыТолькоДляВебКлиента 	= Выборка.НеВыделятьОтмеченныеТестыТолькоДляВебКлиента;
		ЭтаФорма.ОткрыватьФормуТестированияВНовомОкне 			= Выборка.ОткрыватьФормуТестированияВНовомОкне;
		ЭтаФорма.ОткрыватьФормуТестированияВНовомОкнеТолькоДляВебКлиента = Выборка.ОткрыватьФормуТестированияВНовомОкнеТолькоДляВебКлиента;
		ЭтаФорма.ШиринаФормыТестирования 						= Выборка.ШиринаФормыТестирования;
		ЭтаФорма.ШиринаФормыТестированияТолькоДляВебКлиента 	= Выборка.ШиринаФормыТестированияТолькоДляВебКлиента;
		ЭтаФорма.ПроверятьТестПриВыборе							= Выборка.ПроверятьТестПриВыборе;
	КонецЕсли;
	
	//Режим открытия окна
	Если ЭтаФорма.ОткрыватьФормуТестированияВНовомОкне 
		И НЕ ЭтаФорма.ОткрыватьФормуТестированияВНовомОкнеТолькоДляВебКлиента Тогда
		ЭтаФорма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;	
	
	//Включим режим тестирования
	ЭтаФорма.РежимТестирования = Истина;
	
	//Сформируем набор тестов
	СформироватьНаборТестов();
		
КонецПроцедуры

//*************************************************************
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЕстьИзбранныеТесты = ТС_ОбщегоНазначенияСервер.ПолучитьФО("ТС_ИзбранныеТесты");
	
	//Если нет тестов для отображения, тогда закроем форму
	Если Объект.Тесты.Количество() = 0 Тогда
		Если ЗначениеЗаполнено(Объект.ПрограммаОбучения) Тогда
			ПоказатьПредупреждение(,"Нет более тестов в рамках текущей программы обучения!");
		Иначе
			ПоказатьПредупреждение(,"Нет тестов для решения!");
		КонецЕсли;
		ЭтаФорма.РежимТестирования = Ложь;
		ЭтаФорма.Закрыть();
		Возврат;
	КонецЕсли;
	
	//Настройки формы для не веб-клиента
	#Если НЕ ВебКлиент Тогда
		Если ЭтаФорма.НеВыделятьОтмеченныеТесты Тогда
			ЭтаФорма.НеВыделятьОтмеченныеТесты = НЕ ЭтаФорма.НеВыделятьОтмеченныеТестыТолькоДляВебКлиента;
		КонецЕсли;	
		Если ЭтаФорма.ОткрыватьФормуТестированияВНовомОкне Тогда
			ЭтаФорма.ОткрыватьФормуТестированияВНовомОкне = НЕ ЭтаФорма.ОткрыватьФормуТестированияВНовомОкнеТолькоДляВебКлиента;
		КонецЕсли;	
		Если ЭтаФорма.ШиринаФормыТестирования > 0 И ЭтаФорма.ШиринаФормыТестированияТолькоДляВебКлиента Тогда
			ЭтаФорма.ШиринаФормыТестирования = 0;
		КонецЕсли;
		ЭтаФорма.ОткрытВВебКлиенте = Ложь;
	#КонецЕсли
	
	//Доработаем форму
	Если ЭтаФорма.ОткрыватьФормуТестированияВНовомОкне Тогда
		ЭтаФорма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ЭтаФорма.Элементы.ПредыдущийТест.Высота = 2;
		Этаформа.Элементы.СледующийТест.Высота = 2;
		ЭтаФорма.Элементы.ЗавершитьТест.Высота = 2;
		ЭтаФорма.Элементы.Закрыть.Высота = 2;
		ЭтаФорма.Элементы.ПредыдущийТест2.Высота = 2;
		Этаформа.Элементы.СледующийТест2.Высота = 2;
		ЭтаФорма.Элементы.ЗавершитьТест2.Высота = 2;
		ЭтаФорма.Элементы.Закрыть2.Высота = 2;
	КонецЕсли;	
	Если ЭтаФорма.ШиринаФормыТестирования > 0 Тогда
		ЭтаФорма.Ширина = ШиринаФормыТестирования;
	КонецЕсли;
	
	//Выведем тесты на форму
	ОтобразитьТестыНаформе();
	
	//Начальные настройки формы
	Если Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Количество() > 0 Тогда
		мТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Получить(0);
		Элементы.ГруппаСтраницы.ТекущаяСтраница = мТекущаяСтраница;
		ОбновитьДоступностьКнопок();
	КонецЕсли;	
	
КонецПроцедуры

//*************************************************************
&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	//Если тест не завершен, спросим согласие пользователя
	Если ЭтаФорма.РежимТестирования Тогда
		СтандартнаяОбработка = Ложь;
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗакрытииЗавершение",ЭтаФорма);
		ПоказатьВопрос(ОписаниеОповещения,
			"Тестирование еще не завершено!" + Символы.ПС + 
			"Все введенные ответы будут утеряны." + Символы.ПС + 
			"Вы уверены, что хотите прекратить тестирование?",РежимДиалогаВопрос.ДаНет,,,,);
		Отказ = Истина;	
	КонецЕсли;		
	
КонецПроцедуры

//*************************************************************
&НаКлиенте
Процедура ПриЗакрытииЗавершение(Результат, Параметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		ЭтаФорма.РежимТестирования = Ложь;
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры	



///////////////////////////////////////////////////////////////
// ДОПОЛНИТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//*************************************************************
&НаСервере
Процедура СформироватьНаборТестов()
	
	//Заголовок формы
	ЭтаФорма.Заголовок = "Тестирование по курсу: " + Объект.Курс;
	
	//Очистим результат
	Элементы.РезультатТестирования.Заголовок = "";
	Элементы.ЗавершитьТест.Заголовок = "Завершить";
	Элементы.ЗавершитьТест2.Заголовок = "Завершить";
	
	//Создадим запрос
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Курс", Объект.Курс);
	Запрос.УстановитьПараметр("ДатаАктуальности", Объект.Курс.ДатаАктуальности);
	Запрос.УстановитьПараметр("Пользователь", Объект.Пользователь);
	Запрос.УстановитьПараметр("ИспользоватьПодтверждения", ПолучитьФункциональнуюОпцию("ТС_Подтверждения"));
	Запрос.УстановитьПараметр("ИспользоватьИзбранныеТесты", ПолучитьФункциональнуюОпцию("ТС_ИзбранныеТесты"));
	
	//Набор тестов и номер этапа
	Если ЗначениеЗаполнено(Объект.ПрограммаОбучения) Тогда
		
		Запрос.УстановитьПараметр("ПрограммаОбучения", Объект.ПрограммаОбучения);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МАКСИМУМ(ТС_РезультатыТестирований.НомерЭтапа), 0) + 1 КАК НомерЭтапа
		|ПОМЕСТИТЬ ВТ_Этапы
		|ИЗ
		|	РегистрСведений.ТС_РезультатыТестирований КАК ТС_РезультатыТестирований
		|ГДЕ
		|	ТС_РезультатыТестирований.Пользователь = &Пользователь
		|	И ТС_РезультатыТестирований.Курс = &Курс
		|	И ТС_РезультатыТестирований.ПрограммаОбучения = &ПрограммаОбучения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТС_ПрограммыОбученияСостав.НаборТестов КАК НаборТестов,
		|	Этапы.НомерЭтапа КАК НомерЭтапа
		|ИЗ
		|	ВТ_Этапы КАК Этапы
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТС_ПрограммыОбученияСостав.НомерСтроки КАК НомерСтроки,
		|			ТС_ПрограммыОбученияСостав.НаборТестов КАК НаборТестов
		|		ИЗ
		|			Справочник.ТС_ПрограммыОбучения.Состав КАК ТС_ПрограммыОбученияСостав
		|		ГДЕ
		|			ТС_ПрограммыОбученияСостав.Ссылка = &ПрограммаОбучения) КАК ТС_ПрограммыОбученияСостав
		|		ПО Этапы.НомерЭтапа = ТС_ПрограммыОбученияСостав.НомерСтроки";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.НаборТестов = NULL 
				И Константы.ТС_ИспользоватьИзбранныеТесты.Получить() Тогда
				//Это был последний этап, больше нет тестов в рамках программы обучения
				//Включим режим тестирования по избранным, если он используется
				Объект.Избранное = Истина;
				Объект.ИзбранноеАвто = Истина;
			Иначе
				//Есть набор тестов, продолжаем обучение
				Объект.НомерЭтапа = Выборка.НомерЭтапа;
				Объект.НаборТестов = Выборка.НаборТестов;
			КонецЕсли;	
		Иначе
			Объект.НомерЭтапа = 1;
			Объект.НаборТестов = Объект.ПрограммаОбучения.Состав[0].НаборТестов;
		КонецЕсли;		
			
	КонецЕсли;
	
	/////////////////////////////////////////////////////////////////////
	//Построим таблицу тестов
	
	Если Объект.Избранное Тогда
		
		//Заполним тесты из избранных
		ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + ", избранные тесты.";
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 14
		|	ТС_ИзбранныеТесты.Тест КАК Тест
		|ПОМЕСТИТЬ ВТНаборыТестов
		|ИЗ
		|	РегистрСведений.ТС_ИзбранныеТесты КАК ТС_ИзбранныеТесты
		|ГДЕ
		|	ТС_ИзбранныеТесты.Курс = &Курс
		|	И ТС_ИзбранныеТесты.Пользователь = &Пользователь
		|	И &Замена1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТС_РезультатыТестирований.Тест КАК Ссылка
		|ПОМЕСТИТЬ втПодтверждения
		|ИЗ
		|	РегистрСведений.ТС_РезультатыТестирований КАК ТС_РезультатыТестирований
		|ГДЕ
		|	ТС_РезультатыТестирований.Регистратор.Дата >= &ДатаАктуальности
		|	И ТС_РезультатыТестирований.ЭтоПодтверждениеОтвета
		|	И ТС_РезультатыТестирований.Тест В
		|			(ВЫБРАТЬ
		|				ВТНаборыТестов.Тест
		|			ИЗ
		|				ВТНаборыТестов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТС_ИзбранныеТесты.Тест КАК Ссылка
		|ПОМЕСТИТЬ ВТИзбранныеТесты
		|ИЗ
		|	РегистрСведений.ТС_ИзбранныеТесты КАК ТС_ИзбранныеТесты
		|ГДЕ
		|	ТС_ИзбранныеТесты.Тест В
		|			(ВЫБРАТЬ
		|				ВТНаборыТестов.Тест
		|			ИЗ
		|				ВТНаборыТестов)
		|	И ТС_ИзбранныеТесты.Пользователь = &Пользователь
		|
		|СГРУППИРОВАТЬ ПО
		|	ТС_ИзбранныеТесты.Тест
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТС_Тесты.Ссылка КАК Тест,
		|	ТС_Тесты.Вопрос КАК Вопрос,
		|	ТС_Тесты.Изображение КАК Изображение,
		|	ТестыОтветы.Ответ КАК Ответ,
		|	ТестыОтветы.НомерСтроки КАК НомерОтвета,
		|	ТестыОтветы.Правильный КАК Правильный,
		|	ТС_Тесты.Наименование КАК Наименование,
		|	ТС_Тесты.ПеремешиватьОтветы,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ТС_Тесты.Подсказка КАК СТРОКА(500))) = """"
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьПодсказка,
		|	ВЫБОР
		|		КОГДА Подтверждения.Ссылка ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьПодтверждение,
		|	ВЫБОР
		|		КОГДА ИзбранныеТесты.Ссылка ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьВИзбранном
		|ИЗ
		|	Справочник.ТС_Тесты.Ответы КАК ТестыОтветы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТС_Тесты КАК ТС_Тесты
		|		ПО ТестыОтветы.Ссылка = ТС_Тесты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПодтверждения КАК Подтверждения
		|		ПО ТестыОтветы.Ссылка = Подтверждения.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИзбранныеТесты КАК ИзбранныеТесты
		|		ПО ТестыОтветы.Ссылка = ИзбранныеТесты.Ссылка
		|ГДЕ
		|	ТС_Тесты.Ссылка В
		|			(ВЫБРАТЬ
		|				ВТНаборыТестов.Тест
		|			ИЗ
		|				ВТНаборыТестов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование,
		|	ТестыОтветы.НомерСтроки
		|ИТОГИ ПО
		|	Тест";
		
		Если Объект.ИзбранноеАвто Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"&Замена1","ТС_ИзбранныеТесты.Авто");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"&Замена1","ИСТИНА");
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"14",Строка(Объект.КоличествоТестов));
		КонецЕсли;	
	
	ИначеЕсли ЗначениеЗаполнено(Объект.НаборТестов) Тогда
		
		//Тесты из текущего набора
		ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + ", набор тестов: " + Объект.НаборТестов;
		Запрос.УстановитьПараметр("НаборТестов", Объект.НаборТестов);
		Если Объект.Пользователь.ПеремешиватьВопросыВТесте Тогда
			КоличествоВопросов = Объект.НаборТестов.Содержание.Количество();
			МассивНомеровСтрок = Объект.НаборТестов.Содержание.Выгрузить().ВыгрузитьКолонку("НомерСтроки");
			Справочники.ТС_НаборыТестов.ПеремешатьНабор(МассивНомеровСтрок);
			ТЗ = Новый ТаблицаЗначений;
			ТЗ.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
			ТЗ.Колонки.Добавить("НовыйНомерСтроки", Новый ОписаниеТипов("Число"));
			Для Каждого Строка Из Объект.НаборТестов.Содержание Цикл
				НоваяСтрока = ТЗ.Добавить();
				НоваяСтрока.НомерСтроки			= Строка.НомерСтроки;
				НоваяСтрока.НовыйНомерСтроки	= МассивНомеровСтрок[Строка.НомерСтроки-1];
			КонецЦикла; 
			Запрос.УстановитьПараметр("ТЗ", ТЗ);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТЗ.НомерСтроки КАК НомерСтроки,
			|	ТЗ.НовыйНомерСтроки КАК НовыйНомерСтроки
			|ПОМЕСТИТЬ ТЗ
			|ИЗ
			|	&ТЗ КАК ТЗ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТС_НаборыТестовСодержание.Тест КАК Тест,
			|	ТЗ.НовыйНомерСтроки КАК НомерСтроки
			|ПОМЕСТИТЬ ВТНаборыТестов
			|ИЗ
			|	ТЗ КАК ТЗ
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТС_НаборыТестов.Содержание КАК ТС_НаборыТестовСодержание
			|		ПО ТЗ.НомерСтроки = ТС_НаборыТестовСодержание.НомерСтроки
			|ГДЕ
			|	ТС_НаборыТестовСодержание.Ссылка = &НаборТестов
			|;";
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТС_НаборыТестовСодержание.Тест КАК Тест,
			|	ТС_НаборыТестовСодержание.НомерСтроки КАК НомерСтроки
			|ПОМЕСТИТЬ ВТНаборыТестов
			|ИЗ
			|	Справочник.ТС_НаборыТестов.Содержание КАК ТС_НаборыТестовСодержание
			|ГДЕ
			|	ТС_НаборыТестовСодержание.Ссылка = &НаборТестов
			|;";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТС_РезультатыТестирований.Тест КАК Ссылка
		|ПОМЕСТИТЬ втПодтверждения
		|ИЗ
		|	РегистрСведений.ТС_РезультатыТестирований КАК ТС_РезультатыТестирований
		|ГДЕ
		|	&ИспользоватьПодтверждения
		|	И ТС_РезультатыТестирований.Регистратор.Дата >= &ДатаАктуальности
		|	И ТС_РезультатыТестирований.ЭтоПодтверждениеОтвета
		|	И ТС_РезультатыТестирований.Тест В
		|			(ВЫБРАТЬ
		|				ВТНаборыТестов.Тест
		|			ИЗ
		|				ВТНаборыТестов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТС_ИзбранныеТесты.Тест КАК Ссылка
		|ПОМЕСТИТЬ ВТИзбранныеТесты
		|ИЗ
		|	РегистрСведений.ТС_ИзбранныеТесты КАК ТС_ИзбранныеТесты
		|ГДЕ
		|	&ИспользоватьИзбранныеТесты
		|	И ТС_ИзбранныеТесты.Тест В ИЕРАРХИИ
		|			(ВЫБРАТЬ
		|				ВТНаборыТестов.Тест
		|			ИЗ
		|				ВТНаборыТестов)
		|	И ТС_ИзбранныеТесты.Пользователь = &Пользователь
		|
		|СГРУППИРОВАТЬ ПО
		|	ТС_ИзбранныеТесты.Тест
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТС_Тесты.Ссылка КАК Тест,
		|	ТС_Тесты.Вопрос КАК Вопрос,
		|	ТС_Тесты.Изображение КАК Изображение,
		|	ТестыОтветы.Ответ КАК Ответ,
		|	ТестыОтветы.НомерСтроки КАК НомерОтвета,
		|	ТестыОтветы.Правильный КАК Правильный,
		|	ТС_Тесты.Наименование КАК Наименование,
		|	ТС_Тесты.ПеремешиватьОтветы,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ТС_Тесты.Подсказка КАК СТРОКА(500))) = """"
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьПодсказка,
		|	ВЫБОР
		|		КОГДА Подтверждения.Ссылка ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьПодтверждение,
		|	ВЫБОР
		|		КОГДА ИзбранныеТесты.Ссылка ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьВИзбранном
		|ИЗ
		|	Справочник.ТС_Тесты.Ответы КАК ТестыОтветы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНаборыТестов КАК ВТНаборыТестов
		|		ПО ВТНаборыТестов.Тест = ТестыОтветы.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТС_Тесты КАК ТС_Тесты
		|		ПО ТестыОтветы.Ссылка = ТС_Тесты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПодтверждения КАК Подтверждения
		|		ПО ТестыОтветы.Ссылка = Подтверждения.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИзбранныеТесты КАК ИзбранныеТесты
		|		ПО ТестыОтветы.Ссылка = ИзбранныеТесты.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		//|	Наименование,
		|	ВТНаборыТестов.НомерСтроки,
		|	ТестыОтветы.НомерСтроки
		|ИТОГИ ПО
		|	Тест";		
		
	Иначе
		
		//Все тесты по курсу
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТС_Тесты.Ссылка КАК Тест
		|ПОМЕСТИТЬ ВТНаборыТестов
		|ИЗ
		|	Справочник.ТС_Тесты КАК ТС_Тесты
		|ГДЕ
		|	ТС_Тесты.Владелец = &Курс
		|	И НЕ ТС_Тесты.Устаревший
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Тест
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТС_РезультатыТестирований.Тест КАК Ссылка
		|ПОМЕСТИТЬ втПодтверждения
		|ИЗ
		|	РегистрСведений.ТС_РезультатыТестирований КАК ТС_РезультатыТестирований
		|ГДЕ
		|	ТС_РезультатыТестирований.Регистратор.Дата >= &ДатаАктуальности
		|	И ТС_РезультатыТестирований.ЭтоПодтверждениеОтвета
		|	И ТС_РезультатыТестирований.Тест В
		|			(ВЫБРАТЬ
		|				ВТНаборыТестов.Тест
		|			ИЗ
		|				ВТНаборыТестов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТС_ИзбранныеТесты.Тест КАК Ссылка
		|ПОМЕСТИТЬ ВТИзбранныеТесты
		|ИЗ
		|	РегистрСведений.ТС_ИзбранныеТесты КАК ТС_ИзбранныеТесты
		|ГДЕ
		|	ТС_ИзбранныеТесты.Тест В
		|			(ВЫБРАТЬ
		|				ВТНаборыТестов.Тест
		|			ИЗ
		|				ВТНаборыТестов)
		|	И ТС_ИзбранныеТесты.Пользователь = &Пользователь
		|
		|СГРУППИРОВАТЬ ПО
		|	ТС_ИзбранныеТесты.Тест
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТС_Тесты.Ссылка КАК Тест,
		|	ТС_Тесты.Вопрос КАК Вопрос,
		|	ТС_Тесты.Изображение КАК Изображение,
		|	ТестыОтветы.Ответ КАК Ответ,
		|	ТестыОтветы.НомерСтроки КАК НомерОтвета,
		|	ТестыОтветы.Правильный КАК Правильный,
		|	ТС_Тесты.Наименование КАК Наименование,
		|	ТС_Тесты.ПеремешиватьОтветы,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ТС_Тесты.Подсказка КАК СТРОКА(500))) = """"
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьПодсказка,
		|	ВЫБОР
		|		КОГДА Подтверждения.Ссылка ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьПодтверждение,
		|	ВЫБОР
		|		КОГДА ИзбранныеТесты.Ссылка ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьВИзбранном
		|ИЗ
		|	Справочник.ТС_Тесты.Ответы КАК ТестыОтветы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТС_Тесты КАК ТС_Тесты
		|		ПО ТестыОтветы.Ссылка = ТС_Тесты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПодтверждения КАК Подтверждения
		|		ПО ТестыОтветы.Ссылка = Подтверждения.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИзбранныеТесты КАК ИзбранныеТесты
		|		ПО ТестыОтветы.Ссылка = ИзбранныеТесты.Ссылка
		|ГДЕ
		|	ТС_Тесты.Ссылка В
		|			(ВЫБРАТЬ
		|				ВТНаборыТестов.Тест
		|			ИЗ
		|				ВТНаборыТестов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование,
		|	ТестыОтветы.НомерСтроки
		|ИТОГИ ПО
		|	Тест";
		
	КонецЕсли;
	
	//Запишем тесты в таблицу
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	тзОтветы = Новый ТаблицаЗначений;
	тзОтветы.Колонки.Добавить("Ответ");
	тзОтветы.Колонки.Добавить("Правильный");
	тзОтветы.Колонки.Добавить("НомерОтвета");
	тзОтветыКонечный = Новый ТаблицаЗначений;
	тзОтветыКонечный.Колонки.Добавить("Ответ");
	тзОтветыКонечный.Колонки.Добавить("Правильный");
	
	ВсегоТестов = 0;
	ВсегоСтрок = 0;
	ПеремешиватьОтветыВТесте = Объект.Пользователь.ПеремешиватьОтветыВТесте;
	
	Объект.Тесты.Очистить();
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаПоТесту = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоТесту.Следующий() Цикл
		
		ВсегоТестов = ВсегоТестов + 1;
		ВыборкаПоОтветам = ВыборкаПоТесту.Выбрать();
		Если НЕ ПеремешиватьОтветыВТесте 
			ИЛИ НЕ ВыборкаПоТесту.ПеремешиватьОтветы Тогда
			Пока ВыборкаПоОтветам.Следующий() Цикл
				ВсегоСтрок = ВсегоСтрок + 1;
				стрТесты = Объект.Тесты.Добавить();
				ЗаполнитьЗначенияСвойств(стрТесты,ВыборкаПоОтветам);
			КонецЦикла;
		Иначе
			
			тзОтветы.Очистить();
			тзОтветыКонечный.Очистить();
			ВыборкаПоОтветам = ВыборкаПоТесту.Выбрать();
			Пока ВыборкаПоОтветам.Следующий() Цикл
				стрОтветы = тзОтветы.Добавить();
				стрОтветы.Ответ = ВыборкаПоОтветам.Ответ;
				стрОтветы.Правильный = ВыборкаПоОтветам.Правильный;
				стрОтветы.НомерОтвета = ВыборкаПоОтветам.НомерОтвета;
			КонецЦикла;
			
			Пока тзОтветы.Количество() > 0 Цикл						
				НомерТеста = ГСЧ.СлучайноеЧисло(0,тзОтветы.Количество()-1);				
				стрТесты = Объект.Тесты.Добавить();
				ЗаполнитьЗначенияСвойств(стрТесты,ВыборкаПоТесту);
				ЗаполнитьЗначенияСвойств(стрТесты,тзОтветы.Получить(НомерТеста));				
				тзОтветы.Удалить(НомерТеста);				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;			
		
	ЭтаФорма.ВсегоСтрок = ВсегоСтрок;
	ЭтаФорма.ВсегоТестов = ВсегоТестов;
	
КонецПроцедуры	



///////////////////////////////////////////////////////////////
// ДЕЙСТВИЯ ФОРМЫ

//*************************************************************
&НаСервере
Процедура ОтобразитьТестыНаформе()
	
	//Шрифт для вопроса
	ШрифтДляВопроса = Новый Шрифт(,11,Истина,,,,,);
	
	НомерТеста = 0;
	ПредыдущийТест = "";
	Для Каждого Строка ИЗ Объект.Тесты Цикл
		
		ТекТест = Строка.Тест;
		Если ТекТест <> ПредыдущийТест Тогда		

			//Добавим страницу на форму
			НомерТеста = НомерТеста + 1;
			НомерВопроса = 0;
			ПредыдущийТест = ТекТест;
			НоваяСтраница = Элементы.Добавить("Страница" + СтрЗаменить(Строка(Формат(Строка.НомерСтроки,"ЧРГ=." )), ".", ""),Тип("ГруппаФормы"),Элементы.ГруппаСтраницы);
			НоваяСтраница.Вид = ВидГруппыФормы.Страница;
			НоваяСтраница.Доступность = Истина;
			НоваяСтраница.Видимость = Истина;
			НоваяСтраница.Заголовок = НомерТеста;
			НоваяСтраница.Подсказка = Строка.Наименование;			
			//Добавим вопрос на страницу
			НовыйВопрос = Элементы.Добавить("Вопрос" + Строка(НомерТеста),Тип("ДекорацияФормы"),НоваяСтраница);
			//НовыйВопрос.Заголовок = Строка.Наименование + "  " + Строка.Вопрос;
			НовыйВопрос.Заголовок = Строка.Вопрос;
			НовыйВопрос.Шрифт = ШрифтДляВопроса;
			НовыйВопрос.Ширина = ЭтаФорма.Ширина;
			НовыйВопрос.РастягиватьПоГоризонтали = Истина;
			//Добавим изображение на страницу
			Если ЗначениеЗаполнено(Строка.Изображение) Тогда
				НовоеИзображение = Элементы.Добавить("Изображение" + Строка(НомерТеста),Тип("ПолеФормы"),НоваяСтраница);
				Строка.ИзображениеСтрока = ПолучитьНавигационнуюСсылку(Строка.Изображение, "Изображение");
				НовоеИзображение.ПутьКДанным = "Объект.Тесты[" + СтрЗаменить(Строка(Формат(Строка.НомерСтроки-1,"ЧРГ=." )), ".", "") + "].ИзображениеСтрока";
				НовоеИзображение.Вид = ВидПоляФормы.ПолеКартинки;
				НовоеИзображение.РазмерКартинки = РазмерКартинки.АвтоРазмер;
				НовоеИзображение.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			КонецЕсли;
			
		КонецЕсли;
		//Добавим ответы
		НомерВопроса = НомерВопроса + 1;
		НовыйОтвет = ЭтаФорма.Элементы.Добавить(
			"Ответ" + СтрЗаменить(Строка(Формат(Строка.НомерСтроки,"ЧРГ=." )), ".", ""),Тип("ПолеФормы"),НоваяСтраница);
		НовыйОтвет.Заголовок = Строка(НомерВопроса) + ") " + Строка.Ответ;
		НовыйОтвет.ПутьКДанным = "Объект.Тесты[" + СтрЗаменить(Строка(Формат(Строка.НомерСтроки-1,"ЧРГ=." )), ".", "") + "].Выбор";
		НовыйОтвет.Вид = ВидПоляФормы.ПолеФлажка;
		НовыйОтвет.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		НовыйОтвет.УстановитьДействие("ПриИзменении","ПриВыбореОтвета");

	КонецЦикла;
		
КонецПроцедуры

//*************************************************************
&НаКлиенте
Процедура ПриВыбореОтвета(Элемент)
	
	//Снимем старый ответ, если нет множественных ответов
	Если НЕ ЭтаФорма.МножественныеОтветы Тогда
		
		ТекСтраница = Элемент.Родитель;
		
		//Снимем отметки с уже отмеченных раннее тестов
		Для Каждого Поле ИЗ ТекСтраница.ПодчиненныеЭлементы Цикл
			Если Лев(Поле.Имя,5) = "Ответ" 
				И Поле <> Элемент Тогда
					НомерСтрокиПоля = Число(Сред(Поле.Имя,6))-1;
					Объект.Тесты.Получить(НомерСтрокиПоля).Выбор = Ложь;
			КонецЕсли;	
		КонецЦикла;
		
		//Проверим тест
		Если ЭтаФорма.ПроверятьТестПриВыборе Тогда
			фВыбранВерный = Ложь;
			ПроверитьТест(фВыбранВерный);
			НомерСтрокиПоля = Число(Сред(Элемент.Имя,6))-1;
			Если Объект.Тесты.Получить(НомерСтрокиПоля).Выбор И фВыбранВерный Тогда
				Если Этаформа.Элементы.СледующийТест.Доступность Тогда
					СледующийТест(Неопределено);
				Иначе
					ЗавершитьТест(Неопределено);
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;
		
		//Перейдем к следующему тесту
		Если ЭтаФорма.ПереходитьКСледующемуПриВыборе Тогда
			НомерСтрокиПоля = Число(Сред(Элемент.Имя,6))-1;
			Если Объект.Тесты.Получить(НомерСтрокиПоля).Выбор Тогда
				Если Этаформа.Элементы.СледующийТест.Доступность Тогда
					СледующийТест(Неопределено);
				Иначе
					ЗавершитьТест(Неопределено);
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;
		
		
	КонецЕсли;
	
КонецПроцедуры

//*************************************************************
&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ЭтаФорма.РежимТестирования 
		И НЕ ЭтаФорма.НеВыделятьОтмеченныеТесты Тогда
		Если Не Этаформа.ОткрытВВебКлиенте Тогда
			ГруппаСтраницыПриСменеСтраницыСервер(мТекущаяСтраница.Имя, ТекущаяСтраница.Имя);
		Иначе
			ГруппаСтраницыПриСменеСтраницыКлиент(мТекущаяСтраница.Имя, ТекущаяСтраница.Имя);
		КонецЕсли;	
	КонецЕсли;
	мТекущаяСтраница = ТекущаяСтраница;
	ОбновитьДоступностьКнопок();
	
КонецПроцедуры

//*************************************************************
&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницыКлиент(мТекущаяСтраницаИмя, ТекущаяСтраницаИмя)
	
	мТекущаяСтраница = Элементы.Найти(мТекущаяСтраницаИмя);
	ТекущаяСтраница = Элементы.Найти(ТекущаяСтраницаИмя);
	Если мТекущаяСтраница = Неопределено
		ИЛИ ТекущаяСтраница = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	флВыбранОтвет = Ложь;	
	Для Каждого Поле ИЗ мТекущаяСтраница.ПодчиненныеЭлементы Цикл
		Если Лев(Поле.Имя,5) = "Ответ" Тогда
			НомерСтрокиПоля = Число(Сред(Поле.Имя,6))-1;
			Если Объект.Тесты.Получить(НомерСтрокиПоля).Выбор Тогда
				флВыбранОтвет = Истина;
				Прервать;
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	
	//Раскрасим заголовок, есть есть выбранный ответ
	Если ФлВыбранОтвет Тогда
		мТекущаяСтраница.ЦветФона = Новый Цвет(244, 216, 63);
	Иначе
		мТекущаяСтраница.ЦветФона = Новый Цвет(-1, -1, -1);
	КонецЕсли;
	
	//Вернем цвет по умолчанию для текущей страницы
	ТекущаяСтраница.ЦветФона = Новый Цвет(-1, -1, -1);
	
КонецПроцедуры

//*************************************************************
&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницыСервер(мТекущаяСтраницаИмя, ТекущаяСтраницаИмя)
	
	мТекущаяСтраница = Элементы.Найти(мТекущаяСтраницаИмя);
	ТекущаяСтраница = Элементы.Найти(ТекущаяСтраницаИмя);
	Если мТекущаяСтраница = Неопределено
		ИЛИ ТекущаяСтраница = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	флВыбранОтвет = Ложь;
	флПроверенОтвет = Ложь;
	Для Каждого Поле ИЗ мТекущаяСтраница.ПодчиненныеЭлементы Цикл
		Если Лев(Поле.Имя,5) = "Ответ" Тогда
			НомерСтрокиПоля = Число(Сред(Поле.Имя,6))-1;
			Если Объект.Тесты.Получить(НомерСтрокиПоля).Выбор Тогда
				флВыбранОтвет = Истина;
			КонецЕсли;
			Если Объект.Тесты.Получить(НомерСтрокиПоля).Проверен Тогда
				флПроверенОтвет = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	//Раскрасим заголовок, есть есть выбранный ответ
	Если НЕ флПроверенОтвет Тогда
		
		Если ФлВыбранОтвет Тогда
			мТекущаяСтраница.ЦветФона = Новый Цвет(244, 216, 63);
		Иначе
			мТекущаяСтраница.ЦветФона = Новый Цвет(-1, -1, -1);
		КонецЕсли;
		
	КонецЕсли;
	
	//Вернем цвет по умолчанию для текущей страницы, если нужно
	флПроверенОтвет = Ложь;
	Для Каждого Поле ИЗ ТекущаяСтраница.ПодчиненныеЭлементы Цикл
		Если Лев(Поле.Имя,5) = "Ответ" Тогда
			НомерСтрокиПоля = Число(Сред(Поле.Имя,6))-1;
			Если Объект.Тесты.Получить(НомерСтрокиПоля).Проверен Тогда
				флПроверенОтвет = Истина;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Не флПроверенОтвет Тогда
		ТекущаяСтраница.ЦветФона = Новый Цвет(-1, -1, -1);
		Элементы.ПроверитьТест.Доступность = Истина;
		Элементы.ПроверитьТест2.Доступность = Истина;
	Иначе
		Элементы.ПроверитьТест.Доступность = Ложь;
		Элементы.ПроверитьТест2.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

//*************************************************************
&НаКлиенте
Процедура ОбновитьДоступностьКнопок()
	
	//Кнопки следующий / предыдущий
	НомерТекущейСтраницы = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Индекс(мТекущаяСтраница);
	Элементы.ПредыдущийТест.Доступность = НЕ НомерТекущейСтраницы = 0;
	//Элементы.СледующийТест.Доступность = НЕ НомерТекущейСтраницы = (Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Количество()-1);
	//Элементы.СледующийТест2.Доступность = Элементы.СледующийТест.Доступность;
	
	//Кнопка подтверждения теста
	НомерТеста = Число(Сред(мТекущаяСтраница.Имя,9));
	Элементы.ВывестиПодтверждение.Доступность = Объект.Тесты.Получить(НомерТеста).ЕстьПодтверждение;
	Элементы.ПоказатьПодсказку.Доступность = Объект.Тесты.Получить(НомерТеста).ЕстьПодсказка;
	
	//Кнопка добавить в избранное
	Если ЕстьИзбранныеТесты Тогда
		Если Объект.Тесты.Получить(НомерТеста).ЕстьВИзбранном Тогда
			Элементы.ДобавитьВИзбранное.Картинка = БиблиотекаКартинок.ТС_ИзбранноеПомещен;
		Иначе
			Элементы.ДобавитьВИзбранное.Картинка = БиблиотекаКартинок.ТС_Избранное;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//*************************************************************
&НаКлиенте
Процедура СледующийТест(Команда)
	
	НомерТекущейСтраницы = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Индекс(мТекущаяСтраница);
	Если НомерТекущейСтраницы = (Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Количество()-1) Тогда
		ЗавершитьТест(Неопределено);
		Возврат;
	КонецЕсли; 
	
	ПерейтиНаСледСтраницу = Ложь;
	ПройденаПроверка = Не Элементы.ПроверитьТест.Доступность;
	
	Если Не ПройденаПроверка Тогда
		Результат = Ложь;
		ПроверитьТест(Результат);
		ПерейтиНаСледСтраницу = (Результат = Истина);
	Иначе
		ПерейтиНаСледСтраницу = Истина;
	КонецЕсли;
	
	Если ПерейтиНаСледСтраницу Тогда
		НомерТекущейСтраницы = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Индекс(мТекущаяСтраница);
		Элементы.ГруппаСтраницы.ТекущаяСтраница = 
			Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Получить(НомерТекущейСтраницы+1);
		ГруппаСтраницыПриСменеСтраницы(Элементы.ГруппаСтраницы,Элементы.ГруппаСтраницы.ТекущаяСтраница);	
	КонецЕсли; 
		
КонецПроцедуры

//*************************************************************
&НаКлиенте
Процедура ПредыдущийТест(Команда)
	
	НомерТекущейСтраницы = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Индекс(мТекущаяСтраница);
	Элементы.ГруппаСтраницы.ТекущаяСтраница = 
		Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Получить(НомерТекущейСтраницы-1);
	ГруппаСтраницыПриСменеСтраницы(Элементы.ГруппаСтраницы,Элементы.ГруппаСтраницы.ТекущаяСтраница);	
	
КонецПроцедуры

&НаКлиенте
//*************************************************************
Процедура ЗавершитьТест(Команда)
	
	//Если режим тестирования
	Если ЭтаФорма.РежимТестирования Тогда
	
		//Проверим, все ли ответы введены?
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьТестЗавершение",ЭтаФорма);
		Если НЕ ВсеОтветыВведены() Тогда
			ПоказатьВопрос(ОписаниеОповещения,
				"Внимание!!!" + Символы.ПС + 
				"Остались вопросы без выбранного ответа!" + Символы.ПС + 
				//"Вы уверены, что хотите заврешить тестирование?",РежимДиалогаВопрос.ДаНет,,,,);
				"Вы уверены, что хотите завершить тестирование?",РежимДиалогаВопрос.ДаНет,,,,); //заврешить->завершить
		Иначе
			ПоказатьВопрос(ОписаниеОповещения,
				//"Вы уверены, что хотите заврешить тестирование?",РежимДиалогаВопрос.ДаНет,,,,);
				"Вы уверены, что хотите завершить тестирование?",РежимДиалогаВопрос.ДаНет,,,,); //заврешить->завершить
		КонецЕсли;
			
	Иначе
		
		ЭтаФорма.РежимТестирования = Истина;
		НачатьСледующийТестСервер();
		
		//Если нет тестов для отображения, тогда закроем форму
		Если Объект.Тесты.Количество() = 0 Тогда
			Если ЗначениеЗаполнено(Объект.ПрограммаОбучения) Тогда
				ПоказатьПредупреждение(,"Нет более тестов в рамках текущей программы обучения!");
			Иначе
				ПоказатьПредупреждение(,"Нет тестов для решения!");
			КонецЕсли;
			ЭтаФорма.РежимТестирования = Ложь;
			ЭтаФорма.Закрыть();
			Возврат;
		КонецЕсли;
		
		Если Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Количество() > 0 Тогда
			мТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Получить(0);
			Элементы.ГруппаСтраницы.ТекущаяСтраница = мТекущаяСтраница;
			ОбновитьДоступностьКнопок();
		КонецЕсли;	
				
	КонецЕсли;		
	
КонецПроцедуры

//*************************************************************
&НаСервере
Процедура НачатьСледующийТестСервер()
	
	//Удалим все элементы
	Пока Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Количество() > 0 Цикл
		Элементы.Удалить(Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Получить(0));
	КонецЦикла;
	
	//Сформируем набор тестов
	СформироватьНаборТестов();
	
	//Выведем тесты на форму
	ОтобразитьТестыНаформе();	
	
КонецПроцедуры	

&НаКлиенте
//*************************************************************
Процедура ЗавершитьТестЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		//Оповестим пользователя
		Состояние("Идет подсчет результата тестирования, подождите немного...");
		
		//СФормируем документ Результат Тестирования
		РезультатФормированияДокумента = СформироватьРезультатТестирования();
		Если РезультатФормированияДокумента = Истина Тогда		
			
			//Выйдем из режима тестирования
			ЭтаФорма.РежимТестирования = Ложь;
			
			//Разукрасим страницы и сформируем документ
			ЗавершитьТестНаСервере();
			
		Иначе
			ПоказатьПредупреждение(,РезультатФормированияДокумента);
		КонецЕсли;
		
		ОбновитьДоступностьКнопок();
		
	КонецЕсли;	
	
КонецПроцедуры

//*************************************************************
&НаСервере
Функция СформироватьРезультатТестирования()
	
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	РезультатТестирования = ТекОбъект.СформироватьРезультатТестирования();
	ЗначениеВРеквизитФормы(ТекОбъект,"Объект");
	Возврат РезультатТестирования;

КонецФункции

//*************************************************************
&НаСервере
Процедура ЗавершитьТестНаСервере()
	
	//Проверим правильные ответы
	ШрифтДляОтвета = Новый Шрифт(,10,Истина,,,,,);
	ЦветПравильногОтвета = Новый Цвет(0,128,0);
	ЦветОшибочногоОтвета = Новый Цвет(128,0,0);
	ЦветОшибочногоТеста = Новый Цвет(255,238,238);
	ЦветПравильногТеста = Новый Цвет(238,255,238);
	
	//Число правильных ответов
	ЧислоПравильныхОтветов = 0;	
	флОтветВерен = Ложь;
	//НомерТеста = 1;
	ПредыдущийТест = Объект.Тесты.Получить(0).Тест;
	ТекСтраница = Элементы["Страница1"];
	
	Для Каждого Строка ИЗ Объект.Тесты Цикл
		
		ТекТест = Строка.Тест;
		Если ТекТест <> ПредыдущийТест Тогда
			
			//Разукрасим страницу
			Если флОтветВерен Тогда
				ТекСтраница.ЦветФона = ЦветПравильногТеста;
				ЧислоПравильныхОтветов = ЧислоПравильныхОтветов + 1;
			Иначе
				Текстраница.ЦветФона = ЦветОшибочногоТеста;
			КонецЕсли;	
			флОтветВерен = Ложь;
			//НомерТеста = НомерТеста + 1;
			ПредыдущийТест = ТекТест;
			ТекСтраница = Элементы["Страница" + Строка(Строка.НомерСтроки)];
			
		КонецЕсли;
		
		//Разукрасим ответы теста
		ТекОтвет = Элементы["Ответ" + Строка(Строка.НомерСтроки)];
		ТекОтвет.ТолькоПросмотр = Истина;
		Если Строка.Выбор Тогда
			//Если выбран
			Если Строка.Правильный Тогда
				//Если правильный
				флОтветВерен = Истина;
				ТекОтвет.ЦветТекстаЗаголовка = ЦветПравильногОтвета;
				ТекОтвет.ШрифтЗаголовка = ШрифтДляОтвета;
			Иначе
				//Если не правильный
				ТекОтвет.ЦветТекстаЗаголовка = ЦветОшибочногоОтвета;
				ТекОтвет.ШрифтЗаголовка = ШрифтДляОтвета;
			КонецЕсли;
		Иначе
			//Если не выбран
			Если Строка.Правильный Тогда
				//Если правильный
				ТекОтвет.ЦветТекстаЗаголовка = ЦветПравильногОтвета;
				ТекОтвет.ШрифтЗаголовка = ШрифтДляОтвета;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	//Разукрасим последюю страницу
	Если флОтветВерен Тогда
		ТекСтраница.ЦветФона = ЦветПравильногТеста;
		ЧислоПравильныхОтветов = ЧислоПравильныхОтветов + 1;
	Иначе
		Текстраница.ЦветФона = ЦветОшибочногоТеста;
	КонецЕсли;
	
	//Выведем надпись о результатах теста
	Элементы.РезультатТестирования.Видимость = Истина;
	Элементы.РезультатТестирования.Заголовок = 
	"Всего тестов: " + ЭтаФорма.ВсегоТестов + Символы.ПС + 
	"Правильных ответов: " + ЧислоПравильныхОтветов + Символы.ПС + 
	"Ошибочных ответов: " + Строка(ЭтаФорма.ВсегоТестов - ЧислоПравильныхОтветов) + Символы.ПС +
	"Результат: " + Строка(Окр(ЧислоПравильныхОтветов * 100 / ЭтаФорма.ВсегоТестов,0)) + " %";
	
	//Изменим кнопку завершения
	Если ЗначениеЗаполнено(Объект.ПрограммаОбучения) Тогда
		Элементы.ЗавершитьТест.Заголовок = "Продолжить";
		Элементы.ЗавершитьТест2.Заголовок = "Продолжить";
	Иначе
		Элементы.ЗавершитьТест.Доступность = Ложь;
		Элементы.ЗавершитьТест2.Доступность = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

//*************************************************************
&НаСервере
Функция ВсеОтветыВведены()
	
	флВсеОтветыВведены = Истина;
	
	флЕстьОтвет = Ложь;
	ПредыдущийТест = Объект.Тесты.Получить(0).Тест;
	Для Каждого Строка ИЗ Объект.Тесты Цикл
		
		//Проверим, введен ли ответ на предыдущий тест
		ТекТест = Строка.Тест;
		Если ТекТест <> ПредыдущийТест Тогда
			Если НЕ флЕстьОтвет Тогда
				флВсеОтветыВведены = Ложь;
				Прервать;
			КонецЕсли;	
			ПредыдущийТест = ТекТест;
			флЕстьОтвет = Ложь;
		КонецЕсли;
		
		Если Строка.Выбор Тогда
			флЕстьОтвет = Истина;
		КонецЕсли;		
		
	КонецЦикла;
	
	//Последний тест
	Если НЕ флЕстьОтвет Тогда
		флВсеОтветыВведены = Ложь;
	КонецЕсли;
	
	Возврат флВсеОтветыВведены;	
	
КонецФункции

//*************************************************************
&НаКлиенте
Процедура ВвестиЗамечание(Команда)
	
	ВыборИзСписка = Новый СписокЗначений;
	ВыборИзСписка.Добавить(1,"Опечатка",,БиблиотекаКартинок.ТС_ЗамечениеПравить);
	ВыборИзСписка.Добавить(2,"Вопрос",,БиблиотекаКартинок.ТС_ЗамечаниеВопрос);
	ВыборИзСписка.Добавить(3,"Неверный ответ",,БиблиотекаКартинок.ТС_ЗамечаниеОшибка);
	ВыборИзсписка.Добавить(4,"Прочее",,БиблиотекаКартинок.ТС_ЗамечаниеПрочее);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВвестиЗамечаниеЗавершение",ЭтаФорма);	
	ПоказатьВыборИзМеню(ОписаниеОповещения,ВыборИзСписка,Элементы.ВвестиЗамечание);
	
КонецПроцедуры

//*************************************************************
&НаКлиенте
Процедура ВвестиЗамечаниеЗавершение(ВыбранныйЭлемент, Параметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		//ЗдесьДопилить
		НомерТеста = Число(Сред(мТекущаяСтраница.Имя,9));
		СписокПараметров = СформироватьПараметрыЗамечания(ВыбранныйЭлемент.Значение, НомерТеста);
		ОткрытьФорму("РегистрСведений.ТС_ЗамечанияКТестам.ФормаЗаписи",СписокПараметров);
	КонецЕсли;		
	
КонецПроцедуры	

//*************************************************************
&НаСервере
Функция СформироватьПараметрыЗамечания(ВыбранныйЭлемент, НомерТеста)
	
	//Получим вид замечания
	Если ВыбранныйЭлемент = 1 Тогда
		ТекВид = Перечисления.ТС_ВидыЗамечаний.Опечатка;
	ИначеЕсли ВыбранныйЭлемент = 2 Тогда
		ТекВид = Перечисления.ТС_ВидыЗамечаний.Вопрос;
	ИначеЕсли ВыбранныйЭлемент = 3 Тогда
		ТекВид = Перечисления.ТС_ВидыЗамечаний.НеверныйОтвет;
	ИначеЕсли ВыбранныйЭлемент = 4 Тогда
		ТекВид = Перечисления.ТС_ВидыЗамечаний.Прочее;
	КонецЕсли;
	
	//Получим тест
	ТекТест = Объект.Тесты.Получить(НомерТеста).Тест;
	
	//Сформируем параметры для ввода замечания	
	Возврат Новый Структура(
			"Курс, Пользователь, Тест, Вид",
			Объект.Курс, Объект.Пользователь,ТекТест,ТекВид);
	
КонецФункции

//*************************************************************
&НаКлиенте
Процедура ВывестиПодтверждение(Команда)
	
	НомерТеста = Число(Сред(мТекущаяСтраница.Имя,9));
	ПараметрыФормы = Новый Структура(
		"Параметры,ИмяМенеджераПечати,ЗаголовокФормы",
		Объект.Тесты.Получить(НомерТеста).Тест,"Справочники.ТС_Тесты.ПечатьПодтверждения","Подтверждение ответа теста");
	ОткрытьФорму("ОбщаяФорма.ТС_ФормаПечати", ПараметрыФормы);
	
КонецПроцедуры

//*************************************************************
&НаКлиенте
Процедура ПоказатьПодсказку(Команда)
	
	НомерТеста = Число(Сред(мТекущаяСтраница.Имя,9));
	ПараметрыФормы = Новый Структура(
		"ИсходныйТекст,ЗаголовокФормы",
		ПолучитьТекстПодсказки(Объект.Тесты.Получить(НомерТеста).Тест),"Подсказка к тесту");
	ОткрытьФорму("ОбщаяФорма.ТС_ФормаПросмотраHTML", ПараметрыФормы);
	
КонецПроцедуры

//*************************************************************
&НаСервере
Функция ПолучитьТекстПодсказки(текТест)
	
	Возврат текТест.Подсказка;
	
КонецФункции

//*************************************************************
&НаКлиенте
Процедура ОткрытьТест(Команда)
	
	НомерТеста = Число(Сред(мТекущаяСтраница.Имя,9));
	ПоказатьЗначение(,Объект.Тесты.Получить(НомерТеста).Тест);	
	
КонецПроцедуры

//*************************************************************
&НаКлиенте
Процедура ДобавитьВИзбранное(Команда)
	
	НомерТеста = Число(Сред(мТекущаяСтраница.Имя,9));
	СтрокаТеста = Объект.Тесты.Получить(НомерТеста);
	
	Если СтрокаТеста.ЕстьВИзбранном Тогда
		//Удалим из избранного
		Если ДобавитьВИзбранноеНаСервере(СтрокаТеста.Тест,"Удалить") Тогда
			СтрокаТеста.ЕстьВИзбранном = Ложь;
			Элементы.ДобавитьВИзбранное.Картинка = БиблиотекаКартинок.ТС_Избранное;
		КонецЕсли;	
	Иначе
		//Добавим в избранное
		Если ДобавитьВИзбранноеНаСервере(СтрокаТеста.Тест,"Добавить") Тогда
			СтрокаТеста.ЕстьВИзбранном = Истина;
			Элементы.ДобавитьВИзбранное.Картинка = БиблиотекаКартинок.ТС_ИзбранноеПомещен;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

//*************************************************************
&НаСервере
Функция ДобавитьВИзбранноеНаСервере(Тест,Действие)
	
	НаборЗаписей = РегистрыСведений.ТС_ИзбранныеТесты.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Курс.Значение = Объект.Курс;
	НаборЗаписей.Отбор.Курс.Использование = Истина;
	НаборЗаписей.Отбор.Пользователь.Значение = Объект.Пользователь;
	НаборЗаписей.Отбор.Пользователь.Использование = Истина;
	НаборЗаписей.Отбор.Тест.Значение = Тест;
	НаборЗаписей.Отбор.Тест.Использование = Истина;
	НаборЗаписей.Прочитать();
	
	Если Действие = "Удалить" Тогда		
		НаборЗаписей.Очистить();
	ИначеЕсли Действие = "Добавить" Тогда
		ЗаписьНабора = НаборЗаписей.Добавить();
		ЗаписьНабора.Курс = Объект.Курс;
		ЗаписьНабора.Пользователь = Объект.Пользователь;
		ЗаписьНабора.Тест = Тест;
	КонецЕсли;
	
	Попытка
		НаборЗаписей.Записать(Истина);
		Возврат Истина;
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки
			
КонецФункции

//*************************************************************
&НаКлиенте
Процедура ПроверитьТест(Команда)
	
	//Проверим правильные ответы
	ШрифтДляОтвета = Новый Шрифт(,10,Истина,,,,,);
	ЦветПравильногОтвета = Новый Цвет(0,128,0);
	ЦветОшибочногоОтвета = Новый Цвет(128,0,0);
	ЦветОшибочногоТеста = Новый Цвет(255,238,238);
	ЦветПравильногТеста = Новый Цвет(238,255,238);
	
	НомерНачальнойСтроки = Число(Сред(мТекущаяСтраница.Имя,9));
	ТекТест = Объект.Тесты.Получить(НомерНачальнойСтроки).Тест;
	
	мВыбран = Ложь;
	Для Сч = НомерНачальнойСтроки ПО Объект.Тесты.Количество() Цикл
		ТекСтрока = Объект.Тесты.Получить(Сч-1);
		Если ТекСтрока.Тест <> ТекТест Тогда
			Прервать;
		КонецЕсли;
		Если ТекСтрока.Выбор Тогда
			мВыбран = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если Не мВыбран Тогда
		Возврат;
	КонецЕсли; 
	
	флОтветВерен = Ложь;
	Для Сч = НомерНачальнойСтроки ПО Объект.Тесты.Количество() Цикл
		
		ТекСтрока = Объект.Тесты.Получить(Сч-1);
		Если ТекСтрока.Тест <> ТекТест Тогда
			Прервать;
		КонецЕсли;
		
		ТекОтвет = Элементы["Ответ" + Строка(ТекСтрока.НомерСтроки)];
		ТекОтвет.ТолькоПросмотр = Истина;
		ТекСтрока.Проверен = Истина;
		Если ТекСтрока.Выбор Тогда
			//Если выбран
			Если ТекСтрока.Правильный Тогда
				//Если правильный
				флОтветВерен = Истина;
				ТекОтвет.ЦветТекстаЗаголовка = ЦветПравильногОтвета;
				ТекОтвет.ШрифтЗаголовка = ШрифтДляОтвета;
			Иначе
				//Если не правильный
				ТекОтвет.ЦветТекстаЗаголовка = ЦветОшибочногоОтвета;
				ТекОтвет.ШрифтЗаголовка = ШрифтДляОтвета;
			КонецЕсли;
		Иначе
			//Если не выбран
			Если ТекСтрока.Правильный Тогда
				//Если правильный
				ТекОтвет.ЦветТекстаЗаголовка = ЦветПравильногОтвета;
				ТекОтвет.ШрифтЗаголовка = ШрифтДляОтвета;
			КонецЕсли;
		КонецЕсли;	
				
	КонецЦикла;	
				
	Если флОтветВерен Тогда
		мТекущаяСтраница.ЦветФона = ЦветПравильногТеста;
	Иначе
		мТекущаяСтраница.ЦветФона = ЦветОшибочногоТеста;
	КонецЕсли;
	
	Команда = флОтветВерен;
	
	Элементы.ПроверитьТест.Доступность = Ложь;
	Элементы.ПроверитьТест2.Доступность = Ложь;
				
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОтвет1(Команда)
	ВыбратьОтвет(1);	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОтвет2(Команда)
	ВыбратьОтвет(2);	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОтвет3(Команда)
	ВыбратьОтвет(3);	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОтвет4(Команда)
	ВыбратьОтвет(4);	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОтвет5(Команда)
	ВыбратьОтвет(5);	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОтвет6(Команда)
	ВыбратьОтвет(6);	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОтвет(Номер)
	
	Если Не Элементы.ПроверитьТест.Доступность Тогда
		СледующийТест(Неопределено);
		Возврат;
	КонецЕсли; 
	
	НомерНачальнойСтроки = Число(Сред(мТекущаяСтраница.Имя,9));
	ТекТест = Объект.Тесты.Получить(НомерНачальнойСтроки).Тест;
	
	Если Объект.Тесты.Количество() < НомерНачальнойСтроки+Номер-1 Тогда
		Возврат;
	КонецЕсли; 
	
	мВыбран = Ложь;
	Для Сч = НомерНачальнойСтроки ПО Объект.Тесты.Количество() Цикл
		ТекСтрока = Объект.Тесты.Получить(Сч-1);
		Если ТекСтрока.Тест <> ТекТест Тогда
			Прервать;
		КонецЕсли;
		Если ТекСтрока.Выбор Тогда
			ТекСтрока.Выбор = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ТекСтрока = Объект.Тесты.Получить(НомерНачальнойСтроки+Номер-2);
	Если ТекСтрока.Тест <> ТекТест Тогда
		Возврат;
	КонецЕсли;
	
	ТекСтрока.Выбор = Истина;
	
	СледующийТест(Неопределено);
	
КонецПроцедуры
 
