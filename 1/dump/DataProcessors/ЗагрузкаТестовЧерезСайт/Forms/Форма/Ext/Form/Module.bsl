
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РазделПриИзмененииНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЗначениеЗаполнено(ТипСайта) Тогда
		ТипСайта = "free";
	КонецЕсли;
	
	ЗаполнитьСерверДляПолученияДанных();

КонецПроцедуры

&НаКлиенте
Процедура ТипСайтаПриИзменении(Элемент)
	
	ЗаполнитьСерверДляПолученияДанных();
	РазделПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСерверДляПолученияДанных()
	
	Если ТипСайта = "dist" Тогда
		Сервер = "dist.edu.1c.ru";
	ИначеЕсли ТипСайта = "free" Тогда
		Сервер = "free.edu.1c.ru";
	Иначе
		ВызватьИсключение "Не выбран тип сайта";
	КонецЕсли;
	
КонецПроцедуры


//Выбор разделов для обновления
&НаКлиенте
Процедура РазделПриИзменении(Элемент)
	РазделПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура РазделПриИзмененииНаСервере()
	
	Выборка = ПолучитьВыборкуРазделовДляОбновления(КурсДляОбновления, ТипСайта);
	ЗаполнитьНаборРазделовДляОбновления(Выборка);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВыборкуРазделовДляОбновления(ОбновляемыйКурс, ТипСайта)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыФормированияЗапросаДляОбновленияТестов.Курс КАК Раздел,
	|	ЛОЖЬ КАК Пометка
	|ИЗ
	|	РегистрСведений.ПараметрыФормированияЗапросаДляОбновленияТестов КАК ПараметрыФормированияЗапросаДляОбновленияТестов
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ТипСайта = ""dist""
	|				ТОГДА НЕ ПараметрыФормированияЗапросаДляОбновленияТестов.DL_RES_Dist = """"
	|			ИНАЧЕ НЕ ПараметрыФормированияЗапросаДляОбновленияТестов.DL_RES_Free = """"
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПараметрыФормированияЗапросаДляОбновленияТестов.Курс.Наименование";
	Запрос.УстановитьПараметр("ОбновляемыеКурсы", ОбновляемыйКурс);
	Запрос.УстановитьПараметр("ТипСайта", ТипСайта);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Возврат Выборка;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНаборРазделовДляОбновления(Выборка)
	
	СписокРазделов.Очистить();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СписокРазделов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборТестовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

//Получение данных

&НаКлиенте
Процедура ПолучитьДанныеИзСайта(Команда)

	Если Не ЗначениеЗаполнено(JsessionID) Тогда
		Сообщить("Не заполнен Jsession ID");
		Возврат
	КонецЕсли;
	
	ПолучитьДанныеИзСайтаНаСеврере();
	ПодключитьОбработчикОжидания("ЗагрузкаВопросовФоновоеЗаданиеКлиент", 5, Ложь);
	Элементы.ГруппаФоновоеЗадание.Видимость = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеИзСайтаНаСеврере()
	
	ОтветыНаВопросы.Очистить();
	ЗагружаемыеВопросы.Очистить();
	ДеревоДанныеЗагрузки.ПолучитьЭлементы().Очистить();
	
	ПараметрыФоновогоЗадания = СписокПараметровДляВыполненияФоновогоЗадания();
	ФоновыеЗаданияСервер.ЗапуститьФоновоеВыполнение("ФоновыеЗаданияСервер.ПолучитьДанныеТестаНаСервере",Новый Структура("СтруктураПараметров",ПараметрыФоновогоЗадания), УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция СписокПараметровДляВыполненияФоновогоЗадания() 
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ОтветыНаВопросы", ОтветыНаВопросы.Выгрузить());
	СтруктураПараметров.Вставить("ЗагружаемыеВопросы", ЗагружаемыеВопросы.Выгрузить());
	СтруктураПараметров.Вставить("Заголовки", ПолучитьЗаголовкиЗапроса());
	СтруктураПараметров.Вставить("СписокРазделов", СписокРазделов.Выгрузить());
	СтруктураПараметров.Вставить("Сервер", Сервер);
	СтруктураПараметров.Вставить("ТипСайта", ТипСайта);
	СтруктураПараметров.Вставить("ДеревоДанных", РеквизитФормыВЗначение("ДеревоДанныеЗагрузки"));

	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	СтруктураПараметров.Вставить("АдресВременногоХранилища", АдресВременногоХранилища);
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция ПолучитьЗаголовкиЗапроса()
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("host", Сервер);
	
	Заголовки.Вставить("Accept","text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9");
	//Заголовки.Вставить("Accept-Encoding",    "gzip, deflate, br");
	Заголовки.Вставить("Accept-Language", "ru,en;q=0.9,en-GB;q=0.8,en-US;q=0.7");
	Заголовки.Вставить("Cache-Control","no-cache");
	Заголовки.Вставить("Connection", "keep-alive");
	Заголовки.Вставить("Upgrade-Insecure-Requests", 1);
	Заголовки.Вставить("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko)Chrome/99.0.4844.84 Safari/537.36 OPR/85.0.4341.79");
	Заголовки.Вставить("Cookie", "JSESSIONID=" + JsessionID); 
	
	Возврат Заголовки;
КонецФункции

&НаКлиенте
Процедура СохранитьДанные(Команда)
	
	СохранитьДанныеНаСервере();
	
	Элементы.СохранитьДанные.Доступность = Ложь;
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Обработка завершена.";
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДанныеНаСервере()
	
	ДеревоДанных = РеквизитФормыВЗначение("ДеревоДанныеЗагрузки");
	Попытка
		ОбходДереваДетально(ДеревоДанных);
	Исключение
		ЗаписьЖурналаРегистрации("Ошибка создания данных", УровеньЖурналаРегистрации.Ошибка,,,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ОбходДереваДетально(ПереданноеДер, ПараметрыЗаполнения = Неопределено)
	
	Для Каждого СтрПолученногоДерева Из ПереданноеДер.Строки Цикл
		
		Если ЗначениеЗаполнено(СтрПолученногоДерева.ВопросВБазе) Или ЗначениеЗаполнено(СтрПолученногоДерева.ВопросНаСайте) Тогда
			
			ПараметрыЗаполнения = Новый Структура;
			ПараметрыЗаполнения.Вставить("Объект", Неопределено);
			ПараметрыЗаполнения.Вставить("Записать", Ложь);
			
			ОбработатьЗагрузкуВопроса(СтрПолученногоДерева, ПараметрыЗаполнения);
			
		ИначеЕсли ЗначениеЗаполнено(СтрПолученногоДерева.ОтветВБазе) Или ЗначениеЗаполнено(СтрПолученногоДерева.ОтветНаСайте) Тогда
			ОбработатьЗагрузкуОтветаНаВопрос(СтрПолученногоДерева, ПараметрыЗаполнения);
		ИначеЕсли ЗначениеЗаполнено(СтрПолученногоДерева.Курс) Тогда
			//РазделОбъект = СтрПолученногоДерева.Курс.ПолучитьОбъект();
			//РазделОбъект.КоличествоВопросов = СтрПолученногоДерева.КоличествоВопросовНаСайте;
			//РазделОбъект.ДатаАктуальности = ТекущаяДатаСеанса();
			//РазделОбъект.Записать();
		КонецЕсли;
		
		Если СтрПолученногоДерева.Строки.Количество()>0 Тогда
			ОбходДереваДетально(СтрПолученногоДерева, ПараметрыЗаполнения);
		КонецЕсли;
		
	КонецЦикла;
	
	//Чтобы не делать несколько записей при заполнении ответов будет передаваться флаг, когда надо сделать запись
	Если Не ПараметрыЗаполнения = Неопределено И ПараметрыЗаполнения.Свойство("Записать") И ПараметрыЗаполнения.Записать Тогда
		ПараметрыЗаполнения.Объект.Записать();
		ПараметрыЗаполнения = Неопределено;
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьЗагрузкуВопроса(СтрокаДерева, ПараметрыЗаполнения)
	
	Если ЗначениеЗаполнено(СтрокаДерева.ТестСсылка) Тогда
		ПараметрыЗаполнения.Объект = СтрокаДерева.ТестСсылка.ПолучитьОбъект();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтрокаДерева.Раздел) Тогда
		// Если по какой-то причине не определился раздел
		СтрокаДерева.Раздел = ЗаполнитьРазделКурса(СтрокаДерева.НомерВопросаНаСайте, СтрокаДерева.Курс);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтрокаДерева.ВопросВБазе) Тогда
		СоздатьНовыйВопросВБазе(СтрокаДерева, ПараметрыЗаполнения);
	ИначеЕсли Не ЗначениеЗаполнено(СтрокаДерева.ВопросНаСайте) Тогда
		ПометитьНаУдалениеУстаревшийВопрос(ПараметрыЗаполнения.Объект);
	ИначеЕсли СтрокаДерева.ВопросВБазе = СтрокаДерева.ВопросНаСайте Тогда
		//Обновляем ответы на вопрос и подсказку (если есть)
		ПараметрыЗаполнения.Объект.Ответы.Очистить();
		ЗаполнитьОсновныеПараметры(ПараметрыЗаполнения.Объект, СтрокаДерева);
		Если Не СтрокаДерева.ЕстьКартинкаВБазе И СтрокаДерева.ЕстьКартинкаНаСайте Тогда
			ПараметрыЗаполнения.Объект.Изображение = ПолучитьКартинкуССайта(СтрокаДерева);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьРазделКурса(НомерВопроса, Курс)
	
	// Номера для сайтов dist и free различаются
	// обычно, в free нету лидирующего нуля у номера раздела
	// при загрузке вопроса было выполнено преобразование
	// чтобы при получении номер раздела всегда был двухзначный
	КоличествоСимволов = 2;
	
	НомерРаздела = Число(Лев(НомерВопроса,КоличествоСимволов));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ТС_Тесты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ТС_Тесты КАК ТС_Тесты
		|ГДЕ
		|	ТС_Тесты.ЭтоГруппа
		|	И ТС_Тесты.НомерРаздела = &НомерРаздела
		|	И ТС_Тесты.Владелец = &Владелец
		|	И НЕ ТС_Тесты.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Владелец", Курс);
	Запрос.УстановитьПараметр("НомерРаздела", НомерРаздела);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	НовыйРаздел = Справочники.ТС_Тесты.СоздатьГруппу();
	НовыйРаздел.Владелец = Курс;
	НовыйРаздел.НомерРаздела = НомерРаздела;
	НовыйРаздел.Наименование = "" + Формат(НомерРаздела,"ЧЦ=2; ЧВН=") + ".";
	НовыйРаздел.Записать();
	
	Возврат НовыйРаздел.Ссылка;
	
КонецФункции

&НаСервере
Процедура СоздатьНовыйВопросВБазе(СтрокаДерева, ПараметрыЗаполнения)
	
	НовыйВопрос = Справочники.ТС_Тесты.СоздатьЭлемент();
	НовыйВопрос.Вопрос = СтрокаДерева.ВопросНаСайте;
	НовыйВопрос.Актуальный = Истина;
	НовыйВопрос.Устаревший = Ложь;
	НовыйВопрос.ПеремешиватьОтветы = Ложь;
	НовыйВопрос.Изображение = ПолучитьКартинкуССайта(СтрокаДерева);
	НовыйВопрос.Владелец = СтрокаДерева.Курс;
	НовыйВопрос.Родитель = СтрокаДерева.Раздел;
	ЗаполнитьОсновныеПараметры(НовыйВопрос, СтрокаДерева);
		
	ПараметрыЗаполнения.Объект = НовыйВопрос;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОсновныеПараметры(ВопросОбъект, СтрокаДерева)
	
	ВопросОбъект.Наименование = СтрокаДерева.НомерВопросаНаСайте;
	ВопросОбъект.НомерВопроса = СтрокаДерева.НомерВопросаНаСайте;
	
	ВопросОбъект.Актуальный = Истина;
	ВопросОбъект.Устаревший = Ложь;
	
	ЗаполнитьПодсказку(ВопросОбъект, СтрокаДерева);

КонецПроцедуры

&НаСервере
Функция ПолучитьКартинкуССайта(СтрокаДерева)
	
	КартинкаСсылка = Справочники.ТС_Файлы.ПустаяСсылка();
	
	Если Не СтрокаДерева.ЕстьКартинкаНаСайте Тогда
		Возврат КартинкаСсылка;
	КонецЕсли;
	
	//Получить Путь до картинки на сайте
	ПараметрыОтбора = Новый Структура("Идентификатор", СтрокаДерева.ИдентификаторВопроса);
	СтрокаСВопросом = ЗагружаемыеВопросы.НайтиСтроки(ПараметрыОтбора);
	
	Если СтрокаСВопросом.Количество() = 0 Тогда
		Возврат КартинкаСсылка;
	КонецЕсли;
	
	
	//Получить картинку
	Заголовки = ПолучитьЗаголовкиЗапроса();  
	ТекстЗапроса = СтрШаблон("%1/%2", СтрокаСВопросом[0].ТекстЗапроса, СтрокаСВопросом[0].ИмяКартинки);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"/Question.xml","");
	Соединение = Новый HTTPСоединение(Сервер,443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	Запрос = Новый HTTPЗапрос(ТекстЗапроса, Заголовки);
	Ответ = Соединение.Получить(Запрос);
	
	Если Не Ответ.КодСостояния = 200 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не удалось загрузить картинку для вопроса " + СтрокаДерева.ВопросНаСайте + ". номер вопроса: " + СтрокаДерева.ДанныеЗагрузкиНомерВопросаНаСайте;
		Сообщение.Сообщить();
		
		Возврат КартинкаСсылка;
	КонецЕсли;
	
	СтруктураФайл = ПолучитьКартинку(Ответ, СтрокаСВопросом[0], СтрокаСВопросом[0].ИмяКартинки);
	
	ДвоичныеДанные = СтруктураФайл.ДвоичныеДанные;
	ИмяТемпФайла   = СтруктураФайл.ИмяТемпФайла;
	
	Файл = Справочники.ТС_Файлы.СоздатьЭлемент();
	Путь = ПоместитьВоВременноеХранилище(ИмяТемпФайла);
	Файл.Изображение = Новый ХранилищеЗначения(ДвоичныеДанные);
	Файл.Наименование = СтрокаСВопросом[0].Вопрос;
	Файл.ТС_Комментарий = СтрокаСВопросом[0].ИмяКартинки;
	Файл.Записать();
	
	УдалитьФайлы(ИмяТемпФайла);
	
	Возврат Файл.Ссылка;
	
КонецФункции

Функция ПолучитьКартинку(Знач Ответ, Знач СтрокаСВопросом, ИмяКартинки)
	
	ДвоичныеДанные = Ответ.ПолучитьТелоКакДвоичныеДанные();
	
	ДлинаСтрокиИмениФайла = СтрДлина(ИмяКартинки);
	НачалоРасширения = СтрНайти(ИмяКартинки, ".",НаправлениеПоиска.СКонца);
	Расширение = Сред(ИмяКартинки,НачалоРасширения + 1, ДлинаСтрокиИмениФайла - НачалоРасширения);
	
	ИмяТемпФайла = ПолучитьИмяВременногоФайла(Расширение);
	ДвоичныеДанные.Записать(ИмяТемпФайла);
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ДвоичныеДанные", ДвоичныеДанные);
	СтруктураВозврата.Вставить("ИмяТемпФайла", ИмяТемпФайла);

	Возврат СтруктураВозврата;
	
КонецФункции


&НаСервере
Процедура ПометитьНаУдалениеУстаревшийВопрос(ТестОбъект)
	
	ТестОбъект.Актуальный = Ложь;
	ТестОбъект.Устаревший = Истина;
	ТестОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодсказку(ТестОбъект, СтрокаДерева)
	
	Если ЗначениеЗаполнено(СтрокаДерева.ПодсказкаНаСайте) Тогда
		ТестОбъект.Подсказка = СтрокаДерева.ПодсказкаНаСайте;
	КонецЕсли;
	
	МассивСтрок = СтрРазделить(СтрокаДерева.ПодсказкаНаСайте, Символы.ПС);
	
	ИзображенияКПоиску = Новый Массив;
	Для Каждого СтрПодсказка Из МассивСтрок Цикл
		Если СтрНайти(СтрПодсказка, "img </") = 0 Тогда 
			Продолжить;
		КонецЕсли;
		ИзображенияКПоиску.Добавить(СтрПодсказка);
	КонецЦикла;
	
	Если ИзображенияКПоиску.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	КартинкиКомменатиев = ТестОбъект.КартинкиВКомментариях;
	КартинкиКомменатиев.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТС_Файлы.Ссылка КАК Картинка,
	|	ТС_Файлы.удКомментарий КАК ТекстКартинки
	|ИЗ
	|	Справочник.ТС_Файлы КАК ТС_Файлы
	|ГДЕ
	|	ТС_Файлы.удКомментарий ПОДОБНО ""img </Resource%""";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Для Каждого СтрИзображение Из ИзображенияКПоиску Цикл
			
			СсылкаКартинка = ПолучитьКартинкуКомментария(СтрИзображение, СтрокаДерева);
			Если Не ЗначениеЗаполнено(СсылкаКартинка) Тогда
				Продолжить;
			КонецЕсли;
			СтрКартинка = КартинкиКомменатиев.Добавить();
			СтрКартинка.Картинка = СсылкаКартинка;
			
		КонецЦикла;
		
		Возврат;
		
	КонецЕсли;
	
	Выборка= РезультатЗапроса.Выбрать();
	
	Для Каждого СтрИзображение Из ИзображенияКПоиску Цикл
		
		Выборка.Сбросить();
		КартинкаНайдена = Ложь;
		
		Отбор = Новый Структура("ТекстКартинки",СтрИзображение);
		Пока Выборка.НайтиСледующий(Отбор) Цикл
			СтрКартинка = КартинкиКомменатиев.Добавить();
			ЗаполнитьЗначенияСвойств(СтрКартинка, Выборка);
			КартинкаНайдена = Истина;
		КонецЦикла;
		
		Если КартинкаНайдена Тогда 
			Продолжить;
		КонецЕсли;
		
		СсылкаКартинка = ПолучитьКартинкуКомментария(СтрИзображение, СтрокаДерева);
		Если Не ЗначениеЗаполнено(СсылкаКартинка) Тогда
			Продолжить;
		КонецЕсли;
		СтрКартинка = КартинкиКомменатиев.Добавить();
		СтрКартинка.Картинка = СсылкаКартинка;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьКартинкуКомментария(Знач СтрокаЗапроса, СтрокаДерева)
	
	ТекстЗапроса = СтрЗаменить(СтрокаЗапроса, "img <", "");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ">", "");
	
	КартинкаСсылка = Справочники.ТС_Файлы.ПустаяСсылка();
	//Получить картинку
	Заголовки = ПолучитьЗаголовкиЗапроса();  
	Соединение = Новый HTTPСоединение(Сервер,443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	Запрос = Новый HTTPЗапрос(ТекстЗапроса, Заголовки);
	Ответ = Соединение.Получить(Запрос);
	
	Если Не Ответ.КодСостояния = 200 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не удалось загрузить картинку комментария для вопроса " + СтрокаДерева.ВопросНаСайте + ". номер вопроса: " + СтрокаДерева.НомерВопросаНаСайте;
		Сообщение.Сообщить();
		
		Возврат КартинкаСсылка;
	КонецЕсли;
	
	СтруктураФайл = ПолучитьКартинку(Ответ, СтрокаДерева, ТекстЗапроса);
	
	ДвоичныеДанные = СтруктураФайл.ДвоичныеДанные;
	ИмяТемпФайла   = СтруктураФайл.ИмяТемпФайла;

	Файл = Справочники.ТС_Файлы.СоздатьЭлемент();
	Путь = ПоместитьВоВременноеХранилище(ИмяТемпФайла);
	Файл.Изображение = Новый ХранилищеЗначения(ДвоичныеДанные);
	Файл.Наименование = СтрШаблон("Картинка комментария к вопросу №%1 ""%2""", СтрокаДерева.НомерВопросаНаСайте, СтрокаДерева.Вопрос);
	Файл.ТС_Комментарий = СтрокаЗапроса;
	Файл.удКомментарий = СтрокаЗапроса;
	Файл.Записать();
	
	УдалитьФайлы(ИмяТемпФайла);
	
	Возврат Файл.Ссылка;
	
КонецФункции

&НаСервере
Процедура ОбработатьЗагрузкуОтветаНаВопрос(СтрокаДерева, ПараметрыЗаполнения)
	
	Если Не ЗначениеЗаполнено(СтрокаДерева.ОтветНаСайте) Тогда
		Возврат
	КонецЕсли;
	
	ТестОбъект = ПараметрыЗаполнения.Объект;
	
	Если ТестОбъект.Устаревший Тогда
		Возврат;
	КонецЕсли;
	
	СтрОтвет = ТестОбъект.Ответы.Добавить();
	СтрОтвет.Ответ = СокрЛП(СтрокаДерева.ОтветНаСайте);
	СтрОтвет.Правильный = СтрокаДерева.ПравильныйОтветНаСайте;
	
	ПараметрыЗаполнения.Записать = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузкаВопросовФоновоеЗаданиеКлиент()
	
	Если ЗагрузкаВопросовФоновоеЗаданиеЗаданиеЗавершено() Тогда
		ОтключитьОбработчикОжидания("ЗагрузкаВопросовФоновоеЗаданиеКлиент");
		
		Элементы.ГруппаФоновоеЗадание.Видимость = Ложь;
		Элементы.СохранитьДанные.Доступность = Истина;
		
		ЗагрузитьРезультатВыполненияФоновогоЗадания();
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ЗагрузкаВопросовФоновоеЗаданиеЗаданиеЗавершено()
	
	Отбор = Новый Структура;
	Отбор.Вставить("Ключ", Строка(УникальныйИдентификатор));
	Отбор.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
	
	ФоновыеЗаданияЗагрузки = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	
	Если ФоновыеЗаданияЗагрузки.Количество() = 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Загрузка вопросов завершена!";
		Сообщение.Сообщить();
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьРезультатВыполненияФоновогоЗадания()
	
	Данные = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	Если Данные = Неопределено Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Во время загрузки произошла ошибка. См. журнал регистрации.";
		Сообщение.Сообщить();
	ИначеЕсли ТипЗнч(Данные) = Тип("Строка")Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = Данные;
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(Данные.ДеревоДанных,"ДеревоДанныеЗагрузки");
	ЗагружаемыеВопросы.Очистить();
	ЗагружаемыеВопросы.Загрузить(Данные.ЗагружаемыеВопросы);
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ЗагрузкаДанныхССайта
КонецПроцедуры


&НаКлиенте
Процедура ОтменитьЗаданиеНажатие(Элемент)
	ОтменитьФоновоеЗадание();
КонецПроцедуры

&НаСервере 
Процедура ОтменитьФоновоеЗадание()
	
	Отбор = Новый Структура;
	Отбор.Вставить("Ключ", Строка(УникальныйИдентификатор));
	
	ФоновыеЗаданияЗагрузки = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	
	Для Каждого СтрФонЗадание Из ФоновыеЗаданияЗагрузки Цикл
		СтрФонЗадание.Отменить();
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище("Задание отменено!", АдресВременногоХранилища);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсеЭлементы(Команда)
	ПоставитьФлаг(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеЭлементы(Команда)
	ПоставитьФлаг(Ложь);
КонецПроцедуры

&НаСервере
Процедура ПоставитьФлаг(Флаг)
	
	Для Каждого Строка Из СписокРазделов Цикл
		Строка.Пометка = Флаг;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРаскрытьВсе(Команда)
	
	КоллекцияЭлементовДерева = ДеревоДанныеЗагрузки.ПолучитьЭлементы();
	
	Для Каждого СтрокаДерева Из КоллекцияЭлементовДерева Цикл
		ИдентификаторСтроки = СтрокаДерева.ПолучитьИдентификатор();
		Элементы.ДанныеЗагрузки.Развернуть(ИдентификаторСтроки, Истина);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ДеревоСвернутьВсе(Команда)
	
	КоллекцияЭлементовДерева = ДеревоДанныеЗагрузки.ПолучитьЭлементы();
	
	Для Каждого СтрокаДерева Из КоллекцияЭлементовДерева Цикл
		ИдентификаторСтроки = СтрокаДерева.ПолучитьИдентификатор();
		Элементы.ДанныеЗагрузки.Свернуть(ИдентификаторСтроки);
	КонецЦикла;
	
КонецПроцедуры



