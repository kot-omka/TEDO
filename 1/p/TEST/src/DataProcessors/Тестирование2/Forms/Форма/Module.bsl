
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Раздел = 1;
	Режим = "Раздел";
	РезультатПрохождения = "Результат прохождения";
	ТестНеСдан = "Тест не сдан";
	ТестСдан = "Тест сдан";
	ПроцентФорма = "(0%)";
	Пользователь = ПараметрыСеанса.ТС_ТекущийПользователь.ПолноеНаименование();
	
	Элементы.Завершить.Видимость = Ложь;	
	Элементы.ГруппаОтвет1.Видимость = Ложь;
	Элементы.ГруппаОтвет2.Видимость = Ложь;
	Элементы.ГруппаОтвет3.Видимость = Ложь;
	Элементы.ГруппаОтвет4.Видимость = Ложь;
	Элементы.ГруппаОтвет5.Видимость = Ложь;
	Элементы.ГруппаОтвет6.Видимость = Ложь;
	Элементы.Картинка.Видимость = Ложь;
	Элементы.Подсказка1.Видимость = Ложь;
	Элементы.Далее.Видимость = Ложь;
	Элементы.Назад.Видимость = Ложь;

	Элементы.ДанОтветПравильно.Видимость = Ложь;
	Элементы.ДанОтветНеправильно.Видимость = Ложь; 
	Элементы.ДанОтветПоказан.Видимость = Ложь; 		
	Элементы.ГруппаКнопокСнизу.Видимость = Ложь; 
	Элементы.ГруппаРезультат.Видимость = Ложь;
	Элементы.ГруппаРезультатПроцентНеСдан.Видимость = Ложь;
	Элементы.ГруппаРезультатПроцентСдан.Видимость = Ложь;
	Элементы.ГруппаВопросИзбранный.Видимость = Ложь;
	РасположениеВопросов = "Вертикально";
	
	ЦветТекста = Новый Цвет(51,51,51);
	Элементы.Ответ1.ЦветТекста = ЦветТекста;
	Элементы.Ответ2.ЦветТекста = ЦветТекста;
	Элементы.Ответ3.ЦветТекста = ЦветТекста;
	Элементы.Ответ4.ЦветТекста = ЦветТекста;
	Элементы.Ответ5.ЦветТекста = ЦветТекста;
	Элементы.Ответ6.ЦветТекста = ЦветТекста;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделПриИзменении(Элемент)
	Если Раздел > 14 Тогда
		Раздел = 14;
	ИначеЕсли Раздел < 1 Тогда
		Раздел = 1;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура НомерПриИзменении(Элемент)
	
	Если Номер > КоличествоВопросов Тогда
		Номер = КоличествоВопросов;
	ИначеЕсли Номер < 1 Тогда
		Номер = 1;
	КонецЕсли;
	
	Если Элементы.Завершить.Видимость Тогда
		ОбновитьВопрос();
		ОбновитьВопросПослеСменыВопроса();
	КонецЕсли;
	
	//ТабДокПодсказка.Показать();

КонецПроцедуры


&НаСервере
Процедура НачатьНаСервере()
	
	Номер = 1;
	
	СоздатьСписокВопросов();
	
	Если Режим = "Избранные вопросы" И Результат.Количество() = 0 Тогда
		Сообщить("По данному курсу отсутствуют вопросы, которые добавлены в ""Избранное"".");
		Возврат;
	ИначеЕсли Результат.Количество() = 0 Тогда
		Сообщить("Выбран курс, в котором отстутсвуют разделы тестирования");
	КонецЕсли;
	
	Если ПеремешатьВопросы Тогда
		ПеремешатьВопросыНаСервере();
	КонецЕсли;
	
	Если ОбновитьВопрос() Тогда
		Элементы.ГруппаКнопокСнизу.Видимость = Истина; 
		
		Если Режим = "Экзамен" И ПараметрыПользователяСимуляцияЭкзамена Тогда
			НадоОтображатьПодсказку = Ложь;
			НадоОтображатьИзбранное = Ложь;
		Иначе
			НадоОтображатьПодсказку = ЗначениеЗаполнено(Подсказка);
			НадоОтображатьИзбранное = Истина;
		КонецЕсли;
		
		Элементы.ДобавитьВИзбранное.Видимость = НадоОтображатьИзбранное;
		Элементы.Подсказка.Видимость = НадоОтображатьПодсказку;
		Элементы.Начать.Видимость = Ложь;
		Элементы.Завершить.Видимость = Истина;
		Элементы.Режим.Видимость = Ложь;
		Элементы.Раздел.Доступность = Ложь;
		Элементы.Экзамен.Доступность = Ложь;
		Элементы.ГруппаПеремешатьВопросыИОтветы.Доступность = Ложь;
		//Начало = ТекущаяДата();
		
		Элементы.ГруппаРезультат.Видимость = Ложь;
		Элементы.ГруппаРезультатПроцентНеСдан.Видимость = Ложь;
		Элементы.ГруппаРезультатПроцентСдан.Видимость = Ложь;
		Элементы.ПараметрыПользователя.Видимость = Ложь; 
		
	Иначе 
		Сообщить("Что то не так. Ошибка Отображения первого вопроса раздела");	
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыТестированияПользователя()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПараметрыТестированияПользователя.ШиринаТекстаПодсказки, 0) = 0
		|			ТОГДА 10
		|		ИНАЧЕ ПараметрыТестированияПользователя.ШиринаТекстаПодсказки
		|	КОНЕЦ КАК ПараметрыПользователяРазмерШрифтаПодсказки,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПараметрыТестированияПользователя.РазмерШтрифтаПодсказки, 0) = 0
		|			ТОГДА 12
		|		ИНАЧЕ ПараметрыТестированияПользователя.РазмерШтрифтаПодсказки
		|	КОНЕЦ КАК ПараметрыПользователяШиринаТекстаПодсказки,
		|	ПараметрыТестированияПользователя.СимуляцияЭкзамена КАК ПараметрыПользователяСимуляцияЭкзамена,
		|	ПараметрыТестированияПользователя.ГорячиеКлавиши КАК ГорячиеКлавиши,
		|	ТС_Пользователи.ПереходитьКСледующемуПриВыборе КАК ПараметрыПользователяПереходитьКСледующемуВопросуПослеОтвета,
		|	ТС_Пользователи.ПропускатьНеправильныеОтветы КАК ПараметрыПользователяПропускатьНеправильныеОтветы
		|ИЗ
		|	Справочник.ТС_Пользователи КАК ТС_Пользователи
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТестированияПользователя КАК ПараметрыТестированияПользователя
		|		ПО (ПараметрыТестированияПользователя.Пользователь = ТС_Пользователи.Ссылка)
		|ГДЕ
		|	ТС_Пользователи.Ссылка = &Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТС_ТекущийПользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		
		ПараметрыПользователяРазмерШрифтаПодсказки = 12;
		ПараметрыПользователяШиринаТекстаПодсказки = 10;
		ПараметрыПользователяСимуляцияЭкзамена = Ложь;
		
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект,Выборка);
	
	Если ЗначениеЗаполнено(Выборка.ГорячиеКлавиши) Тогда 
		ГорячиеКлавиши = Выборка.ГорячиеКлавиши.Получить();
	Иначе
		ГорячиеКлавиши = Неопределено
	КонецЕсли;

	Если Не ГорячиеКлавиши = Неопределено Тогда
		
		Для Каждого Стр Из ГорячиеКлавиши Цикл 
			Команды[Стр.ЭлементФормы].СочетаниеКлавиш =новый СочетаниеКлавиш(Стр.Клавиша,Стр.Alt,Стр.Ctrl, Стр.Shift);
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры


Процедура ОбновитьВопросПослеСменыВопроса()
	
	Если Режим = "Экзамен" И ПараметрыПользователяСимуляцияЭкзамена Тогда 
		ОтображатьПодсказку = Ложь; 
	Иначе
		ОтображатьПодсказку = ЗначениеЗаполнено(Подсказка);
	КонецЕсли;
	
	
	Элементы.ГруппаКнопокСнизу.Видимость = Истина; 
	Элементы.Подсказка.Видимость = ОтображатьПодсказку;
	Элементы.Начать.Видимость = Ложь;
	Элементы.Завершить.Видимость = Истина;
	Элементы.Режим.Видимость = Ложь;
	Элементы.Раздел.Доступность = Ложь;
	Элементы.Экзамен.Доступность = Ложь;   
	Элементы.ГруппаПеремешатьВопросыИОтветы.Доступность = Ложь;

	//Начало = ТекущаяДата();
	
	Элементы.ГруппаРезультат.Видимость = Ложь;
	Элементы.ГруппаРезультатПроцентНеСдан.Видимость = Ложь;
	Элементы.ГруппаРезультатПроцентСдан.Видимость = Ложь;
	
КонецПроцедуры


&НаСервере
Процедура СоздатьСписокВопросов()

	Если Режим = "Раздел" или Режим = "Учить" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПараметрыФормированияЗапросаДляОбновленияТестов.Курс КАК Раздел,
		|	&Раздел КАК НомерРаздела
		|ПОМЕСТИТЬ ВТ_ВыбранныйРаздел
		|ИЗ
		|	РегистрСведений.ПараметрыФормированияЗапросаДляОбновленияТестов КАК ПараметрыФормированияЗапросаДляОбновленияТестов
		|ГДЕ
		|	НЕ ПараметрыФормированияЗапросаДляОбновленияТестов.Курс.ПометкаУдаления
		|	И ПараметрыФормированияЗапросаДляОбновленияТестов.Курс = &Экзамен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВыбранныйРаздел.НомерРаздела КАК Раздел,
		|	ТС_Тесты.НомерВопроса КАК Номер,
		|	0 КАК ДанОтвет,
		|	ЛОЖЬ КАК ОтветВерный,
		|	ЛОЖЬ КАК ОтветПоказан,
		|	ТС_Тесты.Родитель КАК РазделСсылка
		|ИЗ
		|	Справочник.ТС_Тесты КАК ТС_Тесты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВыбранныйРаздел КАК ВТ_ВыбранныйРаздел
		|		ПО ТС_Тесты.Владелец = ВТ_ВыбранныйРаздел.Раздел
		|			И ТС_Тесты.Родитель.НомерРаздела = ВТ_ВыбранныйРаздел.НомерРаздела
		|ГДЕ
		|	НЕ ТС_Тесты.Устаревший
		|	И НЕ ТС_Тесты.ПометкаУдаления
		|	И НЕ ТС_Тесты.ЭтоГруппа
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТС_Тесты.НомерВопроса";
		
		Запрос.УстановитьПараметр("Раздел", Раздел);
		Запрос.УстановитьПараметр("Экзамен", Экзамен);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Результат.Очистить();
		Результат.Загрузить(РезультатЗапроса.Выгрузить());
		
		КоличествоВопросов = Результат.Количество();
		
	ИначеЕсли Режим = "Экзамен" Тогда
		
		Результат.Очистить();
		Раздел = 1;
		КоличествоВопросов = 0;
		
		Пока (Раздел <= 14) Цикл
			
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ПараметрыФормированияЗапросаДляОбновленияТестов.Курс КАК Курс,
			|	&Раздел КАК НомерРаздела
			|ПОМЕСТИТЬ ВТ_Курс
			|ИЗ
			|	РегистрСведений.ПараметрыФормированияЗапросаДляОбновленияТестов КАК ПараметрыФормированияЗапросаДляОбновленияТестов
			|ГДЕ
			|	НЕ ПараметрыФормированияЗапросаДляОбновленияТестов.Курс.ПометкаУдаления
			|	И ПараметрыФормированияЗапросаДляОбновленияТестов.Курс = &Экзамен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ТС_Тесты.Ссылка КАК РазделСсылка,
			|	ТС_Тесты.НомерРаздела КАК Раздел
			|ПОМЕСТИТЬ ВТ_Раздел
			|ИЗ
			|	Справочник.ТС_Тесты КАК ТС_Тесты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Курс КАК ВТ_Курс
			|		ПО ТС_Тесты.Владелец = ВТ_Курс.Курс
			|			И ТС_Тесты.НомерРаздела = ВТ_Курс.НомерРаздела
			|ГДЕ
			|	ТС_Тесты.ЭтоГруппа
			|	И НЕ ТС_Тесты.ПометкаУдаления
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТС_Тесты.Вопрос КАК Вопрос,
			|	ТС_Тесты.НомерВопроса КАК Номер,
			|	ВТ_Раздел.РазделСсылка КАК РазделСсылка,
			|	ВТ_Раздел.Раздел КАК Раздел
			|ИЗ
			|	ВТ_Раздел КАК ВТ_Раздел
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТС_Тесты КАК ТС_Тесты
			|		ПО ВТ_Раздел.РазделСсылка = ТС_Тесты.Родитель
			|ГДЕ
			|	НЕ ТС_Тесты.ПометкаУдаления
			|	И ТС_Тесты.Актуальный
			|	И НЕ ТС_Тесты.ЭтоГруппа";
			Запрос.УстановитьПараметр("Раздел", Раздел);
			Запрос.УстановитьПараметр("Экзамен", Экзамен);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВопросыРаздела.Очистить();
			ВопросыРаздела.Загрузить(РезультатЗапроса.Выгрузить());
			КоличествоВопросовРаздела = ВопросыРаздела.Количество();	
			
			Если КоличествоВопросовРаздела > 0 Тогда
				ГСЧ = Новый ГенераторСлучайныхЧисел(КоличествоВопросовРаздела + ТекущаяУниверсальнаяДатаВМиллисекундах());
				НомерВопроса = ГСЧ.СлучайноеЧисло(0, КоличествоВопросовРаздела-1);
				
				СтрокаРезультата = Результат.Добавить();
				СтрокаРезультата.РазделСсылка = ВопросыРаздела[НомерВопроса].РазделСсылка;
				СтрокаРезультата.Раздел = ВопросыРаздела[НомерВопроса].Раздел;
				СтрокаРезультата.Номер = ВопросыРаздела[НомерВопроса].Номер;
				СтрокаРезультата.ДанОтвет = 0;
				СтрокаРезультата.ОтветВерный = Ложь;
				СтрокаРезультата.ОтветПоказан = Ложь;
				КоличествоВопросов = КоличествоВопросов + 1;
			КонецЕсли;
			
			Раздел = Раздел + 1;
		КонецЦикла;
		
	ИначеЕсли Режим = "Все вопросы" Тогда
		
		Результат.Очистить();
		Раздел = 1;
		КоличествоВопросов = 0;
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		
		"ВЫБРАТЬ
		|	ПараметрыФормированияЗапросаДляОбновленияТестов.НомерРаздела КАК Раздел,
		|	ТС_Тесты.НомерВопроса КАК Номер,
		|	ТС_Тесты.Вопрос КАК Вопрос,
		|	ТС_Тесты.Родитель КАК РазделСсылка
		|ИЗ
		|	Справочник.ТС_Тесты КАК ТС_Тесты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыФормированияЗапросаДляОбновленияТестов КАК ПараметрыФормированияЗапросаДляОбновленияТестов
		|		ПО ТС_Тесты.Владелец = ПараметрыФормированияЗапросаДляОбновленияТестов.Курс
		|			И (ТС_Тесты.Владелец В ИЕРАРХИИ (&Экзамен)
		|				И НЕ ТС_Тесты.ПометкаУдаления
		|				И НЕ ТС_Тесты.ЭтоГруппа
		|				И НЕ ТС_Тесты.Устаревший)";
		
		Запрос.УстановитьПараметр("Экзамен", Экзамен);
		
		ВсеВопросы = Новый ТаблицаЗначений;
		ВсеВопросы = Запрос.Выполнить().Выгрузить();
		
		Результат.Очистить();
		Результат.Загрузить(ВсеВопросы);
		
		КоличествоВопросов = Результат.Количество();
		
	ИначеЕсли Режим = "Избранные вопросы" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ТС_ИзбранныеТесты.Тест.Родитель КАК Справочник.ТС_Тесты).НомерРаздела КАК Раздел,
		|	ТС_ИзбранныеТесты.Тест.НомерВопроса КАК Номер,
		|	0 КАК ДанОтвет,
		|	ЛОЖЬ КАК ОтветВерный,
		|	ЛОЖЬ КАК ОтветПоказан,
		|	ТС_ИзбранныеТесты.Тест.Родитель КАК РазделСсылка,
		|	ТС_ИзбранныеТесты.Тест КАК Тест
		|ИЗ
		|	РегистрСведений.ТС_ИзбранныеТесты КАК ТС_ИзбранныеТесты
		|ГДЕ
		|	ТС_ИзбранныеТесты.Курс В ИЕРАРХИИ(&Экзамен)
		|	И ТС_ИзбранныеТесты.Пользователь = &ТекПользователь";
		Запрос.УстановитьПараметр("ТекПользователь", ПараметрыСеанса.ТС_ТекущийПользователь);
		Запрос.УстановитьПараметр("Экзамен", Экзамен);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Результат.Очистить();
		Результат.Загрузить(РезультатЗапроса.Выгрузить());
		
		КоличествоВопросов = Результат.Количество();
		
		
	Иначе 
		Сообщить("Не выбран Режим. Как так получилось???");
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция ОбновитьВопрос()

	ОбновитьКартинкуВопросВИзбранном();
	
	СброситьВыделениеГрупп();
	
	Для Галка = 1 По 6 Цикл
		
		ОбновитьОтображениеКартинкиПриИзменении(Галка,Ложь); 
		Если Режим = "Учить" Тогда 
			Элементы["Команда_Галка" + Галка].Видимость = Ложь;
		Иначе
			Элементы["Команда_Галка" + Галка].Видимость = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	
	//Если Режим = "Учить" Тогда 
	//	//Элементы.Галка1.Видимость = Ложь;
	//	//Элементы.Галка2.Видимость = Ложь;
	//	//Элементы.Галка3.Видимость = Ложь;
	//	//Элементы.Галка4.Видимость = Ложь;
	//	//Элементы.Галка5.Видимость = Ложь;
	//	//Элементы.Галка6.Видимость = Ложь;
	//	Элементы.Команда_Галка1.Видимость = Ложь;
	//	Элементы.Команда_Галка2.Видимость = Ложь;
	//	Элементы.Команда_Галка3.Видимость = Ложь;
	//	Элементы.Команда_Галка4.Видимость = Ложь;
	//	Элементы.Команда_Галка5.Видимость = Ложь;
	//	Элементы.Команда_Галка6.Видимость = Ложь;

	//Иначе
	//	Элементы.Команда_Галка1.Видимость = Истина;
	//	Элементы.Команда_Галка2.Видимость = Истина;
	//	Элементы.Команда_Галка3.Видимость = Истина;
	//	Элементы.Команда_Галка4.Видимость = Истина;
	//	Элементы.Команда_Галка5.Видимость = Истина;
	//	Элементы.Команда_Галка6.Видимость = Истина;
	//КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТС_ТестыОтветы.Ответ КАК СТРОКА(1000)) КАК Ответ,
	|	ТС_ТестыОтветы.Ответ КАК ПолныйОтвет,
	|	ТС_ТестыОтветы.Ссылка.Вопрос КАК Вопрос,
	|	ТС_ТестыОтветы.Ссылка.Вопрос КАК ПолныйВопрос,
	|	ТС_ТестыОтветы.Правильный КАК ПравильныйОтвет,
	|	ТС_ТестыОтветы.Ссылка.Подсказка КАК Подсказка,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ТС_ТестыОтветы.Ссылка.Изображение КАК Справочник.ТС_Файлы).Изображение, НЕОПРЕДЕЛЕНО) КАК Файл
	|ИЗ
	|	Справочник.ТС_Тесты.Ответы КАК ТС_ТестыОтветы
	|ГДЕ
	|	ТС_ТестыОтветы.Ссылка.Владелец = &Экзамен
	|	И НЕ ТС_ТестыОтветы.Ссылка.ПометкаУдаления
	|	И НЕ ТС_ТестыОтветы.Ссылка.Устаревший
	|	И ТС_ТестыОтветы.Ссылка.НомерВопроса = &Номер
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТС_ТестыОтветы.НомерСтроки";
	Запрос.УстановитьПараметр("Номер", Результат[Номер-1].Номер);
	Запрос.УстановитьПараметр("Экзамен", Экзамен);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если ПеремешатьОтветы Тогда 
		РезультатЗапросаПеремешки = ПолучитьПеремешанныеОтветы();
		Если Не РезультатЗапросаПеремешки = Неопределено Тогда
			РезультатЗапроса = РезультатЗапросаПеремешки;
		КонецЕсли;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество()  = 0 ТОгда
		Возврат Ложь;
	КонецЕсли;
	
	Элементы.ГруппаОтвет1.Видимость = Ложь;
	Элементы.ГруппаОтвет2.Видимость = Ложь;
	Элементы.ГруппаОтвет3.Видимость = Ложь;
	Элементы.ГруппаОтвет4.Видимость = Ложь;
	Элементы.ГруппаОтвет5.Видимость = Ложь;
	Элементы.ГруппаОтвет6.Видимость = Ложь; 
	
	Элементы.Картинка.Видимость = Ложь;
	Элементы.Подсказка1.Видимость = Ложь;
	Элементы.ДанОтветПравильно.Видимость = Ложь;
	Элементы.ДанОтветНеправильно.Видимость = Ложь;
	Элементы.ДанОтветПоказан.Видимость = Ложь; 		
	Элементы.ПоказатьОтвет.Доступность = Истина;
	Элементы.ПодтвердитьОтвет.Видимость = Истина;
	//Элементы.Пропустить.Видимость = Истина;
	Элементы.Далее.Видимость = Истина;
	Элементы.Назад.Видимость = Истина;
	Элементы.ГруппаВопросИзбранный.Видимость = Истина;
	
	Если Режим = "Учить" Тогда 
		Элементы.ПоказатьОтвет.Видимость = Ложь;
		Элементы.ПодтвердитьОтвет.Видимость = Ложь;
		Элементы.Пропустить.Видимость = Ложь;
	ИначеЕсли Режим = "Экзамен" И ПараметрыПользователяСимуляцияЭкзамена Тогда
		Элементы.Подсказка.Видимость = Ложь;
		Элементы.ПоказатьОтвет.Видимость = Не ПараметрыПользователяСимуляцияЭкзамена; 
	Иначе
		Элементы.ПоказатьОтвет.Видимость = Истина;
	КонецЕсли;
	
	Галка1 = Ложь;
	Галка2 = Ложь;
	Галка3 = Ложь;
	Галка4 = Ложь;
	Галка5 = Ложь;
	Галка6 = Ложь;
	
	Элементы.Команда_Галка1.Доступность = Истина;
	Элементы.Команда_Галка2.Доступность = Истина;
	Элементы.Команда_Галка3.Доступность = Истина;
	Элементы.Команда_Галка4.Доступность = Истина;
	Элементы.Команда_Галка5.Доступность = Истина;
	Элементы.Команда_Галка6.Доступность = Истина;
	
	й = 1;
	
	Пока Выборка.Следующий() Цикл
		Если й = 1 Тогда
			Элементы.Ответ1.ЦветФона = ЦветаСтиля.ЦветФонаПоля;
			Вопрос =  Выборка.ПолныйВопрос;
			Подсказка =  Выборка.Подсказка;
			СформироватьПодсказку();
			Ответ1 = Выборка.ПолныйОтвет;
			Элементы.ГруппаОтвет1.Видимость = Истина;
			Если ЗначениеЗаполнено(Выборка.Файл) Тогда
				Элементы.Картинка.Видимость = Истина;
				Картинка = ПоместитьВоВременноеХранилище(Выборка.Файл.Получить(),ЭтаФорма.УникальныйИдентификатор) ;
				Элементы.Картинка.РазмерКартинки = РазмерКартинки.АвтоРазмер;	
			КонецЕсли;
			Если Выборка.ПравильныйОтвет Тогда 
				ПравильныйОтвет = й;
				Если Режим = "Учить" Тогда 
					Элементы.Ответ1.ЦветФона = Новый Цвет(25, 200, 25);	
				КонецЕсли;
			КонецЕсли;
		Иначе
			Элементы["Ответ"+й].ЦветФона = ЦветаСтиля.ЦветФонаПоля;
			ЭтотОбъект["Ответ"+й] = Выборка.ПолныйОтвет;
			Элементы["ГруппаОтвет"+й].Видимость = Истина;
			Если Выборка.ПравильныйОтвет Тогда 
				ПравильныйОтвет = й;
				Если Режим = "Учить" Тогда 
					Элементы["Ответ"+й].ЦветФона = Новый Цвет(25, 200, 25);	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		й = й + 1;
	КонецЦикла;
	
	Если Результат[Номер-1].ДанОтвет Тогда   //если 0 то ответа нет
		
		Если Не Режим = "Экзамен" Тогда 
			ЭтотОбъект["Галка"+Результат[Номер-1].ДанОтвет] = Истина;
			Элементы.Команда_Галка1.Доступность = Ложь;
			Элементы.Команда_Галка2.Доступность = Ложь;
			Элементы.Команда_Галка3.Доступность = Ложь;
			Элементы.Команда_Галка4.Доступность = Ложь;
			Элементы.Команда_Галка5.Доступность = Ложь;
			Элементы.Команда_Галка6.Доступность = Ложь;
			
			Элементы.ПодтвердитьОтвет.Видимость = Ложь;
			Элементы.Пропустить.Видимость = Ложь;
			Элементы.Далее.Видимость = Истина;
			Элементы.Назад.Видимость = Истина;

			
			Элементы.ПоказатьОтвет.Доступность = Ложь;
		КонецЕсли;
		
		//Ответы перемешиваются всегда, если включена опция 
		Для ВыбранныйОтвет = 1 По 6 цикл
			
			ВыбранаЭтаГалка = Ложь;
			
			Если Результат[Номер-1].ТекстОтвета = ЭтотОбъект["Ответ" + ВыбранныйОтвет] Тогда
				ВыбранаЭтаГалка = Истина;
				ДанОтвет = ВыбранныйОтвет;     
				Результат[Номер-1].ДанОтвет = ДанОтвет;
			КонецЕсли;
			
			ЭтотОбъект["Галка" + ВыбранныйОтвет] = ВыбранаЭтаГалка;
			
			//Обновим отображение галок
			ОбновитьОтображениеКартинки(ВыбранныйОтвет);
		КонецЦикла;
		
		//Визуально отметим выбранный вариант ответа:
		// голубой когда ответ показан или это симуляция экзамена    Новый Цвет(217, 237, 247)
		// зеленый - правильный ответ                                Новый Цвет(223, 240, 216)
		// красный - ответ не правильный                             Новый Цвет(242, 222, 222)
		Если Режим = "Экзамен" И ПараметрыПользователяСимуляцияЭкзамена Тогда
			Элементы.ДанОтветПоказан.Видимость = Истина;
			ПравильныйОтвет = ДанОтвет;
			ДанОтвет = "Ответ принят.";
			ЦветФона = Новый Цвет(217, 237, 247); 
		ИначеЕсли Результат[Номер-1].ОтветВерный Тогда
			// Показать что Ответ Верный
			ДанОтвет = "Правильно";
			Элементы.ДанОтветПравильно.Видимость = Истина;
			ЦветФона = Новый Цвет(223, 240, 216);
		Иначе
			// Показать что Ответ не Верный
			ПравильныйОтветТекст = ". Правильный ответ №" + ПравильныйОтвет;
			ДанОтвет = "Неправильно" + ПравильныйОтветТекст;
			Элементы.ДанОтветНеправильно.Видимость = Истина;
			ВыделитьОтвет(Результат[Номер-1].ДанОтвет, Новый Цвет(242, 222, 222));
			ЦветФона = Новый Цвет(223, 240, 216);
		КонецЕсли;
		
		ВыделитьОтвет(ПравильныйОтвет, ЦветФона);
		
	КонецЕсли;
	
	Если Результат[Номер-1].ОтветПоказан Тогда
		ПоказатьОтветСервер();
	КонецЕсли;

	Возврат Истина;
	
КонецФункции

Процедура ВыделитьОтвет(НомерОтвета, ЦветФона)
	Элементы["Ответ"+НомерОтвета].ЦветФона = ЦветФона;
КонецПроцедуры


Процедура СброситьВыделениеГрупп()
	
	Элементы.Ответ1.ЦветФона = ЦветаСтиля.ЦветФонаПоля;
	Элементы.Ответ2.ЦветФона = ЦветаСтиля.ЦветФонаПоля;
	Элементы.Ответ3.ЦветФона = ЦветаСтиля.ЦветФонаПоля;
	Элементы.Ответ4.ЦветФона = ЦветаСтиля.ЦветФонаПоля;
	Элементы.Ответ5.ЦветФона = ЦветаСтиля.ЦветФонаПоля;
	Элементы.Ответ6.ЦветФона = ЦветаСтиля.ЦветФонаПоля;
	
КонецПроцедуры


Процедура СформироватьПодсказку()
	
	
	ТабДокПодсказка.Очистить();
	Если Не ЗначениеЗаполнено(Подсказка) Тогда 
		Возврат;
	КонецЕсли;
	
	ПодсказкаМассив = СтрРазделить(Подсказка, Символы.ПС);
	
	НомерСтроки = 1;
	
	Для Каждого Значение Из ПодсказкаМассив Цикл
		
		Если Не ЗначениеЗаполнено(Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		//НомерОбласти = СтрШаблон("R%1C1",НомерСтроки);
		
		ЭтоКартинка = Ложь;
		Если СтрНайти(Значение, "img </Resource/") Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ТС_Файлы.Ссылка КАК Ссылка,
			|	ТС_Файлы.Изображение КАК Изображение
			|ИЗ
			|	Справочник.ТС_Файлы КАК ТС_Файлы
			|ГДЕ
			|	ТС_Файлы.удКомментарий = &Значение";
			
			Запрос.УстановитьПараметр("Значение", Значение);
			РезультатЗапроса = Запрос.Выполнить();
			Если Не РезультатЗапроса.Пустой() Тогда
				ЭтоКартинка = Истина;
			КонецЕсли;
			
			Если ЭтоКартинка Тогда
				Выборка = РезультатЗапроса.Выбрать();
				Выборка.Следующий();
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЭтоКартинка Тогда
			ОбластьТабДок = ТабДокПодсказка.Область(НомерСтроки,1,НомерСтроки, 5);
			ОбластьТабДок.Объединить();
			ОбластьТабДок.Картинка = Новый Картинка(Выборка.Изображение.Получить());
			ОбластьТабДок.РазмерКартинки = РазмерКартинки.Пропорционально;
		Иначе
			ОбластьТабДок = ТабДокПодсказка.Область(НомерСтроки,1,НомерСтроки, 10);
			ОбластьТабДок.Объединить();
			ОбластьТабДок.Текст = Значение;
			ОбластьТабДок.Шрифт = Новый Шрифт("Tahoma",10);
			ОбластьТабДок.РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
		КонецЕсли;
		НомерСтроки = НомерСтроки + 1;
		
		ОбластьТабДок.ШиринаКолонки = ПараметрыПользователяШиринаТекстаПодсказки;
		ОбластьТабДок.Шрифт = Новый Шрифт(,ПараметрыПользователяРазмерШрифтаПодсказки);
	КонецЦикла;
	
	
	ТабДокПодсказка.ВывестиГоризонтальныйРазделительСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура Начать(Команда)
	
	Начало = ТекущаяДата();
	
	Если ЗначениеЗаполнено(Экзамен) Тогда
		ЗаполнитьПараметрыТестированияПользователя(); 
		НачатьНаСервере();
	Иначе
		Сообщить("Выберите Экзамен");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Завершить(Команда)
	
	Элементы.Начать.Видимость = Истина; 
	Элементы.Завершить.Видимость = Ложь;
	Элементы.Режим.Видимость = Истина; 
	Элементы.Раздел.Доступность = Истина;
	Элементы.Экзамен.Доступность = Истина;  
	Элементы.ГруппаПеремешатьВопросыИОтветы.Доступность = Истина;

	Элементы.Подсказка.Видимость = Ложь;
	Элементы.ГруппаОтвет1.Видимость = Ложь;
	Элементы.ГруппаОтвет2.Видимость = Ложь;
	Элементы.ГруппаОтвет3.Видимость = Ложь;
	Элементы.ГруппаОтвет4.Видимость = Ложь;
	Элементы.ГруппаОтвет5.Видимость = Ложь;
	Элементы.ГруппаОтвет6.Видимость = Ложь;
	Элементы.Картинка.Видимость = Ложь;
	Элементы.Подсказка1.Видимость = Ложь;
	Элементы.ГруппаКнопокСнизу.Видимость = Ложь;
	Элементы.ДанОтветПравильно.Видимость = Ложь;
	Элементы.ДанОтветНеправильно.Видимость = Ложь;
	Элементы.ДанОтветПоказан.Видимость = Ложь;
	Элементы.ГруппаВопросИзбранный.Видимость = Ложь;
	Элементы.ПараметрыПользователя.Видимость = Истина;

	Окончание = ТекущаяДата();
	Вопрос = "";
	ДлительностьСек = Окончание - Начало;
	Часов = Цел(ДлительностьСек/3600);
	ДлительностьСек = ДлительностьСек -  Часов*3600;
	Минут = Цел(ДлительностьСек/60);
	ДлительностьСек = ДлительностьСек -  Минут*60;
	Секунд = ДлительностьСек;
	Длительность = СокрЛП(""+?(Часов>0,""+Часов+" ч ","")+?(Минут>0,""+Минут+" мин ","")+?(Секунд>0,""+Секунд+" с","")); 
	
	ПравильныхОтветов = 0;
	Для Каждого стр из Результат Цикл
		Если стр.ОтветВерный Тогда
			ПравильныхОтветов = ПравильныхОтветов + 1;
		КонецЕсли;
	КонецЦикла;
	ПроцентПравильных = 100*ПравильныхОтветов/КоличествоВопросов;
	ПроцентФорма = "("+Цел(ПроцентПравильных)+"%)";
	
	КоличествоПравильныхОтветов = ПравильныхОтветов;
	
	Элементы.ГруппаРезультат.Видимость = Истина;
	Если ПроцентПравильных < 85 Тогда
		Элементы.ГруппаРезультатПроцентНеСдан.Видимость = Истина;
	Иначе
		Элементы.ГруппаРезультатПроцентСдан.Видимость = Истина;
	КонецЕсли;
	
	ЭкзаменСтрока ="(" +Режим+ ?(Режим = "Раздел"," "+Раздел,"") + ") "+ Экзамен;
	
	ЗаполнитьРезультатыТестирования();

	Номер = 1;

	Если Не Режим = "Раздел" И Не Режим = "Учить" Тогда
		Раздел = 1;
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ПоказатьОтвет(Команда)
	
	ПоказатьОтветСервер();
	
КонецПроцедуры

&НаСЕрвере
Процедура ПоказатьОтветСервер()
	
	Галка1 = Ложь; 
	Галка2 = Ложь;
	Галка3 = Ложь;
	Галка4 = Ложь;
	Галка5 = Ложь;
	Галка6 = Ложь;
	
	Элементы.Команда_Галка1.Доступность = Ложь;
	Элементы.Команда_Галка2.Доступность = Ложь;
	Элементы.Команда_Галка3.Доступность = Ложь;
	Элементы.Команда_Галка4.Доступность = Ложь;
	Элементы.Команда_Галка5.Доступность = Ложь;
	Элементы.Команда_Галка6.Доступность = Ложь;
	
	
	ЭтотОбъект["Галка"+ПравильныйОтвет] = Истина;
	Результат[Номер-1].ОтветПоказан = Истина;
	Результат[Номер-1].ОтветВерный = Ложь;
	Результат[Номер-1].ДанОтвет = 0;
	
	ДанОтвет = "Просмотрен правильный ответ";
	Элементы.ДанОтветПоказан.Видимость = Истина; 
	
	Элементы["Ответ"+ПравильныйОтвет].ЦветФона = Новый Цвет(217, 237, 247);

	Элементы.ПодтвердитьОтвет.Видимость = Ложь;
	Элементы.Пропустить.Видимость = Ложь;
	Элементы.Далее.Видимость = Истина; 
	Элементы.Назад.Видимость = Истина;

	
	Элементы.ПоказатьОтвет.Доступность = Ложь;
	
	
КонецПроцедуры


&НаКлиенте
Процедура Подсказка(Команда)
	Элементы.Подсказка1.Видимость = НЕ Элементы.Подсказка1.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьОтвет(Команда)
	
	Если Галка1 или Галка2 или Галка3 или Галка4 или Галка5 или Галка6 Тогда      //Если есть ответ
		
		Элементы.ДанОтветПравильно.Видимость = Ложь;
		Элементы.ДанОтветНеправильно.Видимость = Ложь;
		Элементы.ДанОтветПоказан.Видимость = Ложь;
		
		
		Если Не Режим = "Экзамен" Тогда 
			Элементы.ПодтвердитьОтвет.Видимость = Ложь;
			Элементы.Пропустить.Видимость = Ложь;
			Элементы.Далее.Видимость = Истина;
			Элементы.Назад.Видимость = Истина;
			
			Элементы.ПоказатьОтвет.Доступность = Ложь;
			
			Элементы.Команда_Галка1.Доступность = Ложь;
			Элементы.Команда_Галка2.Доступность = Ложь;
			Элементы.Команда_Галка3.Доступность = Ложь;
			Элементы.Команда_Галка4.Доступность = Ложь;
			Элементы.Команда_Галка5.Доступность = Ложь;
			Элементы.Команда_Галка6.Доступность = Ложь;
		Иначе
			СброситьВыделениеГрупп();
		КонецЕсли;
		
		
		Результат[Номер-1].ОтветВерный = ЭтотОбъект["Галка"+ПравильныйОтвет];
		
		ДанОтвет = 0;
		ДанОтвет = ?(Галка1,1, ?(Галка2,2,?(Галка3,3,?(Галка4,4,?(Галка5,5,?(Галка6,6,0))))));
		
		Если Режим = "Экзамен" Или Не ЗначениеЗаполнено(Результат[Номер-1].ТекстОтвета)  Тогда
			Результат[Номер-1].ТекстОтвета = ЭтотОбъект["Ответ" + ДанОтвет];
		КонецЕсли;
		
		Результат[Номер-1].ДанОтвет = ДанОтвет;
		ВыделяемыйОтвет = ПравильныйОтвет;

		Если Режим = "Экзамен" И ПараметрыПользователяСимуляцияЭкзамена Тогда
			
			Если Не Строка(ПравильныйОтвет) = ДанОтвет Тогда
				ДобавитьВИзбранноеНаСервере(Ложь);
			КонецЕсли;
			
			ВыделяемыйОтвет = ДанОтвет;
			Элементы.ДанОтветПоказан.Видимость = Истина;
			ДанОтвет = "Ответ принят.";
			ЦветФона = Новый Цвет(217, 237, 247);
		ИначеЕсли Результат[Номер-1].ОтветВерный Тогда
			// Показать что Ответ Верный
			ДанОтвет = "Правильно";
			Элементы.ДанОтветПравильно.Видимость = Истина;
			Если Режим = "Избранные вопросы" Тогда
				ДобавитьВопросВИзбранноеИОбновитьКартинку(Истина);
			КонецЕсли;
			ЦветФона = Новый Цвет(223, 240, 216);
		Иначе
			ПравильныйОтветТекст = ". Правильный ответ №" + ПравильныйОтвет;
			
			// Показать что Ответ не Верный
			ДанОтвет = "Неправильно" + ПравильныйОтветТекст;
			Элементы.ДанОтветНеправильно.Видимость = Истина;
			ДобавитьВопросВИзбранноеИОбновитьКартинку(Ложь); 
			ВыделитьОтвет(Результат[Номер-1].ДанОтвет,Новый Цвет(242, 222, 222));
			
			ЦветФона = Новый Цвет(223, 240, 216);
		
		КонецЕсли;
		
		ВыделитьОтвет(ВыделяемыйОтвет, ЦветФона);
		//Элементы["Ответ"+ПравильныйОтвет].ЦветФона = ЦветФона;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Пропустить(Команда)
	
	Номер = Номер + 1;
	
	Если Номер > КоличествоВопросов Тогда
		Номер = КоличествоВопросов;
	КонецЕсли;
	
	ОбновитьВопрос();
		
КонецПроцедуры

&НаКлиенте
Процедура РежимПриИзменении(Элемент)
	Если Режим = "Раздел" или Режим = "Учить" Тогда
		Элементы.Раздел.Видимость = Истина;	
		Элементы.Номер.Видимость = Истина;	
	ИначеЕсли Режим = "Все вопросы" Тогда
		Элементы.Раздел.Видимость = Ложь;
		Элементы.Номер.Видимость = Истина;
	Иначе
		Элементы.Раздел.Видимость = Ложь;
		Элементы.Номер.Видимость = Истина;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Ответ1Нажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если ЗапретитьИзменениеОтветаПриНажатииНаОтвет() Тогда
		Возврат;
	КонецЕсли;
	
	Команда_Галка1(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура Ответ2Нажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Если ЗапретитьИзменениеОтветаПриНажатииНаОтвет() Тогда
		Возврат;
	КонецЕсли;

	Команда_Галка2(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура Ответ3Нажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Если ЗапретитьИзменениеОтветаПриНажатииНаОтвет() Тогда
		Возврат;
	КонецЕсли;

	Команда_Галка3(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура Ответ4Нажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Если ЗапретитьИзменениеОтветаПриНажатииНаОтвет() Тогда
		Возврат;
	КонецЕсли;

	Команда_Галка4(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура Ответ5Нажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Если ЗапретитьИзменениеОтветаПриНажатииНаОтвет() Тогда
		Возврат;
	КонецЕсли;

	Команда_Галка5(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура Ответ6Нажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Если ЗапретитьИзменениеОтветаПриНажатииНаОтвет() Тогда
		Возврат;
	КонецЕсли;

	Команда_Галка6(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Функция ЗапретитьИзменениеОтветаПриНажатииНаОтвет()
	
	Если ЗначениеЗаполнено(Результат[Номер-1].ДанОтвет) И Не (Режим = "Экзамен" И ПараметрыПользователяСимуляцияЭкзамена) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура Галка1ПриИзменении(Элемент)
	//Галка1 = Ложь;
	Галка2 = Ложь;
	Галка3 = Ложь;
	Галка4 = Ложь;
	Галка5 = Ложь;
	Галка6 = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Галка2ПриИзменении(Элемент)
	Галка1 = Ложь;
	//Галка2 = Ложь;
	Галка3 = Ложь;
	Галка4 = Ложь;
	Галка5 = Ложь;
	Галка6 = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Галка3ПриИзменении(Элемент)
	Галка1 = Ложь;
	Галка2 = Ложь;
	//Галка3 = Ложь;
	Галка4 = Ложь;
	Галка5 = Ложь;
	Галка6 = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Галка4ПриИзменении(Элемент)
	Галка1 = Ложь;
	Галка2 = Ложь;
	Галка3 = Ложь;
	//Галка4 = Ложь;
	Галка5 = Ложь;
	Галка6 = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Галка5ПриИзменении(Элемент)
	Галка1 = Ложь;
	Галка2 = Ложь;
	Галка3 = Ложь;
	Галка4 = Ложь;
	//Галка5 = Ложь;
	Галка6 = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Галка6ПриИзменении(Элемент)
	Галка1 = Ложь;
	Галка2 = Ложь;
	Галка3 = Ложь;
	Галка4 = Ложь;
	Галка5 = Ложь;
	//Галка6 = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	Элементы.ПодтвердитьОтвет.Видимость = Истина;
	//Элементы.Пропустить.Видимость = Истина;
	Элементы.Далее.Видимость = Ложь;
	
	Номер = Номер + 1;
	
	Если Номер > КоличествоВопросов Тогда
		Номер = КоличествоВопросов;
		Если Режим = "Учить" и Раздел < 14 Тогда
			Раздел = Раздел + 1;
			Номер = 1;
			НачатьНаСервере();
		КонецЕсли;
	ИначеЕсли Номер < 1 Тогда
		Номер = 1;
	КонецЕсли;

	Если ОбновитьВопрос() Тогда
		ОбновитьВопросПослеСменыВопроса();
	Иначе 
		Сообщить("Вопрос номер "+Номер + " Не найден!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
		
	Элементы.ПодтвердитьОтвет.Видимость = Истина;
	//Элементы.Пропустить.Видимость = Истина;
	Элементы.Назад.Видимость = Ложь;
	
	Номер = Номер - 1;
	
	Если Номер > КоличествоВопросов Тогда
		Номер = КоличествоВопросов;
		Если Режим = "Учить" и Раздел < 14 Тогда
			Раздел = Раздел - 1;
			
			Если Раздел < 1 Тогда
				Раздел = 1;
			КонецЕсли;
			
			Номер = 1;
			НачатьНаСервере();
		КонецЕсли;
	ИначеЕсли Номер < 1 Тогда
		Номер = 1;
	КонецЕсли;

	Если ОбновитьВопрос() Тогда
		ОбновитьВопросПослеСменыВопроса();
	Иначе 
		Сообщить("Вопрос номер "+Номер + " Не найден!");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасположениеВопросовПриИзменении(Элемент)
	
	Если РасположениеВопросов = "Вертикально" Тогда
		Элементы.ГруппаВопроса.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ИначеЕсли РасположениеВопросов = "Горизонтально если возможно" Тогда
		Элементы.ГруппаВопроса.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяЕслиВозможно;
	ИначеЕсли РасположениеВопросов = "Горизонтально" Тогда
		Элементы.ГруппаВопроса.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	КонецЕсли;		
		
КонецПроцедуры

&НаКлиенте
Процедура ЭкзаменОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Не ВыбранноеЗначениеЭтоГруппа(ВыбранноеЗначение) Или Не ДанныйКурсДоступенДляВыбора(ВыбранноеЗначение) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Данный курс недоступен для выбора.";
		Сообщение.Сообщить();
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыбранноеЗначениеЭтоГруппа(Значение)

	Возврат Значение.ЭтоГруппа;
	
КонецФункции

&НаСервереБезКонтекста
Функция ДанныйКурсДоступенДляВыбора(Значение)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПараметрыФормированияЗапросаДляОбновленияТестов.Курс КАК РазделКурсаСсылка
		|ИЗ
		|	РегистрСведений.ПараметрыФормированияЗапросаДляОбновленияТестов КАК ПараметрыФормированияЗапросаДляОбновленияТестов
		|ГДЕ
		|	ПараметрыФормированияЗапросаДляОбновленияТестов.Курс = &Курс
		|	И НЕ ПараметрыФормированияЗапросаДляОбновленияТестов.Курс.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Курс", Значение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПолучитьПеремешанныеОтветы()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ТС_ТестыОтветы.НомерСтроки) КАК КоличествоОтветов
	|ИЗ
	|	Справочник.ТС_Тесты.Ответы КАК ТС_ТестыОтветы
	|ГДЕ
	|	ТС_ТестыОтветы.Ссылка.Родитель = &Раздел
	|	И НЕ ТС_ТестыОтветы.Ссылка.ПометкаУдаления
	|	И НЕ ТС_ТестыОтветы.Ссылка.Устаревший
	|	И ТС_ТестыОтветы.Ссылка.НомерВопроса = &Номер
	|	И ТС_ТестыОтветы.Ссылка.ПеремешиватьОтветы";
	Запрос.УстановитьПараметр("Номер", Результат[Номер-1].Номер);
	Запрос.УстановитьПараметр("Раздел", Результат[Номер-1].РазделСсылка);
	Запрос.УстановитьПараметр("Экзамен", Экзамен);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	ГСЧ = Новый ГенераторСлучайныхЧисел();   
	
	КоличествоОтветов = Выборка.КоличествоОтветов;
	
	Если КоличествоОтветов = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	 
	
	ТаблицаПоследовательностьОтветов = Новый ТаблицаЗначений;
	ТаблицаПоследовательностьОтветов.Колонки.Добавить("НомерВопроса", Новый ОписаниеТипов("Число"));
	ТаблицаПоследовательностьОтветов.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число"));
	
	ТекущийНомер = 1;
	Пока Не КоличествоОтветов = ТаблицаПоследовательностьОтветов.Количество() Цикл
		
		НовоеЧисло = ГСЧ.СлучайноеЧисло(1, КоличествоОтветов);
		
		Если ТаблицаПоследовательностьОтветов.Найти(НовоеЧисло, "НомерВопроса") = Неопределено Тогда
			
			СтрокаТЧ = ТаблицаПоследовательностьОтветов.Добавить();
			СтрокаТЧ.НомерВопроса = НовоеЧисло; 
			СтрокаТЧ.Порядок = ТекущийНомер;
			
			ТекущийНомер = ТекущийНомер + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПорядокОтветов.НомерВопроса КАК НомерВопроса,
	|	ПорядокОтветов.Порядок КАК Порядок
	|ПОМЕСТИТЬ ВТ_НомераОтветов
	|ИЗ
	|	&ПорядокОтветов КАК ПорядокОтветов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НомераОтветов.НомерВопроса КАК НомерВопроса,
	|	ВЫРАЗИТЬ(ТС_ТестыОтветы.Ответ КАК СТРОКА(1000)) КАК Ответ,
	|	ТС_ТестыОтветы.Ответ КАК ПолныйОтвет,
	|	ТС_ТестыОтветы.Ссылка.Вопрос КАК Вопрос,
	|	ТС_ТестыОтветы.Ссылка.Вопрос КАК ПолныйВопрос,
	|	ТС_ТестыОтветы.Правильный КАК ПравильныйОтвет,
	|	ТС_ТестыОтветы.Ссылка.Подсказка КАК Подсказка,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ТС_ТестыОтветы.Ссылка.Изображение КАК Справочник.ТС_Файлы).Изображение, НЕОПРЕДЕЛЕНО) КАК Файл
	|ИЗ
	|	ВТ_НомераОтветов КАК ВТ_НомераОтветов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТС_Тесты.Ответы КАК ТС_ТестыОтветы
	|		ПО ВТ_НомераОтветов.НомерВопроса = ТС_ТестыОтветы.НомерСтроки
	|ГДЕ
	|	ТС_ТестыОтветы.Ссылка.Родитель = &Раздел
	|	И НЕ ТС_ТестыОтветы.Ссылка.ПометкаУдаления
	|	И НЕ ТС_ТестыОтветы.Ссылка.Устаревший
	|	И ТС_ТестыОтветы.Ссылка.НомерВопроса = &Номер
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_НомераОтветов.Порядок";
	Запрос.УстановитьПараметр("ПорядокОтветов", ТаблицаПоследовательностьОтветов);
	Запрос.УстановитьПараметр("Номер", Результат[Номер-1].Номер);
	Запрос.УстановитьПараметр("Раздел", Результат[Номер-1].РазделСсылка);
	Запрос.УстановитьПараметр("Экзамен", Экзамен);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
	
КонецФункции // ПолучитьПеремешанныеОтветы()

&НаКлиенте
Процедура ДобавитьВИзбранное(Команда)
	
	УдалитьКартинку = ВопросВИзбранном();
	ДобавитьВопросВИзбранноеИОбновитьКартинку(УдалитьКартинку);
	
КонецПроцедуры

Процедура ДобавитьВопросВИзбранноеИОбновитьКартинку(УдалитьТест)
	
	Если ДобавитьВИзбранноеНаСервере(УдалитьТест) Тогда 
		ОбновитьКартинкуВопросВИзбранном();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДобавитьВИзбранноеНаСервере(УдалитьТест)
	
	Тест = СсылкаНаТекущийТест();
	
	НаборЗаписей = РегистрыСведений.ТС_ИзбранныеТесты.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Курс.Значение = Экзамен;
	НаборЗаписей.Отбор.Курс.Использование = Истина;
	НаборЗаписей.Отбор.Пользователь.Значение = ПараметрыСеанса.ТС_ТекущийПользователь;
	НаборЗаписей.Отбор.Пользователь.Использование = Истина;
	НаборЗаписей.Отбор.Тест.Значение = Тест;
	НаборЗаписей.Отбор.Тест.Использование = Истина;
	НаборЗаписей.Прочитать();
	
	Если УдалитьТест Тогда		
		НаборЗаписей.Очистить();
	Иначе
		
		Если НаборЗаписей.Количество() = 0 Тогда
			ЗаписьНабора = НаборЗаписей.Добавить();
		Иначе
			ЗаписьНабора = НаборЗаписей[0];
		КонецЕсли;
		
		ЗаписьНабора.Курс = Экзамен;
		ЗаписьНабора.Пользователь = ПараметрыСеанса.ТС_ТекущийПользователь;
		ЗаписьНабора.Тест = Тест; 
	КонецЕсли;
	
	Попытка
		НаборЗаписей.Записать(Истина);
		Возврат Истина;
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки
			
КонецФункции

&НаСервере
Процедура ОбновитьКартинкуВопросВИзбранном()
	
	Если ВопросВИзбранном() Тогда
		Элементы.ДобавитьВИзбранное.Картинка = БиблиотекаКартинок.ТС_ИзбранноеПомещен;
	Иначе
		Элементы.ДобавитьВИзбранное.Картинка = БиблиотекаКартинок.ТС_Избранное;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВопросВИзбранном()
	
	Тест = СсылкаНаТекущийТест();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТС_ИзбранныеТесты.Тест КАК Тест
		|ИЗ
		|	РегистрСведений.ТС_ИзбранныеТесты КАК ТС_ИзбранныеТесты
		|ГДЕ
		|	ТС_ИзбранныеТесты.Тест = &Тест
		|	И ТС_ИзбранныеТесты.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Тест", Тест); 
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТС_ТекущийПользователь);
	
	РезультатЗапроса = Запрос.Выполнить();

	Возврат Не РезультатЗапроса.Пустой();
КонецФункции

&НаСервере
Функция СсылкаНаТекущийТест()
	
	ТекСтрокаРеультат = Результат[Номер-1];
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТС_Тесты.Ссылка КАК Тест
	|ИЗ
	|	Справочник.ТС_Тесты КАК ТС_Тесты
	|ГДЕ
	|	ТС_Тесты.Родитель = &Родитель
	|	И ТС_Тесты.НомерВопроса = &НомерВопроса
	|	И НЕ ТС_Тесты.ПометкаУдаления
	|	И НЕ ТС_Тесты.Устаревший";
	
	Запрос.УстановитьПараметр("НомерВопроса", ТекСтрокаРеультат.Номер);
	Запрос.УстановитьПараметр("Родитель", ТекСтрокаРеультат.РазделСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Тест;
	
КонецФункции

&НаКлиенте
Процедура ПараметрыПользователя(Команда)
	//ОткрытьФорму("РегистрСведений.ПараметрыТестированияПользователя.Форма.ФормаНастройкиПараметров",, ЭтотОбъект, УникальныйИдентификатор);
	ОткрытьФорму("Обработка.Тестирование2.Форма.ФормаНастройкиПользователя",, ЭтотОбъект, УникальныйИдентификатор);
КонецПроцедуры

&НаСервере
Процедура ПеремешатьВопросыНаСервере()
	
	ГНЧ = Новый ГенераторСлучайныхЧисел();
	
	КоличествоПеремешиваний = Результат.Количество();
	Для НомерПеребора = 1 По КоличествоПеремешиваний Цикл
		Индекс = ГНЧ.СлучайноеЧисло(0, Результат.Количество()-1);
		Стр = Результат[Индекс];
		Результат.Удалить(Индекс);
		ЗаполнитьЗначенияСвойств(Результат.Добавить(), Стр);
	КонецЦикла;

	
	
КонецПроцедуры

Процедура ЗаполнитьРезультатыТестирования()
	
	РезультатПрохожденияПодробно.Очистить();
	
	Если Режим = "Учить" Тогда
		Элементы.ГруппаРезультатПрохожденияПодробно.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаРезультатПрохожденияПодробно.Видимость = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТ_Результат.Раздел КАК Раздел,
	|	ВТ_Результат.Номер КАК Номер,
	|	ВТ_Результат.ОтветВерный КАК ОтветВерный,
	|	&Экзамен КАК Курс,
	|	АВТОНОМЕРЗАПИСИ() КАК Порядок
	|ПОМЕСТИТЬ ВТ_Результат
	|ИЗ
	|	&Результат КАК ВТ_Результат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Результат.Порядок КАК Номер,
	|	ТС_Тесты.Вопрос КАК Вопрос,
	|	ВЫБОР
	|		КОГДА ВТ_Результат.ОтветВерный
	|			ТОГДА ""1/1""
	|		ИНАЧЕ ""0/1""
	|	КОНЕЦ КАК Ответ
	|ИЗ
	|	ВТ_Результат КАК ВТ_Результат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТС_Тесты КАК ТС_Тесты
	|		ПО ВТ_Результат.Курс = ТС_Тесты.Владелец
	|			И ВТ_Результат.Номер = ТС_Тесты.НомерВопроса
	|			И ВТ_Результат.Раздел = ТС_Тесты.Родитель.НомерРаздела
	|ГДЕ
	|	НЕ ТС_Тесты.ПометкаУдаления
	|	И НЕ ТС_Тесты.Устаревший
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_Результат.Порядок";
	
	Запрос.УстановитьПараметр("Экзамен", Экзамен);
	Запрос.УстановитьПараметр("Результат", Результат.Выгрузить());
	
	
	Если Режим = "Все вопросы" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВТ_Результат.Раздел = ТС_Тесты.Родитель.НомерРаздела", "");
	КонецЕсли;
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Макет = ПолучитьОбщийМакет("МакетРезультатТестирования");
	ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
	ОбластьСтрокаТЧ = Макет.ПолучитьОбласть("ОбластьСтрокаТЧ");
	
	
	РезультатПрохожденияПодробно.Вывести(ОбластьШапка);
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ОбластьСтрокаТЧ.Параметры, Выборка);
		РезультатПрохожденияПодробно.Вывести(ОбластьСтрокаТЧ);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Команда_Галка1(Команда)
	
	Для Счетчик = 1 По 6 Цикл
		
		Выбран = Ложь;
		
		Если Счетчик = 1 Тогда
			Выбран = Истина;
		КонецЕсли;
		
		ОбновитьОтображениеКартинкиПриИзменении(Счетчик, Выбран);
		
	КонецЦикла;
	
	Если ПараметрыПользователяПереходитьКСледующемуВопросуПослеОтвета Тогда
		ПерейтиКСледующемуВопросу();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Команда_Галка2(Команда)
	
	Для Счетчик = 1 По 6 Цикл
		
		Выбран = Ложь;
		
		Если Счетчик = 2 Тогда
			Выбран = Истина;
		КонецЕсли;
		
		ОбновитьОтображениеКартинкиПриИзменении(Счетчик, Выбран);
		
	КонецЦикла;
	
	Если ПараметрыПользователяПереходитьКСледующемуВопросуПослеОтвета Тогда
		ПерейтиКСледующемуВопросу();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Команда_Галка3(Команда)
	
	Для Счетчик = 1 По 6 Цикл
		
		Выбран = Ложь;
		
		Если Счетчик = 3 Тогда
			Выбран = Истина;
		КонецЕсли;
		
		ОбновитьОтображениеКартинкиПриИзменении(Счетчик, Выбран);
		
	КонецЦикла;
	
	Если ПараметрыПользователяПереходитьКСледующемуВопросуПослеОтвета Тогда
		ПерейтиКСледующемуВопросу();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Команда_Галка4(Команда)
	
	Для Счетчик = 1 По 6 Цикл
		
		Выбран = Ложь;
		
		Если Счетчик = 4 Тогда
			Выбран = Истина;
		КонецЕсли;
		
		ОбновитьОтображениеКартинкиПриИзменении(Счетчик, Выбран);
		
	КонецЦикла;
	
	Если ПараметрыПользователяПереходитьКСледующемуВопросуПослеОтвета Тогда
		ПерейтиКСледующемуВопросу();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Команда_Галка5(Команда)
	
	Для Счетчик = 1 По 6 Цикл
		
		Выбран = Ложь;
		
		Если Счетчик = 5 Тогда
			Выбран = Истина;
		КонецЕсли;
		
		ОбновитьОтображениеКартинкиПриИзменении(Счетчик, Выбран);
		
	КонецЦикла;
	
	Если ПараметрыПользователяПереходитьКСледующемуВопросуПослеОтвета Тогда
		ПерейтиКСледующемуВопросу();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Команда_Галка6(Команда)
	
	Для Счетчик = 1 По 6 Цикл
		
		Выбран = Ложь;
		
		Если Счетчик = 6 Тогда
			Выбран = Истина;
		КонецЕсли;
		
		ОбновитьОтображениеКартинкиПриИзменении(Счетчик, Выбран);
		
	КонецЦикла;
	
	Если ПараметрыПользователяПереходитьКСледующемуВопросуПослеОтвета Тогда
		ПерейтиКСледующемуВопросу();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКСледующемуВопросу()
	
	ПодтвердитьОтвет(Неопределено);
	
	Если Режим = "Экзамен" И ПараметрыПользователяСимуляцияЭкзамена Тогда
		СледующийВопрос = Истина;
	ИначеЕсли Результат[Номер-1].ОтветВерный Тогда
		СледующийВопрос = Истина;
	ИначеЕсли Не Результат[Номер-1].ОтветВерный И ПараметрыПользователяПропускатьНеправильныеОтветы Тогда 
		СледующийВопрос = Истина;
	Иначе
		СледующийВопрос = Ложь;
	КонецЕсли;
	
	Если СледующийВопрос Тогда
		Далее(Неопределено);
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура НомерПриИзмененииКнопками()
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображениеКартинкиПриИзменении(НомерГалки = 1, Выбран = Ложь)
	
	ЭтотОбъект["Галка" + НомерГалки] = Выбран;
	ОбновитьОтображениеКартинки(НомерГалки);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображениеКартинки(НомерГалки = 1)
	
	Выбран = ЭтотОбъект["Галка" + НомерГалки];
	
	Если Выбран Тогда
		Элементы["Команда_Галка" + НомерГалки].Картинка = БиблиотекаКартинок.ФлагУстановлен;
	Иначе
		Элементы["Команда_Галка" + НомерГалки].Картинка = БиблиотекаКартинок.ФлагНеУстановлен;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НомерОткрытие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = ПолучитьПараметрыОткрытияФормы();
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОткрытиеФормыНомеровВопросовЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.Тестирование2.Форма.ФормаНомераВопросов", ПараметрыФормы, ЭтотОбъект, УникальныйИдентификатор,,,ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыОткрытияФормы()
	
	ПараметрыФормы = Новый Структура;  
	
	ТЧ_Результат = Результат.Выгрузить(,"Номер,ДанОтвет,ОтветВерный,ОтветПоказан");
	
	ПараметрыФормы.Вставить("ХранилищеРезультат", ПоместитьВоВременноеХранилище(ТЧ_Результат));
	ПараметрыФормы.Вставить("Режим", Режим);
	ПараметрыФормы.Вставить("СимуляцияЭкзамена", ПараметрыПользователяСимуляцияЭкзамена);
	
	Возврат ПараметрыФормы;
	
КонецФункции

&НаКлиенте
Процедура ОткрытиеФормыНомеровВопросовЗавершение(ВыбранныйВопрос, Параметры) Экспорт
	
	Если ЗначениеЗаполнено(ВыбранныйВопрос)Тогда
		Номер = ВыбранныйВопрос;
		НомерПриИзменении(Неопределено);
	КонецЕсли;
	
КонецПроцедуры






